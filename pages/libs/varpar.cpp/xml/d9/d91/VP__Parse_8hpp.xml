<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.15.0" xml:lang="en-US">
  <compounddef id="d9/d91/VP__Parse_8hpp" kind="file" language="C++">
    <compoundname>VP_Parse.hpp</compoundname>
    <includes refid="db/d4c/VPpredefines_8hpp" local="yes">VPpredefines.hpp</includes>
    <includes local="no">string</includes>
    <includes local="no">vector</includes>
    <includes local="no">map</includes>
    <includedby refid="db/de3/VP__Parse_8cpp" local="yes">src/VP_Parse.cpp</includedby>
    <incdepgraph>
      <node id="1">
        <label>inc/varparse.cpp/VP_Parse.hpp</label>
        <link refid="d9/d91/VP__Parse_8hpp"/>
        <childnode refid="2" relation="include">
        </childnode>
        <childnode refid="3" relation="include">
        </childnode>
        <childnode refid="4" relation="include">
        </childnode>
        <childnode refid="5" relation="include">
        </childnode>
      </node>
      <node id="2">
        <label>VPpredefines.hpp</label>
        <link refid="db/d4c/VPpredefines_8hpp"/>
      </node>
      <node id="5">
        <label>map</label>
      </node>
      <node id="3">
        <label>string</label>
      </node>
      <node id="4">
        <label>vector</label>
      </node>
    </incdepgraph>
    <invincdepgraph>
      <node id="1">
        <label>inc/varparse.cpp/VP_Parse.hpp</label>
        <link refid="d9/d91/VP__Parse_8hpp"/>
        <childnode refid="2" relation="include">
        </childnode>
      </node>
      <node id="2">
        <label>src/VP_Parse.cpp</label>
        <link refid="db/de3/VP__Parse_8cpp"/>
      </node>
    </invincdepgraph>
    <innerclass refid="de/d69/classvp_1_1Parser" prot="public">vp::Parser</innerclass>
    <innerclass refid="d7/d4d/structvp_1_1ParserReturn" prot="public">vp::ParserReturn</innerclass>
    <innerclass refid="d9/d86/structvp_1_1ParserStatus" prot="public">vp::ParserStatus</innerclass>
    <innernamespace refid="d3/d0a/namespacevp">vp</innernamespace>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <programlisting>
<codeline lineno="1"><highlight class="preprocessor">#pragma<sp/>once</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2"><highlight class="normal"></highlight></codeline>
<codeline lineno="3"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="db/d4c/VPpredefines_8hpp" kindref="compound">VPpredefines.hpp</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4"><highlight class="normal"></highlight></codeline>
<codeline lineno="5"><highlight class="normal"></highlight><highlight class="preprocessor">#if<sp/>VP_DEFAULT_CPP_STD<sp/>&gt;=<sp/>__cplusplus</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="6"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;string&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="7"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;vector&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="8"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;map&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="9"><highlight class="normal"></highlight></codeline>
<codeline lineno="10" refid="d3/d0a/namespacevp" refkind="compound"><highlight class="normal"></highlight><highlight class="keyword">namespace<sp/></highlight><highlight class="normal"><ref refid="d3/d0a/namespacevp" kindref="compound">vp</ref></highlight></codeline>
<codeline lineno="11"><highlight class="normal">{</highlight><highlight class="comment"></highlight></codeline>
<codeline lineno="12"><highlight class="comment"><sp/><sp/><sp/><sp/>/**</highlight></codeline>
<codeline lineno="13"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/>*<sp/>@brief<sp/>Set<sp/>the<sp/>error<sp/>and<sp/>if<sp/>the<sp/>`Parser`<sp/>class<sp/>was<sp/>constructed</highlight></codeline>
<codeline lineno="14"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="15" refid="d9/d86/structvp_1_1ParserStatus" refkind="compound"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="d9/d86/structvp_1_1ParserStatus" kindref="compound">ParserStatus</ref></highlight></codeline>
<codeline lineno="16"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="17" refid="d9/d86/structvp_1_1ParserStatus_1a4fca833cc9bbee7722793c48961dfac3" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>std::string<sp/><ref refid="d9/d86/structvp_1_1ParserStatus_1a4fca833cc9bbee7722793c48961dfac3" kindref="member">error</ref>;</highlight></codeline>
<codeline lineno="18"><highlight class="normal"></highlight></codeline>
<codeline lineno="19" refid="d9/d86/structvp_1_1ParserStatus_1a6c74cdf7a1ba1706ea10f90f1c180195" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="d9/d86/structvp_1_1ParserStatus_1a6c74cdf7a1ba1706ea10f90f1c180195" kindref="member">constructed</ref><sp/>=<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="20" refid="d3/d0a/namespacevp_1a03bdbb3011959e2cb9b0256ae4931c3f" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/>}<sp/><ref refid="d3/d0a/namespacevp_1a03bdbb3011959e2cb9b0256ae4931c3f" kindref="member">ParserStatus</ref>;</highlight></codeline>
<codeline lineno="21"><highlight class="normal"></highlight><highlight class="comment"></highlight></codeline>
<codeline lineno="22"><highlight class="comment"><sp/><sp/><sp/><sp/>/**</highlight></codeline>
<codeline lineno="23"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/>*<sp/>@brief<sp/>Returned<sp/>parser<sp/>information</highlight></codeline>
<codeline lineno="24"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/>*<sp/>This<sp/>includes<sp/>the<sp/>configuration,<sp/>output<sp/>and<sp/>success<sp/>of<sp/>the<sp/>`Parser`</highlight></codeline>
<codeline lineno="25"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="26" refid="d7/d4d/structvp_1_1ParserReturn" refkind="compound"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="d7/d4d/structvp_1_1ParserReturn" kindref="compound">ParserReturn</ref></highlight></codeline>
<codeline lineno="27"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="28" refid="d7/d4d/structvp_1_1ParserReturn_1a5b16b9a13d4b625f74f04b39aa8cb5e7" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>std::map&lt;std::string,<sp/>std::string&gt;<sp/><ref refid="d7/d4d/structvp_1_1ParserReturn_1a5b16b9a13d4b625f74f04b39aa8cb5e7" kindref="member">config</ref>;</highlight></codeline>
<codeline lineno="29"><highlight class="normal"></highlight></codeline>
<codeline lineno="30" refid="d7/d4d/structvp_1_1ParserReturn_1a267f1f83e2befc4d2c5504a7e64921ce" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>std::vector&lt;std::string&gt;<sp/><ref refid="d7/d4d/structvp_1_1ParserReturn_1a267f1f83e2befc4d2c5504a7e64921ce" kindref="member">output</ref>;</highlight></codeline>
<codeline lineno="31"><highlight class="normal"></highlight></codeline>
<codeline lineno="32" refid="d7/d4d/structvp_1_1ParserReturn_1af7053f12cfba17ae795d246fcb7f33d3" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="d7/d4d/structvp_1_1ParserReturn_1af7053f12cfba17ae795d246fcb7f33d3" kindref="member">success</ref><sp/>=<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="33" refid="d3/d0a/namespacevp_1a7b57f4f0e8a0b3826aae9c210d9aff9e" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/>}<sp/><ref refid="d3/d0a/namespacevp_1a7b57f4f0e8a0b3826aae9c210d9aff9e" kindref="member">ParserReturn</ref>;</highlight></codeline>
<codeline lineno="34"><highlight class="normal"></highlight></codeline>
<codeline lineno="35" refid="de/d69/classvp_1_1Parser" refkind="compound"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">class<sp/></highlight><highlight class="normal"><ref refid="de/d69/classvp_1_1Parser_1a46d7a7260cc6704bd09a757ad8015fbf" kindref="member">Parser</ref></highlight></codeline>
<codeline lineno="36"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="37"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">private</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="38" refid="de/d69/classvp_1_1Parser_1a984f4a6ce9f5578af0edd6878b1f583b" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>std::string<sp/><ref refid="de/d69/classvp_1_1Parser_1a984f4a6ce9f5578af0edd6878b1f583b" kindref="member">id</ref>;</highlight></codeline>
<codeline lineno="39" refid="de/d69/classvp_1_1Parser_1a0dba0d4012b3aa1ad16d58a89c1597ce" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>std::string<sp/><ref refid="de/d69/classvp_1_1Parser_1a0dba0d4012b3aa1ad16d58a89c1597ce" kindref="member">fpath</ref>;</highlight></codeline>
<codeline lineno="40"><highlight class="normal"></highlight></codeline>
<codeline lineno="41" refid="de/d69/classvp_1_1Parser_1ada8181e33a36ab0da77b9c8785ca9c8f" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="d9/d86/structvp_1_1ParserStatus" kindref="compound">ParserStatus</ref><sp/><ref refid="de/d69/classvp_1_1Parser_1ada8181e33a36ab0da77b9c8785ca9c8f" kindref="member">status</ref>;</highlight></codeline>
<codeline lineno="42" refid="de/d69/classvp_1_1Parser_1ab1ce18785fdc3d4014af72c8892a5456" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="d7/d4d/structvp_1_1ParserReturn" kindref="compound">ParserReturn</ref><sp/><ref refid="de/d69/classvp_1_1Parser_1ab1ce18785fdc3d4014af72c8892a5456" kindref="member">parseRet</ref>;</highlight></codeline>
<codeline lineno="43"><highlight class="normal"></highlight></codeline>
<codeline lineno="44" refid="de/d69/classvp_1_1Parser_1a3a32b1c7ced72af69a654e2be9b05bab" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>std::string<sp/><ref refid="de/d69/classvp_1_1Parser_1a3a32b1c7ced72af69a654e2be9b05bab" kindref="member">extension</ref>;</highlight></codeline>
<codeline lineno="45"><highlight class="normal"></highlight></codeline>
<codeline lineno="46"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">protected</highlight><highlight class="normal">:</highlight><highlight class="comment"></highlight></codeline>
<codeline lineno="47"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>/**</highlight></codeline>
<codeline lineno="48"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*<sp/>@brief<sp/>Private<sp/>member<sp/>of<sp/>the<sp/>parse<sp/>function</highlight></codeline>
<codeline lineno="49"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*<sp/>@return<sp/>ParserReturn<sp/>Parsed<sp/>information</highlight></codeline>
<codeline lineno="50"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="51"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">virtual</highlight><highlight class="normal"><sp/><ref refid="d7/d4d/structvp_1_1ParserReturn" kindref="compound">ParserReturn</ref><sp/><ref refid="de/d69/classvp_1_1Parser_1a73b347e24a79937ef18dcd8fb91e4583" kindref="member">__parse</ref>();</highlight></codeline>
<codeline lineno="52"><highlight class="normal"></highlight></codeline>
<codeline lineno="53"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal">:</highlight><highlight class="comment"></highlight></codeline>
<codeline lineno="54"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>/**</highlight></codeline>
<codeline lineno="55"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*<sp/>@brief<sp/>Create<sp/>the<sp/>object,<sp/>set<sp/>errors<sp/>if<sp/>there<sp/>are<sp/>and<sp/>set<sp/>some<sp/>configuration<sp/>from<sp/>the<sp/>parameters</highlight></codeline>
<codeline lineno="56"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*<sp/>@param<sp/>_id<sp/>Set<sp/>the<sp/>ID<sp/>of<sp/>the<sp/>object</highlight></codeline>
<codeline lineno="57"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*<sp/>@param<sp/>_file<sp/>Set<sp/>the<sp/>path<sp/>of<sp/>the<sp/>file</highlight></codeline>
<codeline lineno="58"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*<sp/>@param<sp/>_extension<sp/>Set<sp/>the<sp/>file<sp/>extension</highlight></codeline>
<codeline lineno="59"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="60"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="de/d69/classvp_1_1Parser_1a46d7a7260cc6704bd09a757ad8015fbf" kindref="member">Parser</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>std::string<sp/>&amp;_id,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>std::string<sp/>&amp;_file,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>std::string<sp/>&amp;_extension<sp/>=<sp/></highlight><highlight class="stringliteral">&quot;.varpar&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="61"><highlight class="normal"></highlight><highlight class="comment"></highlight></codeline>
<codeline lineno="62"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>/**</highlight></codeline>
<codeline lineno="63"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*<sp/>@brief<sp/>Deconstructor</highlight></codeline>
<codeline lineno="64"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="65" refid="de/d69/classvp_1_1Parser_1a9973f22c277eea48e1e562c314968bd0" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="de/d69/classvp_1_1Parser_1a9973f22c277eea48e1e562c314968bd0" kindref="member">~Parser</ref>();</highlight></codeline>
<codeline lineno="66"><highlight class="normal"></highlight><highlight class="comment"></highlight></codeline>
<codeline lineno="67"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>/**</highlight></codeline>
<codeline lineno="68"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*<sp/>@brief<sp/>Public<sp/>API<sp/>wrapper<sp/>for<sp/>`Parser::__parse()`<sp/>function</highlight></codeline>
<codeline lineno="69"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*<sp/>@return<sp/>ParserReturn<sp/>Parsed<sp/>information</highlight></codeline>
<codeline lineno="70"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="71"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="d7/d4d/structvp_1_1ParserReturn" kindref="compound">ParserReturn</ref><sp/><ref refid="de/d69/classvp_1_1Parser_1a765a0d08947ed756cd3bb75f03fd2909" kindref="member">parse</ref>();</highlight></codeline>
<codeline lineno="72"><highlight class="normal"></highlight><highlight class="comment"></highlight></codeline>
<codeline lineno="73"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>/**</highlight></codeline>
<codeline lineno="74"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*<sp/>@brief<sp/>Get<sp/>value<sp/>of<sp/>_key</highlight></codeline>
<codeline lineno="75"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*<sp/>@param<sp/>_key<sp/>Key<sp/>value<sp/>to<sp/>find</highlight></codeline>
<codeline lineno="76"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*<sp/>@return<sp/>std::string<sp/>Return<sp/>the<sp/>value</highlight></codeline>
<codeline lineno="77"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="78"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>std::string<sp/><ref refid="de/d69/classvp_1_1Parser_1a4dd4f68395787602c1536fb695081087" kindref="member">getVal</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>std::string<sp/>&amp;_key)<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="79"><highlight class="normal"></highlight><highlight class="comment"></highlight></codeline>
<codeline lineno="80"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>/**</highlight></codeline>
<codeline lineno="81"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*<sp/>@brief<sp/>Get<sp/>the<sp/>constructed<sp/>starts</highlight></codeline>
<codeline lineno="82"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*<sp/>@return<sp/>ParserStatus</highlight></codeline>
<codeline lineno="83"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="84"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="d9/d86/structvp_1_1ParserStatus" kindref="compound">ParserStatus</ref><sp/><ref refid="de/d69/classvp_1_1Parser_1a27ffd0fb917c5adbefcfce4ebf001033" kindref="member">checkStatus</ref>()<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="85"><highlight class="normal"></highlight><highlight class="comment"></highlight></codeline>
<codeline lineno="86"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>/**</highlight></codeline>
<codeline lineno="87"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*<sp/>@brief<sp/>Get<sp/>the<sp/>current<sp/>object<sp/>ID</highlight></codeline>
<codeline lineno="88"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*<sp/>@return<sp/>std::string<sp/>Current<sp/>object<sp/>ID</highlight></codeline>
<codeline lineno="89"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="90"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>std::string<sp/><ref refid="de/d69/classvp_1_1Parser_1ad5246aed9edc845750b0207198f851b1" kindref="member">getID</ref>()<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="91"><highlight class="normal"><sp/><sp/><sp/><sp/>};</highlight></codeline>
<codeline lineno="92"><highlight class="normal">}</highlight></codeline>
<codeline lineno="93"><highlight class="normal"></highlight><highlight class="preprocessor">#else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="94"><highlight class="normal"></highlight><highlight class="preprocessor">#<sp/><sp/><sp/>error<sp/>&quot;Use<sp/>C++17<sp/>as<sp/>the<sp/>minimum<sp/>standard&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="95"><highlight class="normal"></highlight><highlight class="preprocessor">#endif<sp/></highlight><highlight class="comment">//<sp/>VP_DEFAULT_CPP_STD<sp/>&gt;=<sp/>__cplusplus</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="96"><highlight class="normal"></highlight></codeline>
    </programlisting>
    <location file="inc/varparse.cpp/VP_Parse.hpp"/>
  </compounddef>
</doxygen>
