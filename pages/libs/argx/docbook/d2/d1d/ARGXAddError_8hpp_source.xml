<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<section xmlns="http://docbook.org/ns/docbook" version="5.0" xmlns:xlink="http://www.w3.org/1999/xlink" xml:id="_ARGXAddError_8hpp_source" xml:lang="en-US">
<title>ARGXAddError.hpp</title>
<indexterm><primary>inc/ARGXAddError.hpp</primary></indexterm>
Go to the documentation of this file.<programlisting linenumbering="unnumbered"><anchor xml:id="_ARGXAddError_8hpp_source_1l00001"/>00001 <emphasis role="preprocessor">#pragma&#32;once</emphasis>
<anchor xml:id="_ARGXAddError_8hpp_source_1l00002"/>00002 
<anchor xml:id="_ARGXAddError_8hpp_source_1l00003"/>00003 <emphasis role="comment">//&#32;NOTE:</emphasis>
<anchor xml:id="_ARGXAddError_8hpp_source_1l00004"/>00004 <emphasis role="comment">//&#32;Left&#32;behind&#32;with&#32;the&#32;old&#32;C++&#32;standard&#32;(C++11)&#32;as&#32;it&#32;is&#32;not&#32;being&#32;maintained&#32;anymore</emphasis>
<anchor xml:id="_ARGXAddError_8hpp_source_1l00005"/>00005 <emphasis role="preprocessor">#if&#32;__cplusplus&#32;&gt;=&#32;201103L&#32;||&#32;defined(ARGX_AS_PYTHON_PACKAGE)</emphasis>
<anchor xml:id="_ARGXAddError_8hpp_source_1l00006"/>00006 
<anchor xml:id="_ARGXAddError_8hpp_source_1l00007"/>00007 <emphasis role="preprocessor">#include&#32;&lt;string&gt;</emphasis>
<anchor xml:id="_ARGXAddError_8hpp_source_1l00008"/>00008 <emphasis role="preprocessor">#include&#32;&lt;utility&gt;</emphasis>
<anchor xml:id="_ARGXAddError_8hpp_source_1l00009"/>00009 
<anchor xml:id="_ARGXAddError_8hpp_source_1l00010"/>00010 <emphasis role="keyword">namespace&#32;</emphasis><link linkend="_namespaceargx">argx</link>
<anchor xml:id="_ARGXAddError_8hpp_source_1l00011"/>00011 {
<anchor xml:id="_ARGXAddError_8hpp_source_1l00012"/><link linkend="_classargx_1_1ARGXAddError">00012</link> &#32;&#32;&#32;&#32;<emphasis role="keyword">class&#32;</emphasis>[[deprecated(<emphasis role="stringliteral">&quot;ARGXAddError&#32;is&#32;deprecated,&#32;there&#32;is&#32;no&#32;direct&#32;replacement,&#32;this&#32;function&#32;is&#32;going&#32;to&#32;be&#32;removed&#32;in&#32;version&#32;1.4.0&quot;</emphasis>)]]
<anchor xml:id="_ARGXAddError_8hpp_source_1l00013"/>00013 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_classargx_1_1ARGXAddError_1ac2b5ced72ae86e5ca250b1f401cc1a5f">ARGXAddError</link>
<anchor xml:id="_ARGXAddError_8hpp_source_1l00014"/>00014 &#32;&#32;&#32;&#32;{
<anchor xml:id="_ARGXAddError_8hpp_source_1l00015"/>00015 &#32;&#32;&#32;&#32;<emphasis role="keyword">private</emphasis>:
<anchor xml:id="_ARGXAddError_8hpp_source_1l00016"/><link linkend="_classargx_1_1ARGXAddError_1a09e860d9791a4a6b00cb716cec8a8479">00016</link> &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;std::string&#32;<link linkend="_classargx_1_1ARGXAddError_1a09e860d9791a4a6b00cb716cec8a8479">msg</link>;
<anchor xml:id="_ARGXAddError_8hpp_source_1l00017"/><link linkend="_classargx_1_1ARGXAddError_1a6b122902c596ea869ade7e746cd781de">00017</link> &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;std::string&#32;<link linkend="_classargx_1_1ARGXAddError_1a6b122902c596ea869ade7e746cd781de">help</link>;
<anchor xml:id="_ARGXAddError_8hpp_source_1l00018"/>00018 
<anchor xml:id="_ARGXAddError_8hpp_source_1l00019"/>00019 &#32;&#32;&#32;&#32;<emphasis role="keyword">public</emphasis>:
<anchor xml:id="_ARGXAddError_8hpp_source_1l00020"/>00020 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_classargx_1_1ARGXAddError_1ac2b5ced72ae86e5ca250b1f401cc1a5f">ARGXAddError</link>(<emphasis role="keyword">const</emphasis>&#32;std::string&#32;&amp;<link linkend="_classargx_1_1ARGXAddError_1a09e860d9791a4a6b00cb716cec8a8479">msg</link>,&#32;<emphasis role="keyword">const</emphasis>&#32;std::string&#32;&amp;<link linkend="_classargx_1_1ARGXAddError_1a6b122902c596ea869ade7e746cd781de">help</link>&#32;=&#32;<emphasis role="stringliteral">&quot;&quot;</emphasis>);
<anchor xml:id="_ARGXAddError_8hpp_source_1l00021"/>00021 
<anchor xml:id="_ARGXAddError_8hpp_source_1l00022"/>00022 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;std::pair&lt;<emphasis role="keyword">const</emphasis>&#32;<emphasis role="keywordtype">char</emphasis>*&#32;<emphasis role="comment">/*Error*/</emphasis>,&#32;<emphasis role="keyword">const</emphasis>&#32;<emphasis role="keywordtype">char</emphasis>*&#32;<emphasis role="comment">/*Help*/</emphasis>&gt;&#32;<link linkend="_classargx_1_1ARGXAddError_1ad5d8832d580b8af9cc8b48bb75a1e752">what</link>()&#32;const&#32;noexcept;
<anchor xml:id="_ARGXAddError_8hpp_source_1l00023"/>00023 &#32;&#32;&#32;&#32;};
<anchor xml:id="_ARGXAddError_8hpp_source_1l00024"/>00024 }
<anchor xml:id="_ARGXAddError_8hpp_source_1l00025"/>00025 
<anchor xml:id="_ARGXAddError_8hpp_source_1l00026"/>00026 <emphasis role="preprocessor">#else</emphasis>
<anchor xml:id="_ARGXAddError_8hpp_source_1l00027"/>00027 <emphasis role="preprocessor">#&#32;&#32;&#32;error&#32;&quot;Must&#32;compile&#32;with&#32;C++11&#32;support&#32;or&#32;newer&quot;</emphasis>
<anchor xml:id="_ARGXAddError_8hpp_source_1l00028"/>00028 <emphasis role="preprocessor">#&#32;&#32;&#32;pragma&#32;message(&quot;Current&#32;standard&#32;is&#32;&quot;&#32;ARGX_TOSTRING(__cplusplus))</emphasis>
<anchor xml:id="_ARGXAddError_8hpp_source_1l00029"/>00029 <emphasis role="preprocessor">#endif</emphasis>
<anchor xml:id="_ARGXAddError_8hpp_source_1l00030"/>00030 
</programlisting></section>
