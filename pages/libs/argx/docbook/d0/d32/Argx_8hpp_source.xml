<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<section xmlns="http://docbook.org/ns/docbook" version="5.0" xmlns:xlink="http://www.w3.org/1999/xlink" xml:id="_Argx_8hpp_source" xml:lang="en-US">
<title>Argx.hpp</title>
<indexterm><primary>inc/Argx.hpp</primary></indexterm>
Go to the documentation of this file.<programlisting linenumbering="unnumbered"><anchor xml:id="_Argx_8hpp_source_1l00001"/>00001 <emphasis role="comment">/*&#32;inc/argx.hpp</emphasis>
<anchor xml:id="_Argx_8hpp_source_1l00002"/>00002 <emphasis role="comment">&#32;*&#32;Owned&#32;and&#32;created&#32;by:&#32;pcannon09</emphasis>
<anchor xml:id="_Argx_8hpp_source_1l00003"/>00003 <emphasis role="comment">&#32;*/</emphasis>
<anchor xml:id="_Argx_8hpp_source_1l00004"/>00004 
<anchor xml:id="_Argx_8hpp_source_1l00005"/>00005 <emphasis role="preprocessor">#pragma&#32;once</emphasis>
<anchor xml:id="_Argx_8hpp_source_1l00006"/>00006 
<anchor xml:id="_Argx_8hpp_source_1l00007"/>00007 <emphasis role="preprocessor">#include&#32;&quot;<link linkend="_macros_8hpp">macros.hpp</link>&quot;</emphasis>
<anchor xml:id="_Argx_8hpp_source_1l00008"/>00008 
<anchor xml:id="_Argx_8hpp_source_1l00009"/>00009 <emphasis role="preprocessor">#if&#32;__cplusplus&#32;&gt;=&#32;201402L&#32;||&#32;defined(ARGX_AS_PYTHON_PACKAGE)</emphasis>
<anchor xml:id="_Argx_8hpp_source_1l00010"/>00010 <emphasis role="preprocessor">#include&#32;&lt;string&gt;</emphasis>
<anchor xml:id="_Argx_8hpp_source_1l00011"/>00011 <emphasis role="preprocessor">#include&#32;&lt;vector&gt;</emphasis>
<anchor xml:id="_Argx_8hpp_source_1l00012"/>00012 
<anchor xml:id="_Argx_8hpp_source_1l00013"/>00013 <emphasis role="preprocessor">#include&#32;&quot;<link linkend="_types_8hpp">../inc/types.hpp</link>&quot;</emphasis>
<anchor xml:id="_Argx_8hpp_source_1l00014"/>00014 
<anchor xml:id="_Argx_8hpp_source_1l00015"/><link linkend="_namespaceargx">00015</link> <emphasis role="keyword">namespace&#32;</emphasis><link linkend="_namespaceargx">argx</link>
<anchor xml:id="_Argx_8hpp_source_1l00016"/>00016 {
<anchor xml:id="_Argx_8hpp_source_1l00017"/><link linkend="_classargx_1_1Argx">00017</link> &#32;&#32;&#32;&#32;<emphasis role="keyword">class&#32;</emphasis><link linkend="_classargx_1_1Argx_1a031a29c3cbb346b0379e1bfb99c35076">Argx</link>
<anchor xml:id="_Argx_8hpp_source_1l00018"/>00018 &#32;&#32;&#32;&#32;{
<anchor xml:id="_Argx_8hpp_source_1l00019"/>00019 &#32;&#32;&#32;&#32;<emphasis role="keyword">private</emphasis>:
<anchor xml:id="_Argx_8hpp_source_1l00020"/><link linkend="_classargx_1_1Argx_1adf94f5a9f22d8ea2cde21df63c2f3d8a">00020</link> &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;std::string&#32;<link linkend="_classargx_1_1Argx_1adf94f5a9f22d8ea2cde21df63c2f3d8a">id</link>;
<anchor xml:id="_Argx_8hpp_source_1l00021"/>00021 
<anchor xml:id="_Argx_8hpp_source_1l00022"/><link linkend="_classargx_1_1Argx_1aba86dd3c8b11c495afd4c7eada1c0ac5">00022</link> &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">static</emphasis>&#32;std::vector&lt;ARGXOptions&gt;&#32;<link linkend="_classargx_1_1Argx_1aba86dd3c8b11c495afd4c7eada1c0ac5">options</link>;
<anchor xml:id="_Argx_8hpp_source_1l00023"/><link linkend="_classargx_1_1Argx_1a4e820cdc862457fd8618229ce47a690f">00023</link> &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">static</emphasis>&#32;std::vector&lt;std::string&gt;&#32;*<link linkend="_classargx_1_1Argx_1a4e820cdc862457fd8618229ce47a690f">mainArgs</link>;
<anchor xml:id="_Argx_8hpp_source_1l00024"/>00024 
<anchor xml:id="_Argx_8hpp_source_1l00025"/><link linkend="_classargx_1_1Argx_1a2e72f1c581d6ac0ffa02d45c3e6b540f">00025</link> &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">static</emphasis>&#32;<emphasis role="keywordtype">unsigned</emphasis>&#32;<emphasis role="keywordtype">int</emphasis>&#32;<link linkend="_classargx_1_1Argx_1a2e72f1c581d6ac0ffa02d45c3e6b540f">mainArgc</link>;
<anchor xml:id="_Argx_8hpp_source_1l00026"/>00026 
<anchor xml:id="_Argx_8hpp_source_1l00027"/>00027 &#32;&#32;&#32;&#32;<emphasis role="keyword">public</emphasis>:
<anchor xml:id="_Argx_8hpp_source_1l00028"/>00028 
<anchor xml:id="_Argx_8hpp_source_1l00029"/>00029 <emphasis role="preprocessor">#if&#32;defined(ARGX_AS_PYTHON_PACKAGE)</emphasis><emphasis role="comment"></emphasis>
<anchor xml:id="_Argx_8hpp_source_1l00030"/>00030 <emphasis role="comment">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;/**</emphasis>
<anchor xml:id="_Argx_8hpp_source_1l00031"/>00031 <emphasis role="comment">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;*&#32;@brief&#32;Create&#32;Argx&#32;with&#32;the&#32;specific&#32;`id`&#32;and&#32;`args`&#32;as&#32;a&#32;python&#32;package</emphasis>
<anchor xml:id="_Argx_8hpp_source_1l00032"/>00032 <emphasis role="comment">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;*&#32;@param&#32;id&#32;Set&#32;the&#32;ID&#32;of&#32;the&#32;Argx</emphasis>
<anchor xml:id="_Argx_8hpp_source_1l00033"/>00033 <emphasis role="comment">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;*&#32;@param&#32;args&#32;Set&#32;the&#32;`argv`&#32;of&#32;the&#32;`main()`&#32;function&#32;with&#32;the&#32;specific&#32;list&#32;contents&#32;in&#32;python</emphasis>
<anchor xml:id="_Argx_8hpp_source_1l00034"/>00034 <emphasis role="comment">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;*/</emphasis><emphasis role="preprocessor"></emphasis>
<anchor xml:id="_Argx_8hpp_source_1l00035"/>00035 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_classargx_1_1Argx_1ac4ac47d6fe631a673ce0c7594fd67a12">Argx</link>(<emphasis role="keyword">const</emphasis>&#32;std::string&#32;&amp;<emphasis role="keywordtype">id</emphasis>,&#32;<emphasis role="keyword">const</emphasis>&#32;std::vector&lt;std::string&gt;&#32;&amp;args);
<anchor xml:id="_Argx_8hpp_source_1l00036"/>00036 <emphasis role="comment"></emphasis>
<anchor xml:id="_Argx_8hpp_source_1l00037"/>00037 <emphasis role="comment">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;/**</emphasis>
<anchor xml:id="_Argx_8hpp_source_1l00038"/>00038 <emphasis role="comment">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;*&#32;@brief&#32;Call&#32;the&#32;deconstructor&#32;of&#32;the&#32;Argx&#32;option&#32;(SPECIFIC&#32;FOR&#32;PYTHON)</emphasis>
<anchor xml:id="_Argx_8hpp_source_1l00039"/>00039 <emphasis role="comment">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;*/</emphasis>
<anchor xml:id="_Argx_8hpp_source_1l00040"/>00040 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordtype">void</emphasis>&#32;destroy();
<anchor xml:id="_Argx_8hpp_source_1l00041"/>00041 <emphasis role="preprocessor">#else</emphasis><emphasis role="comment"></emphasis>
<anchor xml:id="_Argx_8hpp_source_1l00042"/>00042 <emphasis role="comment">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;/**</emphasis>
<anchor xml:id="_Argx_8hpp_source_1l00043"/>00043 <emphasis role="comment">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;*&#32;@brief&#32;Create&#32;Argx&#32;with&#32;the&#32;specific&#32;`id`,&#32;`argc`&#32;and&#32;`argv`</emphasis>
<anchor xml:id="_Argx_8hpp_source_1l00044"/>00044 <emphasis role="comment">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;*&#32;@param&#32;id&#32;Set&#32;the&#32;ID&#32;of&#32;the&#32;Argx</emphasis>
<anchor xml:id="_Argx_8hpp_source_1l00045"/>00045 <emphasis role="comment">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;*&#32;@param&#32;argc&#32;Set&#32;the&#32;`argc`&#32;of&#32;the&#32;`main()`&#32;function</emphasis>
<anchor xml:id="_Argx_8hpp_source_1l00046"/>00046 <emphasis role="comment">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;*&#32;@param&#32;argv&#32;Set&#32;the&#32;`argv`&#32;of&#32;the&#32;`main()`&#32;function</emphasis>
<anchor xml:id="_Argx_8hpp_source_1l00047"/>00047 <emphasis role="comment">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;*/</emphasis><emphasis role="preprocessor"></emphasis>
<anchor xml:id="_Argx_8hpp_source_1l00048"/>00048 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_classargx_1_1Argx_1ac4ac47d6fe631a673ce0c7594fd67a12">Argx</link>(<emphasis role="keyword">const</emphasis>&#32;std::string&#32;&amp;<emphasis role="keywordtype">id</emphasis>,&#32;<emphasis role="keywordtype">int</emphasis>&#32;argc,&#32;<emphasis role="keywordtype">char</emphasis>&#32;*argv[]);
<anchor xml:id="_Argx_8hpp_source_1l00049"/>00049 <emphasis role="preprocessor">#endif</emphasis>
<anchor xml:id="_Argx_8hpp_source_1l00050"/>00050 
<anchor xml:id="_Argx_8hpp_source_1l00051"/>00051 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_classargx_1_1Argx_1ac4ac47d6fe631a673ce0c7594fd67a12">Argx</link>();
<anchor xml:id="_Argx_8hpp_source_1l00052"/>00052 <emphasis role="comment"></emphasis>
<anchor xml:id="_Argx_8hpp_source_1l00053"/>00053 <emphasis role="comment">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;/**</emphasis>
<anchor xml:id="_Argx_8hpp_source_1l00054"/>00054 <emphasis role="comment">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;*&#32;@brief&#32;Deconstruct&#32;allocated&#32;objects</emphasis>
<anchor xml:id="_Argx_8hpp_source_1l00055"/>00055 <emphasis role="comment">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;*/</emphasis>
<anchor xml:id="_Argx_8hpp_source_1l00056"/>00056 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_classargx_1_1Argx_1a97654cab13febb7fb7870b14c9d31c6e">~Argx</link>();
<anchor xml:id="_Argx_8hpp_source_1l00057"/>00057 <emphasis role="comment"></emphasis>
<anchor xml:id="_Argx_8hpp_source_1l00058"/>00058 <emphasis role="comment">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;/**</emphasis>
<anchor xml:id="_Argx_8hpp_source_1l00059"/>00059 <emphasis role="comment">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;*&#32;@brief&#32;Format&#32;to&#32;a&#32;positive&#32;number&#32;if&#32;number&#32;is&#32;negative&#32;for&#32;a&#32;correct&#32;execution&#32;of&#32;code</emphasis>
<anchor xml:id="_Argx_8hpp_source_1l00060"/>00060 <emphasis role="comment">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;*&#32;@param&#32;_int&#32;Number&#32;to&#32;convert</emphasis>
<anchor xml:id="_Argx_8hpp_source_1l00061"/>00061 <emphasis role="comment">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;*&#32;@return&#32;int&#32;Positive&#32;value&#32;number</emphasis>
<anchor xml:id="_Argx_8hpp_source_1l00062"/>00062 <emphasis role="comment">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;*/</emphasis>
<anchor xml:id="_Argx_8hpp_source_1l00063"/>00063 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">static</emphasis>&#32;<emphasis role="keywordtype">int</emphasis>&#32;<link linkend="_classargx_1_1Argx_1ad35955a51e2dd4b50a7ccf20f757fe55">formatWrongArgs</link>(<emphasis role="keyword">const</emphasis>&#32;<emphasis role="keywordtype">int</emphasis>&#32;&amp;_int);
<anchor xml:id="_Argx_8hpp_source_1l00064"/>00064 <emphasis role="comment"></emphasis>
<anchor xml:id="_Argx_8hpp_source_1l00065"/>00065 <emphasis role="comment">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;/**</emphasis>
<anchor xml:id="_Argx_8hpp_source_1l00066"/>00066 <emphasis role="comment">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;*&#32;@brief&#32;Get&#32;argument&#32;position&#32;with&#32;specified&#32;`arg`</emphasis>
<anchor xml:id="_Argx_8hpp_source_1l00067"/>00067 <emphasis role="comment">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;*&#32;@param&#32;arg&#32;Find&#32;argument</emphasis>
<anchor xml:id="_Argx_8hpp_source_1l00068"/>00068 <emphasis role="comment">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;*&#32;@return&#32;int&#32;Return&#32;position&#32;of&#32;found&#32;`arg`&#32;from&#32;the&#32;options</emphasis>
<anchor xml:id="_Argx_8hpp_source_1l00069"/>00069 <emphasis role="comment">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;*/</emphasis>
<anchor xml:id="_Argx_8hpp_source_1l00070"/>00070 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordtype">int</emphasis>&#32;<link linkend="_classargx_1_1Argx_1a73dccd80c13749ea006b46653cc2a8a0">getArgPos</link>(<emphasis role="keyword">const</emphasis>&#32;std::string&#32;&amp;arg);
<anchor xml:id="_Argx_8hpp_source_1l00071"/>00071 <emphasis role="comment"></emphasis>
<anchor xml:id="_Argx_8hpp_source_1l00072"/>00072 <emphasis role="comment">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;/**</emphasis>
<anchor xml:id="_Argx_8hpp_source_1l00073"/>00073 <emphasis role="comment">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;*&#32;@brief&#32;Add&#32;param&#32;options</emphasis>
<anchor xml:id="_Argx_8hpp_source_1l00074"/>00074 <emphasis role="comment">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;*&#32;@param&#32;option&#32;Add&#32;the&#32;option&#32;to&#32;the&#32;main&#32;params</emphasis>
<anchor xml:id="_Argx_8hpp_source_1l00075"/>00075 <emphasis role="comment">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;*/</emphasis>
<anchor xml:id="_Argx_8hpp_source_1l00076"/>00076 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordtype">void</emphasis>&#32;<link linkend="_classargx_1_1Argx_1aab16d8baf18e1db7ce66995a7cad312e">add</link>(<link linkend="_structargx_1_1ARGXOptions">ARGXOptions</link>&#32;option)&#32;<emphasis role="keyword">const</emphasis>;
<anchor xml:id="_Argx_8hpp_source_1l00077"/>00077 <emphasis role="comment"></emphasis>
<anchor xml:id="_Argx_8hpp_source_1l00078"/>00078 <emphasis role="comment">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;/**</emphasis>
<anchor xml:id="_Argx_8hpp_source_1l00079"/>00079 <emphasis role="comment">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;*&#32;@brief&#32;Get&#32;the&#32;param&#32;from&#32;`id`</emphasis>
<anchor xml:id="_Argx_8hpp_source_1l00080"/>00080 <emphasis role="comment">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;*&#32;@param&#32;id&#32;The&#32;ID&#32;to&#32;get</emphasis>
<anchor xml:id="_Argx_8hpp_source_1l00081"/>00081 <emphasis role="comment">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;*&#32;@return&#32;ARGXParam&#32;Returnted&#32;parameter&#32;to&#32;get</emphasis>
<anchor xml:id="_Argx_8hpp_source_1l00082"/>00082 <emphasis role="comment">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;*/</emphasis>
<anchor xml:id="_Argx_8hpp_source_1l00083"/>00083 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_structargx_1_1ARGXParam">ARGXParam</link>&#32;<link linkend="_classargx_1_1Argx_1a250e2f53873829c3567dc0aec9dc2952">getParam</link>(<emphasis role="keyword">const</emphasis>&#32;std::string&amp;&#32;<emphasis role="keywordtype">id</emphasis>);
<anchor xml:id="_Argx_8hpp_source_1l00084"/>00084 <emphasis role="comment"></emphasis>
<anchor xml:id="_Argx_8hpp_source_1l00085"/>00085 <emphasis role="comment">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;/**</emphasis>
<anchor xml:id="_Argx_8hpp_source_1l00086"/>00086 <emphasis role="comment">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;*&#32;@brief&#32;Create&#32;documentation&#32;for&#32;the&#32;parameters&#32;with&#32;the&#32;specific&#32;style,&#32;title&#32;and&#32;main&#32;information</emphasis>
<anchor xml:id="_Argx_8hpp_source_1l00087"/>00087 <emphasis role="comment">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;*&#32;@param&#32;style&#32;Set&#32;the&#32;style&#32;using&#32;ARGXStyle</emphasis>
<anchor xml:id="_Argx_8hpp_source_1l00088"/>00088 <emphasis role="comment">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;*&#32;@param&#32;title&#32;Title&#32;for&#32;docs</emphasis>
<anchor xml:id="_Argx_8hpp_source_1l00089"/>00089 <emphasis role="comment">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;*&#32;@param&#32;Main&#32;information</emphasis>
<anchor xml:id="_Argx_8hpp_source_1l00090"/>00090 <emphasis role="comment">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;*&#32;@return&#32;std::string&#32;Documentation&#32;as&#32;a&#32;string</emphasis>
<anchor xml:id="_Argx_8hpp_source_1l00091"/>00091 <emphasis role="comment">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;*/</emphasis>
<anchor xml:id="_Argx_8hpp_source_1l00092"/>00092 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;std::string&#32;<link linkend="_classargx_1_1Argx_1a99bbe74c7f09f6bb3a343dbdde050a64">createDocs</link>(<link linkend="_namespaceargx_1a1aaf93330a8dedabb4307940b33f49d9">ARGXStyle</link>&#32;style,&#32;<emphasis role="keyword">const</emphasis>&#32;std::string&#32;&amp;title,&#32;<emphasis role="keyword">const</emphasis>&#32;std::string&#32;&amp;mainInfo);
<anchor xml:id="_Argx_8hpp_source_1l00093"/>00093 <emphasis role="comment"></emphasis>
<anchor xml:id="_Argx_8hpp_source_1l00094"/>00094 <emphasis role="comment">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;/**</emphasis>
<anchor xml:id="_Argx_8hpp_source_1l00095"/>00095 <emphasis role="comment">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;*&#32;@brief&#32;Normal&#32;parameter&#32;or&#32;sub-paramter&#32;to&#32;its&#32;corresponding&#32;ID</emphasis>
<anchor xml:id="_Argx_8hpp_source_1l00096"/>00096 <emphasis role="comment">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;*&#32;@param&#32;param&#32;Parameter&#32;value&#32;or&#32;name</emphasis>
<anchor xml:id="_Argx_8hpp_source_1l00097"/>00097 <emphasis role="comment">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;*&#32;@return&#32;std::string&#32;ID&#32;of&#32;the&#32;param&#32;or&#32;sub-param</emphasis>
<anchor xml:id="_Argx_8hpp_source_1l00098"/>00098 <emphasis role="comment">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;*/</emphasis>
<anchor xml:id="_Argx_8hpp_source_1l00099"/>00099 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;std::string&#32;<link linkend="_classargx_1_1Argx_1a0269687632438687f9afd44f80c2eaa9">paramToID</link>(<emphasis role="keyword">const</emphasis>&#32;std::string&#32;&amp;param);
<anchor xml:id="_Argx_8hpp_source_1l00100"/>00100 <emphasis role="comment"></emphasis>
<anchor xml:id="_Argx_8hpp_source_1l00101"/>00101 <emphasis role="comment">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;/**</emphasis>
<anchor xml:id="_Argx_8hpp_source_1l00102"/>00102 <emphasis role="comment">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;*&#32;@brief&#32;Find&#32;parameter&#32;and&#32;sub-parameter&#32;index</emphasis>
<anchor xml:id="_Argx_8hpp_source_1l00103"/>00103 <emphasis role="comment">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;*&#32;@param&#32;id&#32;ID&#32;to&#32;find</emphasis>
<anchor xml:id="_Argx_8hpp_source_1l00104"/>00104 <emphasis role="comment">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;*&#32;@return&#32;int&#32;Index</emphasis>
<anchor xml:id="_Argx_8hpp_source_1l00105"/>00105 <emphasis role="comment">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;*/</emphasis>
<anchor xml:id="_Argx_8hpp_source_1l00106"/>00106 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordtype">int</emphasis>&#32;<link linkend="_classargx_1_1Argx_1a9343612a7c209f2323d2cd10fd3fe387">findParam</link>(<emphasis role="keyword">const</emphasis>&#32;std::string&amp;&#32;<emphasis role="keywordtype">id</emphasis>);
<anchor xml:id="_Argx_8hpp_source_1l00107"/>00107 <emphasis role="comment"></emphasis>
<anchor xml:id="_Argx_8hpp_source_1l00108"/>00108 <emphasis role="comment">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;/**</emphasis>
<anchor xml:id="_Argx_8hpp_source_1l00109"/>00109 <emphasis role="comment">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;*&#32;@brief&#32;Get&#32;the&#32;main&#32;options&#32;from&#32;the&#32;`main()`&#32;function&#32;as&#32;argc</emphasis>
<anchor xml:id="_Argx_8hpp_source_1l00110"/>00110 <emphasis role="comment">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;*&#32;@return&#32;int&#32;Number&#32;of&#32;params&#32;including&#32;the&#32;executable&#32;param</emphasis>
<anchor xml:id="_Argx_8hpp_source_1l00111"/>00111 <emphasis role="comment">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;*/</emphasis>
<anchor xml:id="_Argx_8hpp_source_1l00112"/>00112 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordtype">int</emphasis>&#32;<link linkend="_classargx_1_1Argx_1a812254e076a5ec208ba9d2eab470edb4">getArgc</link>()&#32;<emphasis role="keyword">const</emphasis>;
<anchor xml:id="_Argx_8hpp_source_1l00113"/>00113 <emphasis role="comment"></emphasis>
<anchor xml:id="_Argx_8hpp_source_1l00114"/>00114 <emphasis role="comment">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;/**</emphasis>
<anchor xml:id="_Argx_8hpp_source_1l00115"/>00115 <emphasis role="comment">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;*&#32;@brief&#32;Get&#32;argument&#32;using&#32;ID</emphasis>
<anchor xml:id="_Argx_8hpp_source_1l00116"/>00116 <emphasis role="comment">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;*&#32;@param&#32;arg&#32;Argument&#32;to&#32;find</emphasis>
<anchor xml:id="_Argx_8hpp_source_1l00117"/>00117 <emphasis role="comment">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;*&#32;@return&#32;int&#32;Argument&#32;position</emphasis>
<anchor xml:id="_Argx_8hpp_source_1l00118"/>00118 <emphasis role="comment">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;*/</emphasis>
<anchor xml:id="_Argx_8hpp_source_1l00119"/>00119 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordtype">int</emphasis>&#32;<link linkend="_classargx_1_1Argx_1a7fb43159f183399c8674cd5e521d3caf">getArgIDPos</link>(<emphasis role="keyword">const</emphasis>&#32;std::string&#32;&amp;arg);
<anchor xml:id="_Argx_8hpp_source_1l00120"/>00120 <emphasis role="comment"></emphasis>
<anchor xml:id="_Argx_8hpp_source_1l00121"/>00121 <emphasis role="comment">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;/**</emphasis>
<anchor xml:id="_Argx_8hpp_source_1l00122"/>00122 <emphasis role="comment">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;*&#32;@brief&#32;Get&#32;the&#32;incorrect&#32;arguments&#32;and&#32;sub-arguments&#32;that&#32;were&#32;not&#32;registered</emphasis>
<anchor xml:id="_Argx_8hpp_source_1l00123"/>00123 <emphasis role="comment">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;*&#32;@param&#32;argv&#32;Main&#32;arguments&#32;from&#32;argv</emphasis>
<anchor xml:id="_Argx_8hpp_source_1l00124"/>00124 <emphasis role="comment">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;*&#32;@return&#32;int&#32;Argument&#32;position</emphasis>
<anchor xml:id="_Argx_8hpp_source_1l00125"/>00125 <emphasis role="comment">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;*/</emphasis>
<anchor xml:id="_Argx_8hpp_source_1l00126"/>00126 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordtype">int</emphasis>&#32;<link linkend="_classargx_1_1Argx_1ac1e4d316a44cfdc596a181af15e74962">getWrongArgs</link>(<emphasis role="keyword">const</emphasis>&#32;std::vector&lt;std::string&gt;&#32;&amp;argv);
<anchor xml:id="_Argx_8hpp_source_1l00127"/>00127 <emphasis role="comment"></emphasis>
<anchor xml:id="_Argx_8hpp_source_1l00128"/>00128 <emphasis role="comment">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;/**</emphasis>
<anchor xml:id="_Argx_8hpp_source_1l00129"/>00129 <emphasis role="comment">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;*&#32;@brief&#32;Get&#32;if&#32;param&#32;exists&#32;in&#32;the&#32;param&#32;options</emphasis>
<anchor xml:id="_Argx_8hpp_source_1l00130"/>00130 <emphasis role="comment">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;*&#32;@param&#32;id&#32;ID&#32;to&#32;get</emphasis>
<anchor xml:id="_Argx_8hpp_source_1l00131"/>00131 <emphasis role="comment">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;*&#32;@return&#32;bool</emphasis>
<anchor xml:id="_Argx_8hpp_source_1l00132"/>00132 <emphasis role="comment">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;*/</emphasis>
<anchor xml:id="_Argx_8hpp_source_1l00133"/>00133 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordtype">bool</emphasis>&#32;<link linkend="_classargx_1_1Argx_1a82c1649fbd03d4f3ea94bf8a14e1299d">paramExists</link>(<emphasis role="keyword">const</emphasis>&#32;std::string&#32;&amp;<emphasis role="keywordtype">id</emphasis>);
<anchor xml:id="_Argx_8hpp_source_1l00134"/>00134 <emphasis role="comment"></emphasis>
<anchor xml:id="_Argx_8hpp_source_1l00135"/>00135 <emphasis role="comment">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;/**</emphasis>
<anchor xml:id="_Argx_8hpp_source_1l00136"/>00136 <emphasis role="comment">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;*&#32;@brief&#32;Check&#32;if&#32;the&#32;`tag`&#32;exists&#32;in&#32;option&#32;with&#32;ID&#32;of&#32;`id`</emphasis>
<anchor xml:id="_Argx_8hpp_source_1l00137"/>00137 <emphasis role="comment">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;*&#32;@param&#32;id&#32;ID&#32;from&#32;option</emphasis>
<anchor xml:id="_Argx_8hpp_source_1l00138"/>00138 <emphasis role="comment">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;*&#32;@param&#32;tag&#32;Tag&#32;to&#32;find</emphasis>
<anchor xml:id="_Argx_8hpp_source_1l00139"/>00139 <emphasis role="comment">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;*&#32;@return&#32;bool&#32;Return&#32;false&#32;if&#32;there&#32;is&#32;no&#32;match,&#32;else,&#32;return&#32;true</emphasis>
<anchor xml:id="_Argx_8hpp_source_1l00140"/>00140 <emphasis role="comment">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;*/</emphasis>
<anchor xml:id="_Argx_8hpp_source_1l00141"/>00141 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordtype">bool</emphasis>&#32;<link linkend="_classargx_1_1Argx_1a8d66cd4ebaeb1c03ef474c260ce90977">hasTag</link>(<emphasis role="keyword">const</emphasis>&#32;std::string&#32;&amp;<emphasis role="keywordtype">id</emphasis>,&#32;<emphasis role="keyword">const</emphasis>&#32;std::string&#32;&amp;tag);
<anchor xml:id="_Argx_8hpp_source_1l00142"/>00142 <emphasis role="comment"></emphasis>
<anchor xml:id="_Argx_8hpp_source_1l00143"/>00143 <emphasis role="comment">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;/**</emphasis>
<anchor xml:id="_Argx_8hpp_source_1l00144"/>00144 <emphasis role="comment">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;*&#32;@brief&#32;Get&#32;if&#32;sub-param&#32;exists&#32;in&#32;the&#32;param&#32;options</emphasis>
<anchor xml:id="_Argx_8hpp_source_1l00145"/>00145 <emphasis role="comment">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;*&#32;@param&#32;id&#32;ID&#32;to&#32;get</emphasis>
<anchor xml:id="_Argx_8hpp_source_1l00146"/>00146 <emphasis role="comment">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;*&#32;@return&#32;bool</emphasis>
<anchor xml:id="_Argx_8hpp_source_1l00147"/>00147 <emphasis role="comment">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;*/</emphasis>
<anchor xml:id="_Argx_8hpp_source_1l00148"/>00148 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordtype">bool</emphasis>&#32;<link linkend="_classargx_1_1Argx_1a9d961d98a70713290d237dd8f3d68369">subParamExists</link>(<emphasis role="keyword">const</emphasis>&#32;std::string&#32;&amp;<emphasis role="keywordtype">id</emphasis>);
<anchor xml:id="_Argx_8hpp_source_1l00149"/>00149 <emphasis role="comment"></emphasis>
<anchor xml:id="_Argx_8hpp_source_1l00150"/>00150 <emphasis role="comment">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;/**</emphasis>
<anchor xml:id="_Argx_8hpp_source_1l00151"/>00151 <emphasis role="comment">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;*&#32;@brief&#32;Compare&#32;if&#32;`options`&#32;contains&#32;the&#32;required&#32;`id`,&#32;if&#32;the&#32;ID&#32;does&#32;not&#32;exist,&#32;return&#32;false</emphasis>
<anchor xml:id="_Argx_8hpp_source_1l00152"/>00152 <emphasis role="comment">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;*&#32;@param&#32;options&#32;Return&#32;ARGXOptions&#32;vector</emphasis>
<anchor xml:id="_Argx_8hpp_source_1l00153"/>00153 <emphasis role="comment">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;*&#32;@param&#32;id&#32;ID&#32;to&#32;find</emphasis>
<anchor xml:id="_Argx_8hpp_source_1l00154"/>00154 <emphasis role="comment">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;*&#32;@return&#32;bool</emphasis>
<anchor xml:id="_Argx_8hpp_source_1l00155"/>00155 <emphasis role="comment">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;*/</emphasis>
<anchor xml:id="_Argx_8hpp_source_1l00156"/>00156 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordtype">bool</emphasis>&#32;<link linkend="_classargx_1_1Argx_1adb4e8a622135970b4e12f14d49a76e52">compareArgs</link>(std::vector&lt;ARGXOptions&gt;&#32;<link linkend="_classargx_1_1Argx_1aba86dd3c8b11c495afd4c7eada1c0ac5">options</link>,&#32;std::vector&lt;std::string&gt;&#32;argv);
<anchor xml:id="_Argx_8hpp_source_1l00157"/>00157 <emphasis role="comment"></emphasis>
<anchor xml:id="_Argx_8hpp_source_1l00158"/>00158 <emphasis role="comment">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;/**</emphasis>
<anchor xml:id="_Argx_8hpp_source_1l00159"/>00159 <emphasis role="comment">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;*&#32;@brief&#32;Get&#32;Options&#32;from&#32;specified&#32;ID</emphasis>
<anchor xml:id="_Argx_8hpp_source_1l00160"/>00160 <emphasis role="comment">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;*&#32;@param&#32;id&#32;ID&#32;to&#32;find</emphasis>
<anchor xml:id="_Argx_8hpp_source_1l00161"/>00161 <emphasis role="comment">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;*&#32;@param&#32;ARGXOptions&#32;Option&#32;information</emphasis>
<anchor xml:id="_Argx_8hpp_source_1l00162"/>00162 <emphasis role="comment">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;*/</emphasis>
<anchor xml:id="_Argx_8hpp_source_1l00163"/>00163 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_structargx_1_1ARGXOptions">ARGXOptions</link>&#32;<link linkend="_classargx_1_1Argx_1ae7f1dcaf2c945c8592a3e89b15a0189b">getOption</link>(<emphasis role="keyword">const</emphasis>&#32;std::string&#32;&amp;<emphasis role="keywordtype">id</emphasis>);
<anchor xml:id="_Argx_8hpp_source_1l00164"/>00164 <emphasis role="comment"></emphasis>
<anchor xml:id="_Argx_8hpp_source_1l00165"/>00165 <emphasis role="comment">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;/**</emphasis>
<anchor xml:id="_Argx_8hpp_source_1l00166"/>00166 <emphasis role="comment">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;*&#32;@brief&#32;Get&#32;the&#32;sub-param&#32;from&#32;`id`</emphasis>
<anchor xml:id="_Argx_8hpp_source_1l00167"/>00167 <emphasis role="comment">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;*&#32;@param&#32;param&#32;Original&#32;param</emphasis>
<anchor xml:id="_Argx_8hpp_source_1l00168"/>00168 <emphasis role="comment">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;*&#32;@param&#32;id&#32;The&#32;ID&#32;to&#32;get</emphasis>
<anchor xml:id="_Argx_8hpp_source_1l00169"/>00169 <emphasis role="comment">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;*&#32;@return&#32;bool</emphasis>
<anchor xml:id="_Argx_8hpp_source_1l00170"/>00170 <emphasis role="comment">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;*/</emphasis>
<anchor xml:id="_Argx_8hpp_source_1l00171"/>00171 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordtype">bool</emphasis>&#32;<link linkend="_classargx_1_1Argx_1adb8fa05c9916682bf3cabeb2a12895f4">getSubParam</link>(<emphasis role="keyword">const</emphasis>&#32;<link linkend="_structargx_1_1ARGXParam">argx::ARGXParam</link>&#32;&amp;param,&#32;<emphasis role="keyword">const</emphasis>&#32;std::string&#32;&amp;<emphasis role="keywordtype">id</emphasis>);
<anchor xml:id="_Argx_8hpp_source_1l00172"/>00172 <emphasis role="comment"></emphasis>
<anchor xml:id="_Argx_8hpp_source_1l00173"/>00173 <emphasis role="comment">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;/**</emphasis>
<anchor xml:id="_Argx_8hpp_source_1l00174"/>00174 <emphasis role="comment">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;*&#32;@brief&#32;Get&#32;sub-parameter&#32;values,&#32;starting&#32;from&#32;the&#32;first&#32;value&#32;found&#32;until&#32;the&#32;first&#32;found&#32;value&#32;that&#32;corresponds&#32;to&#32;a&#32;registered&#32;parameter</emphasis>
<anchor xml:id="_Argx_8hpp_source_1l00175"/>00175 <emphasis role="comment">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;*&#32;@param&#32;id&#32;ID&#32;to&#32;find&#32;to&#32;get&#32;sub-value</emphasis>
<anchor xml:id="_Argx_8hpp_source_1l00176"/>00176 <emphasis role="comment">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;*&#32;@return&#32;std::vector&lt;std::string&gt;&#32;Values&#32;found&#32;from&#32;first&#32;to&#32;last</emphasis>
<anchor xml:id="_Argx_8hpp_source_1l00177"/>00177 <emphasis role="comment">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;*/</emphasis>
<anchor xml:id="_Argx_8hpp_source_1l00178"/>00178 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;std::vector&lt;std::string&gt;&#32;<link linkend="_classargx_1_1Argx_1a25786788983b04754ac5d9f9aaa9bee5">getSubValue</link>(<emphasis role="keyword">const</emphasis>&#32;std::string&#32;&amp;<emphasis role="keywordtype">id</emphasis>);
<anchor xml:id="_Argx_8hpp_source_1l00179"/>00179 <emphasis role="comment"></emphasis>
<anchor xml:id="_Argx_8hpp_source_1l00180"/>00180 <emphasis role="comment">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;/**</emphasis>
<anchor xml:id="_Argx_8hpp_source_1l00181"/>00181 <emphasis role="comment">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;*&#32;@brief&#32;Get&#32;main&#32;arguments&#32;from&#32;`main()`&#32;function&#32;`argv`</emphasis>
<anchor xml:id="_Argx_8hpp_source_1l00182"/>00182 <emphasis role="comment">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;*&#32;@return&#32;std::vector&lt;std::string&gt;&#32;Vector&#32;of&#32;strings&#32;for&#32;main&#32;arguments&#32;from&#32;`argv`</emphasis>
<anchor xml:id="_Argx_8hpp_source_1l00183"/>00183 <emphasis role="comment">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;*/</emphasis>
<anchor xml:id="_Argx_8hpp_source_1l00184"/>00184 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;std::vector&lt;std::string&gt;&#32;<link linkend="_classargx_1_1Argx_1a6146d9644c99b670b15d78cb92057bff">getMainArgs</link>()&#32;<emphasis role="keyword">const</emphasis>;
<anchor xml:id="_Argx_8hpp_source_1l00185"/>00185 <emphasis role="comment"></emphasis>
<anchor xml:id="_Argx_8hpp_source_1l00186"/>00186 <emphasis role="comment">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;/**</emphasis>
<anchor xml:id="_Argx_8hpp_source_1l00187"/>00187 <emphasis role="comment">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;*&#32;@brief&#32;Get&#32;main&#32;set&#32;options&#32;as&#32;ARGXOptions</emphasis>
<anchor xml:id="_Argx_8hpp_source_1l00188"/>00188 <emphasis role="comment">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;*&#32;@return&#32;std::vector&lt;ARGXOptions&gt;&#32;Options&#32;to&#32;return</emphasis>
<anchor xml:id="_Argx_8hpp_source_1l00189"/>00189 <emphasis role="comment">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;*/</emphasis>
<anchor xml:id="_Argx_8hpp_source_1l00190"/>00190 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;std::vector&lt;ARGXOptions&gt;&#32;<link linkend="_classargx_1_1Argx_1a3378e7eb2efcb1386b487ece1b5aec35">getOptions</link>()&#32;<emphasis role="keyword">const</emphasis>;
<anchor xml:id="_Argx_8hpp_source_1l00191"/>00191 <emphasis role="comment"></emphasis>
<anchor xml:id="_Argx_8hpp_source_1l00192"/>00192 <emphasis role="comment">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;/**</emphasis>
<anchor xml:id="_Argx_8hpp_source_1l00193"/>00193 <emphasis role="comment">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;*&#32;@brief&#32;Get&#32;Argx&#32;ID</emphasis>
<anchor xml:id="_Argx_8hpp_source_1l00194"/>00194 <emphasis role="comment">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;*&#32;@return&#32;std::string&#32;Argx&#32;ID</emphasis>
<anchor xml:id="_Argx_8hpp_source_1l00195"/>00195 <emphasis role="comment">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;*/</emphasis>
<anchor xml:id="_Argx_8hpp_source_1l00196"/>00196 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;std::string&#32;<link linkend="_classargx_1_1Argx_1a671ad717805d76e459c74a3e0fee0625">getID</link>()&#32;<emphasis role="keyword">const</emphasis>;
<anchor xml:id="_Argx_8hpp_source_1l00197"/>00197 &#32;&#32;&#32;&#32;};
<anchor xml:id="_Argx_8hpp_source_1l00198"/>00198 }
<anchor xml:id="_Argx_8hpp_source_1l00199"/>00199 
<anchor xml:id="_Argx_8hpp_source_1l00200"/>00200 <emphasis role="preprocessor">#else</emphasis>
<anchor xml:id="_Argx_8hpp_source_1l00201"/>00201 <emphasis role="preprocessor">#&#32;&#32;&#32;error&#32;&quot;Must&#32;compile&#32;with&#32;C++14&#32;support&#32;or&#32;newer&quot;</emphasis>
<anchor xml:id="_Argx_8hpp_source_1l00202"/>00202 <emphasis role="preprocessor">#&#32;&#32;&#32;pragma&#32;message(&quot;Current&#32;standard&#32;is&#32;&quot;&#32;ARGX_TOSTRING(__cplusplus))</emphasis>
<anchor xml:id="_Argx_8hpp_source_1l00203"/>00203 <emphasis role="preprocessor">#endif</emphasis>
</programlisting></section>
