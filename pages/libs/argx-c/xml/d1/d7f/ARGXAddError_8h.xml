<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.13.2" xml:lang="en-US">
  <compounddef id="d1/d7f/ARGXAddError_8h" kind="file" language="C++">
    <compoundname>ARGXAddError.h</compoundname>
    <includes refid="d9/d49/types_8h" local="yes">types.h</includes>
    <includedby refid="de/d77/ARGXAddError_8c" local="yes">src/ARGXAddError.c</includedby>
    <incdepgraph>
      <node id="1">
        <label>inc/ARGXAddError.h</label>
        <link refid="d1/d7f/ARGXAddError_8h"/>
        <childnode refid="2" relation="include">
        </childnode>
      </node>
      <node id="2">
        <label>types.h</label>
        <link refid="d9/d49/types_8h"/>
        <childnode refid="3" relation="include">
        </childnode>
        <childnode refid="4" relation="include">
        </childnode>
      </node>
      <node id="3">
        <label>stdbool.h</label>
      </node>
      <node id="4">
        <label>stddef.h</label>
      </node>
    </incdepgraph>
    <invincdepgraph>
      <node id="1">
        <label>inc/ARGXAddError.h</label>
        <link refid="d1/d7f/ARGXAddError_8h"/>
        <childnode refid="2" relation="include">
        </childnode>
      </node>
      <node id="2">
        <label>src/ARGXAddError.c</label>
        <link refid="de/d77/ARGXAddError_8c"/>
      </node>
    </invincdepgraph>
    <innerclass refid="d5/d08/structArgxcErrorPair" prot="public">ArgxcErrorPair</innerclass>
    <sectiondef kind="func">
      <memberdef kind="function" id="d1/d7f/ARGXAddError_8h_1a8c4ee33ae3d4a6208322ad503dceca9e" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="d8/d54/structArgxcError" kindref="compound">ArgxcError</ref></type>
        <definition>ArgxcError argxcCreateErrorSimple</definition>
        <argsstring>(const char *msg, const char *help)</argsstring>
        <name>argxcCreateErrorSimple</name>
        <param>
          <type>const char *</type>
          <declname>msg</declname>
        </param>
        <param>
          <type>const char *</type>
          <declname>help</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="inc/ARGXAddError.h" line="10" column="12" bodyfile="src/ARGXAddError.c" bodystart="19" bodyend="29" declfile="inc/ARGXAddError.h" declline="10" declcolumn="12"/>
        <references refid="d8/d54/structArgxcError_1a617299f808dff4b2656bf04384e64bf9" compoundref="d9/d49/types_8h" startline="19">ArgxcError::code</references>
        <references refid="d8/d54/structArgxcError_1a88d100236636b2eb326025d527ad26f3" compoundref="d9/d49/types_8h" startline="17">ArgxcError::error</references>
        <references refid="d8/d54/structArgxcError_1a9e83392469b228017a3b6492392f68ad" compoundref="d9/d49/types_8h" startline="18">ArgxcError::help</references>
        <references refid="de/d77/ARGXAddError_8c_1a814b3298d81b070e52a987654d18d8a2" compoundref="de/d77/ARGXAddError_8c" startline="7" endline="17">stringDuplicate</references>
        <references refid="d8/d54/structArgxcError_1ab4531054aa9750f66f0cae13f67365ad" compoundref="d9/d49/types_8h" startline="16">ArgxcError::type</references>
      </memberdef>
      <memberdef kind="function" id="d1/d7f/ARGXAddError_8h_1a038539b9defbaf62f7a175d75388866d" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int argxcGetErrorCode</definition>
        <argsstring>(const ArgxcError *error)</argsstring>
        <name>argxcGetErrorCode</name>
        <param>
          <type>const <ref refid="d8/d54/structArgxcError" kindref="compound">ArgxcError</ref> *</type>
          <declname>error</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="inc/ARGXAddError.h" line="13" column="5" bodyfile="src/ARGXAddError.c" bodystart="41" bodyend="44" declfile="inc/ARGXAddError.h" declline="13" declcolumn="5"/>
        <references refid="d8/d54/structArgxcError_1a617299f808dff4b2656bf04384e64bf9" compoundref="d9/d49/types_8h" startline="19">ArgxcError::code</references>
      </memberdef>
      <memberdef kind="function" id="d1/d7f/ARGXAddError_8h_1a82d77328ff61877b8ab10d054bc5ced4" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>const char *</type>
        <definition>const char * argxcGetErrorHelp</definition>
        <argsstring>(const ArgxcError *error)</argsstring>
        <name>argxcGetErrorHelp</name>
        <param>
          <type>const <ref refid="d8/d54/structArgxcError" kindref="compound">ArgxcError</ref> *</type>
          <declname>error</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="inc/ARGXAddError.h" line="12" column="12" bodyfile="src/ARGXAddError.c" bodystart="36" bodyend="39" declfile="inc/ARGXAddError.h" declline="12" declcolumn="12"/>
        <references refid="d8/d54/structArgxcError_1a9e83392469b228017a3b6492392f68ad" compoundref="d9/d49/types_8h" startline="18">ArgxcError::help</references>
      </memberdef>
      <memberdef kind="function" id="d1/d7f/ARGXAddError_8h_1a9e0ec52023e67e806606050d12a934a8" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>const char *</type>
        <definition>const char * argxcGetErrorMessage</definition>
        <argsstring>(const ArgxcError *error)</argsstring>
        <name>argxcGetErrorMessage</name>
        <param>
          <type>const <ref refid="d8/d54/structArgxcError" kindref="compound">ArgxcError</ref> *</type>
          <declname>error</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="inc/ARGXAddError.h" line="11" column="12" bodyfile="src/ARGXAddError.c" bodystart="31" bodyend="34" declfile="inc/ARGXAddError.h" declline="11" declcolumn="12"/>
        <references refid="d8/d54/structArgxcError_1a88d100236636b2eb326025d527ad26f3" compoundref="d9/d49/types_8h" startline="17">ArgxcError::error</references>
      </memberdef>
      <memberdef kind="function" id="d1/d7f/ARGXAddError_8h_1ae080742df3abdaba51a357b9c68775dd" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="d5/d08/structArgxcErrorPair" kindref="compound">ArgxcErrorPair</ref></type>
        <definition>ArgxcErrorPair argxcGetErrorPair</definition>
        <argsstring>(const ArgxcError *error)</argsstring>
        <name>argxcGetErrorPair</name>
        <param>
          <type>const <ref refid="d8/d54/structArgxcError" kindref="compound">ArgxcError</ref> *</type>
          <declname>error</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="inc/ARGXAddError.h" line="20" column="16" bodyfile="src/ARGXAddError.c" bodystart="46" bodyend="57" declfile="inc/ARGXAddError.h" declline="20" declcolumn="16"/>
        <references refid="d8/d54/structArgxcError_1a88d100236636b2eb326025d527ad26f3" compoundref="d9/d49/types_8h" startline="17">ArgxcError::error</references>
        <references refid="d5/d08/structArgxcErrorPair_1a548e70442f749cb33bf853987bbb2707" compoundref="d1/d7f/ARGXAddError_8h" startline="16">ArgxcErrorPair::error</references>
        <references refid="d8/d54/structArgxcError_1a9e83392469b228017a3b6492392f68ad" compoundref="d9/d49/types_8h" startline="18">ArgxcError::help</references>
        <references refid="d5/d08/structArgxcErrorPair_1ab7a2046f22e6b8a74ca323b985cee6ce" compoundref="d1/d7f/ARGXAddError_8h" startline="17">ArgxcErrorPair::help</references>
      </memberdef>
    </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <programlisting>
<codeline lineno="1"><highlight class="preprocessor">#pragma<sp/>once</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2"><highlight class="normal"></highlight></codeline>
<codeline lineno="3"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="d9/d49/types_8h" kindref="compound">types.h</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4"><highlight class="normal"></highlight></codeline>
<codeline lineno="5"><highlight class="normal"></highlight><highlight class="preprocessor">#ifdef<sp/>__cplusplus</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="6"><highlight class="normal"></highlight><highlight class="keyword">extern</highlight><highlight class="normal"><sp/></highlight><highlight class="stringliteral">&quot;C&quot;</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="7"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="8"><highlight class="normal"></highlight></codeline>
<codeline lineno="9"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Error<sp/>creation<sp/>and<sp/>management</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="10"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="d8/d54/structArgxcError" kindref="compound">ArgxcError</ref><sp/><ref refid="d1/d7f/ARGXAddError_8h_1a8c4ee33ae3d4a6208322ad503dceca9e" kindref="member">argxcCreateErrorSimple</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*msg,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*help);</highlight></codeline>
<codeline lineno="11"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal">*<sp/><ref refid="d1/d7f/ARGXAddError_8h_1a9e0ec52023e67e806606050d12a934a8" kindref="member">argxcGetErrorMessage</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="d8/d54/structArgxcError" kindref="compound">ArgxcError</ref><sp/>*error);</highlight></codeline>
<codeline lineno="12"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal">*<sp/><ref refid="d1/d7f/ARGXAddError_8h_1a82d77328ff61877b8ab10d054bc5ced4" kindref="member">argxcGetErrorHelp</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="d8/d54/structArgxcError" kindref="compound">ArgxcError</ref><sp/>*error);</highlight></codeline>
<codeline lineno="13"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="d1/d7f/ARGXAddError_8h_1a038539b9defbaf62f7a175d75388866d" kindref="member">argxcGetErrorCode</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="d8/d54/structArgxcError" kindref="compound">ArgxcError</ref><sp/>*error);</highlight></codeline>
<codeline lineno="14"><highlight class="normal"></highlight></codeline>
<codeline lineno="15" refid="d5/d08/structArgxcErrorPair" refkind="compound"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="16" refid="d5/d08/structArgxcErrorPair_1a548e70442f749cb33bf853987bbb2707" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*<ref refid="d5/d08/structArgxcErrorPair_1a548e70442f749cb33bf853987bbb2707" kindref="member">error</ref>;</highlight></codeline>
<codeline lineno="17" refid="d5/d08/structArgxcErrorPair_1ab7a2046f22e6b8a74ca323b985cee6ce" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*<ref refid="d5/d08/structArgxcErrorPair_1ab7a2046f22e6b8a74ca323b985cee6ce" kindref="member">help</ref>;</highlight></codeline>
<codeline lineno="18"><highlight class="normal"><sp/><sp/><sp/><sp/>}<sp/><ref refid="d5/d08/structArgxcErrorPair" kindref="compound">ArgxcErrorPair</ref>;</highlight></codeline>
<codeline lineno="19"><highlight class="normal"></highlight></codeline>
<codeline lineno="20"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="d5/d08/structArgxcErrorPair" kindref="compound">ArgxcErrorPair</ref><sp/><ref refid="d1/d7f/ARGXAddError_8h_1ae080742df3abdaba51a357b9c68775dd" kindref="member">argxcGetErrorPair</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="d8/d54/structArgxcError" kindref="compound">ArgxcError</ref><sp/>*error);</highlight></codeline>
<codeline lineno="21"><highlight class="normal"></highlight></codeline>
<codeline lineno="22"><highlight class="normal"></highlight><highlight class="preprocessor">#ifdef<sp/>__cplusplus</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="23"><highlight class="normal">}</highlight></codeline>
<codeline lineno="24"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight></codeline>
    </programlisting>
    <location file="inc/ARGXAddError.h"/>
  </compounddef>
</doxygen>
