<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.13.2" xml:lang="en-US">
  <compounddef id="d0/df9/Argx_8c" kind="file" language="C++">
    <compoundname>Argx.c</compoundname>
    <includes local="no">stdlib.h</includes>
    <includes local="no">string.h</includes>
    <includes local="no">stdio.h</includes>
    <includes local="no">stdbool.h</includes>
    <includes refid="d6/d8e/Argx_8h" local="yes">../inc/Argx.h</includes>
    <includes refid="d9/d49/types_8h" local="yes">../inc/types.h</includes>
    <incdepgraph>
      <node id="6">
        <label>../inc/Argx.h</label>
        <link refid="d6/d8e/Argx_8h"/>
        <childnode refid="5" relation="include">
        </childnode>
        <childnode refid="7" relation="include">
        </childnode>
      </node>
      <node id="7">
        <label>types.h</label>
        <link refid="d9/d49/types_8h"/>
        <childnode refid="5" relation="include">
        </childnode>
        <childnode refid="8" relation="include">
        </childnode>
      </node>
      <node id="1">
        <label>src/Argx.c</label>
        <link refid="d0/df9/Argx_8c"/>
        <childnode refid="2" relation="include">
        </childnode>
        <childnode refid="3" relation="include">
        </childnode>
        <childnode refid="4" relation="include">
        </childnode>
        <childnode refid="5" relation="include">
        </childnode>
        <childnode refid="6" relation="include">
        </childnode>
        <childnode refid="7" relation="include">
        </childnode>
      </node>
      <node id="5">
        <label>stdbool.h</label>
      </node>
      <node id="8">
        <label>stddef.h</label>
      </node>
      <node id="4">
        <label>stdio.h</label>
      </node>
      <node id="2">
        <label>stdlib.h</label>
      </node>
      <node id="3">
        <label>string.h</label>
      </node>
    </incdepgraph>
    <innerclass refid="d8/d40/structArgxc" prot="public">Argxc</innerclass>
    <sectiondef kind="func">
      <memberdef kind="function" id="d0/df9/Argx_8c_1a4b2d2f49ede5c7008816f5c2039d4c2c" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void argxcAddOption</definition>
        <argsstring>(Argxc *argxc, ArgxcOptions option)</argsstring>
        <name>argxcAddOption</name>
        <param>
          <type><ref refid="d8/d40/structArgxc" kindref="compound">Argxc</ref> *</type>
          <declname>argxc</declname>
        </param>
        <param>
          <type><ref refid="d2/dcb/structArgxcOptions" kindref="compound">ArgxcOptions</ref></type>
          <declname>option</declname>
        </param>
        <briefdescription>
<para>Add a new option to the <ref refid="d8/d40/structArgxc" kindref="compound">Argxc</ref> instance. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>argxc</parametername>
</parameternamelist>
<parameterdescription>
<para>Pointer to the <ref refid="d8/d40/structArgxc" kindref="compound">Argxc</ref> instance. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>option</parametername>
</parameternamelist>
<parameterdescription>
<para>The option to add. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/Argx.c" line="124" column="6" bodyfile="src/Argx.c" bodystart="124" bodyend="136"/>
        <references refid="d8/d40/structArgxc_1af24c08ed9dab8ad9800393568097a848" compoundref="d0/df9/Argx_8c" startline="20">Argxc::options</references>
        <references refid="d8/d40/structArgxc_1a73fbef3389172b12448589e62c5aff34" compoundref="d0/df9/Argx_8c" startline="22">Argxc::optionsCapacity</references>
        <references refid="d8/d40/structArgxc_1ad25d74e066fa21cb7db95f901f0eabe6" compoundref="d0/df9/Argx_8c" startline="21">Argxc::optionsCount</references>
      </memberdef>
      <memberdef kind="function" id="d0/df9/Argx_8c_1a68874cb095408ec91cf02d7ab0df0fa8" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void argxcAddSubOption</definition>
        <argsstring>(ArgxcOptions *parent, ArgxcOptions subOption)</argsstring>
        <name>argxcAddSubOption</name>
        <param>
          <type><ref refid="d2/dcb/structArgxcOptions" kindref="compound">ArgxcOptions</ref> *</type>
          <declname>parent</declname>
        </param>
        <param>
          <type><ref refid="d2/dcb/structArgxcOptions" kindref="compound">ArgxcOptions</ref></type>
          <declname>subOption</declname>
        </param>
        <briefdescription>
<para>Add a sub-option to a parent option. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>parent</parametername>
</parameternamelist>
<parameterdescription>
<para>Pointer to the parent option. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>subOption</parametername>
</parameternamelist>
<parameterdescription>
<para>Sub-option to add under the parent. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/Argx.c" line="138" column="6" bodyfile="src/Argx.c" bodystart="138" bodyend="153"/>
        <references refid="d2/dcb/structArgxcOptions_1a988e8b4509c28e594fb570bc6b2430c5" compoundref="d9/d49/types_8h" startline="32">ArgxcOptions::subParams</references>
        <references refid="d2/dcb/structArgxcOptions_1abe87d3c8fcdf1a843ea90652c78b5ed1" compoundref="d9/d49/types_8h" startline="34">ArgxcOptions::subParamsCapacity</references>
        <references refid="d2/dcb/structArgxcOptions_1a1383f66c1ca2c8fe428e7005c624fc76" compoundref="d9/d49/types_8h" startline="33">ArgxcOptions::subParamsCount</references>
      </memberdef>
      <memberdef kind="function" id="d0/df9/Argx_8c_1a3f5733b4921f06fcfc46444313114b13" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool argxcCompareArgs</definition>
        <argsstring>(ArgxcOptions *options, size_t optionsCount, char **argv, size_t argvCount)</argsstring>
        <name>argxcCompareArgs</name>
        <param>
          <type><ref refid="d2/dcb/structArgxcOptions" kindref="compound">ArgxcOptions</ref> *</type>
          <declname>options</declname>
        </param>
        <param>
          <type>size_t</type>
          <declname>optionsCount</declname>
        </param>
        <param>
          <type>char **</type>
          <declname>argv</declname>
        </param>
        <param>
          <type>size_t</type>
          <declname>argvCount</declname>
        </param>
        <briefdescription>
<para>Compare if the given argv matches a list of <ref refid="d2/dcb/structArgxcOptions" kindref="compound">ArgxcOptions</ref>. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>options</parametername>
</parameternamelist>
<parameterdescription>
<para>Array of <ref refid="d2/dcb/structArgxcOptions" kindref="compound">ArgxcOptions</ref>. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>optionsCount</parametername>
</parameternamelist>
<parameterdescription>
<para>Number of options. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>argv</parametername>
</parameternamelist>
<parameterdescription>
<para>Array of argument strings. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>argvCount</parametername>
</parameternamelist>
<parameterdescription>
<para>Number of argument strings. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>true if argv matches the options, false otherwise. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/Argx.c" line="499" column="6" bodyfile="src/Argx.c" bodystart="499" bodyend="567"/>
        <references refid="d2/dcb/structArgxcOptions_1ad36df6627ddcae7c469d92794d5a5ddc" compoundref="d9/d49/types_8h" startline="31">ArgxcOptions::hasAnySubParams</references>
        <references refid="d2/dcb/structArgxcOptions_1add27505ea653aa67161a226f9daff3ca" compoundref="d9/d49/types_8h" startline="30">ArgxcOptions::hasSubParams</references>
        <references refid="d2/dcb/structArgxcOptions_1a1b2766df178647d8d72f9c4450e488b3" compoundref="d9/d49/types_8h" startline="27">ArgxcOptions::param</references>
        <references refid="d2/dcb/structArgxcOptions_1a4a0102388f796032fc500271d1f66dd6" compoundref="d9/d49/types_8h" startline="28">ArgxcOptions::sparam</references>
        <references refid="d2/dcb/structArgxcOptions_1a988e8b4509c28e594fb570bc6b2430c5" compoundref="d9/d49/types_8h" startline="32">ArgxcOptions::subParams</references>
        <references refid="d2/dcb/structArgxcOptions_1a1383f66c1ca2c8fe428e7005c624fc76" compoundref="d9/d49/types_8h" startline="33">ArgxcOptions::subParamsCount</references>
      </memberdef>
      <memberdef kind="function" id="d0/df9/Argx_8c_1a05e89b0c2c00b96db95fa612a3a19809" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="d8/d40/structArgxc" kindref="compound">Argxc</ref> *</type>
        <definition>Argxc * argxcCreate</definition>
        <argsstring>(const char *id, int argc, char *argv[])</argsstring>
        <name>argxcCreate</name>
        <param>
          <type>const char *</type>
          <declname>id</declname>
        </param>
        <param>
          <type>int</type>
          <declname>argc</declname>
        </param>
        <param>
          <type>char *</type>
          <declname>argv</declname>
          <array>[]</array>
        </param>
        <briefdescription>
<para>Create a new <ref refid="d8/d40/structArgxc" kindref="compound">Argxc</ref> instance with a specified ID and command-line arguments. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>id</parametername>
</parameternamelist>
<parameterdescription>
<para>Identifier for the parser instance. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>argc</parametername>
</parameternamelist>
<parameterdescription>
<para>Number of command-line arguments. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>argv</parametername>
</parameternamelist>
<parameterdescription>
<para>Array of command-line argument strings. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>Argxc* Pointer to the created <ref refid="d8/d40/structArgxc" kindref="compound">Argxc</ref> instance. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/Argx.c" line="64" column="7" bodyfile="src/Argx.c" bodystart="64" bodyend="89"/>
        <references refid="d0/df9/Argx_8c_1a944b6c8a9498789cd0a51fdfe9a8c486" compoundref="d0/df9/Argx_8c" startline="113" endline="121">argxcDestroy</references>
        <references refid="d8/d40/structArgxc_1aaa5a7528c35f7c26ff0c7283db33fe8b" compoundref="d0/df9/Argx_8c" startline="16">Argxc::id</references>
        <references refid="d8/d40/structArgxc_1ae48ba4369d927bced0bc2b3eb76cc4e5" compoundref="d0/df9/Argx_8c" startline="19">Argxc::mainArgc</references>
        <references refid="d8/d40/structArgxc_1a666f9d971aaf4b9adfb18908a1205fda" compoundref="d0/df9/Argx_8c" startline="17">Argxc::mainArgs</references>
        <references refid="d8/d40/structArgxc_1a06a20f9bbf66ce13fb9ac6745a84de9e" compoundref="d0/df9/Argx_8c" startline="18">Argxc::mainArgsCount</references>
        <references refid="d8/d40/structArgxc_1af24c08ed9dab8ad9800393568097a848" compoundref="d0/df9/Argx_8c" startline="20">Argxc::options</references>
        <references refid="d8/d40/structArgxc_1a73fbef3389172b12448589e62c5aff34" compoundref="d0/df9/Argx_8c" startline="22">Argxc::optionsCapacity</references>
        <references refid="d8/d40/structArgxc_1ad25d74e066fa21cb7db95f901f0eabe6" compoundref="d0/df9/Argx_8c" startline="21">Argxc::optionsCount</references>
        <references refid="d0/df9/Argx_8c_1a814b3298d81b070e52a987654d18d8a2" compoundref="d0/df9/Argx_8c" startline="26" endline="36">stringDuplicate</references>
      </memberdef>
      <memberdef kind="function" id="d0/df9/Argx_8c_1a7490f1245ca836e793645d70dcabe7f6" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="d8/d40/structArgxc" kindref="compound">Argxc</ref> *</type>
        <definition>Argxc * argxcCreateDefault</definition>
        <argsstring>(void)</argsstring>
        <name>argxcCreateDefault</name>
        <param>
          <type>void</type>
        </param>
        <briefdescription>
<para>Create a new <ref refid="d8/d40/structArgxc" kindref="compound">Argxc</ref> instance with default values (empty ID and no arguments). </para>
        </briefdescription>
        <detaileddescription>
<para><simplesect kind="return"><para>Argxc* Pointer to the default <ref refid="d8/d40/structArgxc" kindref="compound">Argxc</ref> instance. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/Argx.c" line="91" column="7" bodyfile="src/Argx.c" bodystart="91" bodyend="111"/>
        <references refid="d8/d40/structArgxc_1aaa5a7528c35f7c26ff0c7283db33fe8b" compoundref="d0/df9/Argx_8c" startline="16">Argxc::id</references>
        <references refid="d8/d40/structArgxc_1ae48ba4369d927bced0bc2b3eb76cc4e5" compoundref="d0/df9/Argx_8c" startline="19">Argxc::mainArgc</references>
        <references refid="d8/d40/structArgxc_1a666f9d971aaf4b9adfb18908a1205fda" compoundref="d0/df9/Argx_8c" startline="17">Argxc::mainArgs</references>
        <references refid="d8/d40/structArgxc_1a06a20f9bbf66ce13fb9ac6745a84de9e" compoundref="d0/df9/Argx_8c" startline="18">Argxc::mainArgsCount</references>
        <references refid="d8/d40/structArgxc_1af24c08ed9dab8ad9800393568097a848" compoundref="d0/df9/Argx_8c" startline="20">Argxc::options</references>
        <references refid="d8/d40/structArgxc_1a73fbef3389172b12448589e62c5aff34" compoundref="d0/df9/Argx_8c" startline="22">Argxc::optionsCapacity</references>
        <references refid="d8/d40/structArgxc_1ad25d74e066fa21cb7db95f901f0eabe6" compoundref="d0/df9/Argx_8c" startline="21">Argxc::optionsCount</references>
      </memberdef>
      <memberdef kind="function" id="d0/df9/Argx_8c_1ad18963570800f99309c7ae551d09442b" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>char *</type>
        <definition>char * argxcCreateDocs</definition>
        <argsstring>(Argxc *argxc, ArgxcStyle style, const char *title, const char *mainInfo)</argsstring>
        <name>argxcCreateDocs</name>
        <param>
          <type><ref refid="d8/d40/structArgxc" kindref="compound">Argxc</ref> *</type>
          <declname>argxc</declname>
        </param>
        <param>
          <type><ref refid="d9/d49/types_8h_1a0eb907e7e710ee24d66bd7b881999ebb" kindref="member">ArgxcStyle</ref></type>
          <declname>style</declname>
        </param>
        <param>
          <type>const char *</type>
          <declname>title</declname>
        </param>
        <param>
          <type>const char *</type>
          <declname>mainInfo</declname>
        </param>
        <briefdescription>
<para>Generate documentation for the defined options. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>argxc</parametername>
</parameternamelist>
<parameterdescription>
<para>Pointer to the <ref refid="d8/d40/structArgxc" kindref="compound">Argxc</ref> instance. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>style</parametername>
</parameternamelist>
<parameterdescription>
<para>Documentation output style. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>title</parametername>
</parameternamelist>
<parameterdescription>
<para>Title of the documentation. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>mainInfo</parametername>
</parameternamelist>
<parameterdescription>
<para>Additional info to be displayed in the documentation. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>char* Documentation string (must be freed by caller). </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/Argx.c" line="375" column="6" bodyfile="src/Argx.c" bodystart="375" bodyend="497"/>
        <references refid="d9/d49/types_8h_1a0eb907e7e710ee24d66bd7b881999ebba5926a1c4b95fe8294eee1ab316063d47" compoundref="d9/d49/types_8h" startline="11">ARGX_STYLE_PROFESSIONAL</references>
        <references refid="d9/d49/types_8h_1a0eb907e7e710ee24d66bd7b881999ebbad8465ee3943616d15c25e8b2ff2d06e2" compoundref="d9/d49/types_8h" startline="12">ARGX_STYLE_SIMPLE</references>
        <references refid="d2/dcb/structArgxcOptions_1add27505ea653aa67161a226f9daff3ca" compoundref="d9/d49/types_8h" startline="30">ArgxcOptions::hasSubParams</references>
        <references refid="d2/dcb/structArgxcOptions_1a595bdcea1b5696ffa5023c3319bf604c" compoundref="d9/d49/types_8h" startline="26">ArgxcOptions::id</references>
        <references refid="d2/dcb/structArgxcOptions_1aa912383cc480f5009cac8058454e279b" compoundref="d9/d49/types_8h" startline="29">ArgxcOptions::info</references>
        <references refid="d8/d40/structArgxc_1af24c08ed9dab8ad9800393568097a848" compoundref="d0/df9/Argx_8c" startline="20">Argxc::options</references>
        <references refid="d8/d40/structArgxc_1ad25d74e066fa21cb7db95f901f0eabe6" compoundref="d0/df9/Argx_8c" startline="21">Argxc::optionsCount</references>
        <references refid="d2/dcb/structArgxcOptions_1a1b2766df178647d8d72f9c4450e488b3" compoundref="d9/d49/types_8h" startline="27">ArgxcOptions::param</references>
        <references refid="d2/dcb/structArgxcOptions_1a4a0102388f796032fc500271d1f66dd6" compoundref="d9/d49/types_8h" startline="28">ArgxcOptions::sparam</references>
        <references refid="d2/dcb/structArgxcOptions_1a988e8b4509c28e594fb570bc6b2430c5" compoundref="d9/d49/types_8h" startline="32">ArgxcOptions::subParams</references>
        <references refid="d2/dcb/structArgxcOptions_1a1383f66c1ca2c8fe428e7005c624fc76" compoundref="d9/d49/types_8h" startline="33">ArgxcOptions::subParamsCount</references>
      </memberdef>
      <memberdef kind="function" id="d0/df9/Argx_8c_1aff55e2b9a01cc2b4d3bdd44264eef8bd" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="d8/d54/structArgxcError" kindref="compound">ArgxcError</ref></type>
        <definition>ArgxcError argxcCreateError</definition>
        <argsstring>(const char *type, const char *error, const char *help, int code)</argsstring>
        <name>argxcCreateError</name>
        <param>
          <type>const char *</type>
          <declname>type</declname>
        </param>
        <param>
          <type>const char *</type>
          <declname>error</declname>
        </param>
        <param>
          <type>const char *</type>
          <declname>help</declname>
        </param>
        <param>
          <type>int</type>
          <declname>code</declname>
        </param>
        <briefdescription>
<para>Create an <ref refid="d8/d54/structArgxcError" kindref="compound">ArgxcError</ref> object. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>type</parametername>
</parameternamelist>
<parameterdescription>
<para>Type/category of the error. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>error</parametername>
</parameternamelist>
<parameterdescription>
<para>Error message. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>help</parametername>
</parameternamelist>
<parameterdescription>
<para>Help message for resolving the error. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>code</parametername>
</parameternamelist>
<parameterdescription>
<para>Exit code or error code. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para><ref refid="d8/d54/structArgxcError" kindref="compound">ArgxcError</ref> The created error struct. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/Argx.c" line="667" column="12" bodyfile="src/Argx.c" bodystart="667" bodyend="677"/>
        <references refid="d8/d54/structArgxcError_1a617299f808dff4b2656bf04384e64bf9" compoundref="d9/d49/types_8h" startline="19">ArgxcError::code</references>
        <references refid="d8/d54/structArgxcError_1a88d100236636b2eb326025d527ad26f3" compoundref="d9/d49/types_8h" startline="17">ArgxcError::error</references>
        <references refid="d8/d54/structArgxcError_1a9e83392469b228017a3b6492392f68ad" compoundref="d9/d49/types_8h" startline="18">ArgxcError::help</references>
        <references refid="d0/df9/Argx_8c_1a814b3298d81b070e52a987654d18d8a2" compoundref="d0/df9/Argx_8c" startline="26" endline="36">stringDuplicate</references>
        <references refid="d8/d54/structArgxcError_1ab4531054aa9750f66f0cae13f67365ad" compoundref="d9/d49/types_8h" startline="16">ArgxcError::type</references>
      </memberdef>
      <memberdef kind="function" id="d0/df9/Argx_8c_1a5efc30ffddcc4d6ba7c2db7b8ab680ec" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="d2/dcb/structArgxcOptions" kindref="compound">ArgxcOptions</ref></type>
        <definition>ArgxcOptions argxcCreateOption</definition>
        <argsstring>(const char *id, const char *param, const char *sparam, const char *info, bool hasSubParams, bool hasAnySubParams)</argsstring>
        <name>argxcCreateOption</name>
        <param>
          <type>const char *</type>
          <declname>id</declname>
        </param>
        <param>
          <type>const char *</type>
          <declname>param</declname>
        </param>
        <param>
          <type>const char *</type>
          <declname>sparam</declname>
        </param>
        <param>
          <type>const char *</type>
          <declname>info</declname>
        </param>
        <param>
          <type>bool</type>
          <declname>hasSubParams</declname>
        </param>
        <param>
          <type>bool</type>
          <declname>hasAnySubParams</declname>
        </param>
        <briefdescription>
<para>Create a new option. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>id</parametername>
</parameternamelist>
<parameterdescription>
<para>Option identifier. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>param</parametername>
</parameternamelist>
<parameterdescription>
<para>Parameter name (e.g., <ndash/>param). </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>sparam</parametername>
</parameternamelist>
<parameterdescription>
<para>Short form (e.g., -p). </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>info</parametername>
</parameternamelist>
<parameterdescription>
<para>Description of the option. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>hasSubParams</parametername>
</parameternamelist>
<parameterdescription>
<para>Whether the option has sub-parameters. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>hasAnySubParams</parametername>
</parameternamelist>
<parameterdescription>
<para>Whether the option accepts any sub-parameters. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para><ref refid="d2/dcb/structArgxcOptions" kindref="compound">ArgxcOptions</ref> The created option. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/Argx.c" line="607" column="14" bodyfile="src/Argx.c" bodystart="607" bodyend="622"/>
        <references refid="d2/dcb/structArgxcOptions_1ad36df6627ddcae7c469d92794d5a5ddc" compoundref="d9/d49/types_8h" startline="31">ArgxcOptions::hasAnySubParams</references>
        <references refid="d2/dcb/structArgxcOptions_1add27505ea653aa67161a226f9daff3ca" compoundref="d9/d49/types_8h" startline="30">ArgxcOptions::hasSubParams</references>
        <references refid="d2/dcb/structArgxcOptions_1a595bdcea1b5696ffa5023c3319bf604c" compoundref="d9/d49/types_8h" startline="26">ArgxcOptions::id</references>
        <references refid="d2/dcb/structArgxcOptions_1aa912383cc480f5009cac8058454e279b" compoundref="d9/d49/types_8h" startline="29">ArgxcOptions::info</references>
        <references refid="d2/dcb/structArgxcOptions_1a1b2766df178647d8d72f9c4450e488b3" compoundref="d9/d49/types_8h" startline="27">ArgxcOptions::param</references>
        <references refid="d2/dcb/structArgxcOptions_1a4a0102388f796032fc500271d1f66dd6" compoundref="d9/d49/types_8h" startline="28">ArgxcOptions::sparam</references>
        <references refid="d0/df9/Argx_8c_1a814b3298d81b070e52a987654d18d8a2" compoundref="d0/df9/Argx_8c" startline="26" endline="36">stringDuplicate</references>
        <references refid="d2/dcb/structArgxcOptions_1a988e8b4509c28e594fb570bc6b2430c5" compoundref="d9/d49/types_8h" startline="32">ArgxcOptions::subParams</references>
        <references refid="d2/dcb/structArgxcOptions_1a1383f66c1ca2c8fe428e7005c624fc76" compoundref="d9/d49/types_8h" startline="33">ArgxcOptions::subParamsCount</references>
      </memberdef>
      <memberdef kind="function" id="d0/df9/Argx_8c_1a944b6c8a9498789cd0a51fdfe9a8c486" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void argxcDestroy</definition>
        <argsstring>(Argxc *argxc)</argsstring>
        <name>argxcDestroy</name>
        <param>
          <type><ref refid="d8/d40/structArgxc" kindref="compound">Argxc</ref> *</type>
          <declname>argxc</declname>
        </param>
        <briefdescription>
<para>Destroy an <ref refid="d8/d40/structArgxc" kindref="compound">Argxc</ref> instance and free all associated memory. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>argxc</parametername>
</parameternamelist>
<parameterdescription>
<para>Pointer to the <ref refid="d8/d40/structArgxc" kindref="compound">Argxc</ref> instance to destroy. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/Argx.c" line="113" column="6" bodyfile="src/Argx.c" bodystart="113" bodyend="121"/>
        <references refid="d0/df9/Argx_8c_1acac8053f967174a1b860aad28c2b12d0" compoundref="d0/df9/Argx_8c" startline="50" endline="61">freeOptionsArray</references>
        <references refid="d0/df9/Argx_8c_1a420b857128cfa7527dc66424a1ece935" compoundref="d0/df9/Argx_8c" startline="38" endline="48">freeStringArray</references>
        <references refid="d8/d40/structArgxc_1aaa5a7528c35f7c26ff0c7283db33fe8b" compoundref="d0/df9/Argx_8c" startline="16">Argxc::id</references>
        <references refid="d8/d40/structArgxc_1a666f9d971aaf4b9adfb18908a1205fda" compoundref="d0/df9/Argx_8c" startline="17">Argxc::mainArgs</references>
        <references refid="d8/d40/structArgxc_1a06a20f9bbf66ce13fb9ac6745a84de9e" compoundref="d0/df9/Argx_8c" startline="18">Argxc::mainArgsCount</references>
        <references refid="d8/d40/structArgxc_1af24c08ed9dab8ad9800393568097a848" compoundref="d0/df9/Argx_8c" startline="20">Argxc::options</references>
        <references refid="d8/d40/structArgxc_1ad25d74e066fa21cb7db95f901f0eabe6" compoundref="d0/df9/Argx_8c" startline="21">Argxc::optionsCount</references>
        <referencedby refid="d6/d8e/Argx_8h_1a05e89b0c2c00b96db95fa612a3a19809" compoundref="d0/df9/Argx_8c" startline="64" endline="89">argxcCreate</referencedby>
      </memberdef>
      <memberdef kind="function" id="d0/df9/Argx_8c_1a4a12dce73edcc011355f47d4543e32a6" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int argxcFindParam</definition>
        <argsstring>(Argxc *argxc, const char *id)</argsstring>
        <name>argxcFindParam</name>
        <param>
          <type><ref refid="d8/d40/structArgxc" kindref="compound">Argxc</ref> *</type>
          <declname>argxc</declname>
        </param>
        <param>
          <type>const char *</type>
          <declname>id</declname>
        </param>
        <briefdescription>
<para>Find the index of a parameter by ID. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>argxc</parametername>
</parameternamelist>
<parameterdescription>
<para>Pointer to the <ref refid="d8/d40/structArgxc" kindref="compound">Argxc</ref> instance. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>id</parametername>
</parameternamelist>
<parameterdescription>
<para>The identifier of the parameter to find. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>int Index of the parameter, or -1 if not found. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/Argx.c" line="155" column="5" bodyfile="src/Argx.c" bodystart="155" bodyend="207"/>
        <references refid="d2/dcb/structArgxcOptions_1a595bdcea1b5696ffa5023c3319bf604c" compoundref="d9/d49/types_8h" startline="26">ArgxcOptions::id</references>
        <references refid="d8/d40/structArgxc_1a666f9d971aaf4b9adfb18908a1205fda" compoundref="d0/df9/Argx_8c" startline="17">Argxc::mainArgs</references>
        <references refid="d8/d40/structArgxc_1a06a20f9bbf66ce13fb9ac6745a84de9e" compoundref="d0/df9/Argx_8c" startline="18">Argxc::mainArgsCount</references>
        <references refid="d8/d40/structArgxc_1af24c08ed9dab8ad9800393568097a848" compoundref="d0/df9/Argx_8c" startline="20">Argxc::options</references>
        <references refid="d8/d40/structArgxc_1ad25d74e066fa21cb7db95f901f0eabe6" compoundref="d0/df9/Argx_8c" startline="21">Argxc::optionsCount</references>
        <references refid="d2/dcb/structArgxcOptions_1a1b2766df178647d8d72f9c4450e488b3" compoundref="d9/d49/types_8h" startline="27">ArgxcOptions::param</references>
        <references refid="d2/dcb/structArgxcOptions_1a4a0102388f796032fc500271d1f66dd6" compoundref="d9/d49/types_8h" startline="28">ArgxcOptions::sparam</references>
        <references refid="d2/dcb/structArgxcOptions_1a988e8b4509c28e594fb570bc6b2430c5" compoundref="d9/d49/types_8h" startline="32">ArgxcOptions::subParams</references>
        <references refid="d2/dcb/structArgxcOptions_1a1383f66c1ca2c8fe428e7005c624fc76" compoundref="d9/d49/types_8h" startline="33">ArgxcOptions::subParamsCount</references>
        <referencedby refid="d6/d8e/Argx_8h_1a0767a3dc8167a77aada7a52c4d0e9d22" compoundref="d0/df9/Argx_8c" startline="366" endline="373">argxcGetSubParam</referencedby>
        <referencedby refid="d6/d8e/Argx_8h_1a016fceae24303178985a8e047262bd5e" compoundref="d0/df9/Argx_8c" startline="209" endline="212">argxcParamExists</referencedby>
      </memberdef>
      <memberdef kind="function" id="d0/df9/Argx_8c_1af46bf41910b18e11800500efd7e929fa" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void argxcFreeError</definition>
        <argsstring>(ArgxcError *error)</argsstring>
        <name>argxcFreeError</name>
        <param>
          <type><ref refid="d8/d54/structArgxcError" kindref="compound">ArgxcError</ref> *</type>
          <declname>error</declname>
        </param>
        <briefdescription>
<para>Free resources associated with an <ref refid="d8/d54/structArgxcError" kindref="compound">ArgxcError</ref> struct. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>error</parametername>
</parameternamelist>
<parameterdescription>
<para>Pointer to the error to free. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/Argx.c" line="679" column="6" bodyfile="src/Argx.c" bodystart="679" bodyend="687"/>
        <references refid="d8/d54/structArgxcError_1a88d100236636b2eb326025d527ad26f3" compoundref="d9/d49/types_8h" startline="17">ArgxcError::error</references>
        <references refid="d8/d54/structArgxcError_1a9e83392469b228017a3b6492392f68ad" compoundref="d9/d49/types_8h" startline="18">ArgxcError::help</references>
        <references refid="d8/d54/structArgxcError_1ab4531054aa9750f66f0cae13f67365ad" compoundref="d9/d49/types_8h" startline="16">ArgxcError::type</references>
      </memberdef>
      <memberdef kind="function" id="d0/df9/Argx_8c_1ad1a1c82ca55187361d24a03c5fb977e6" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void argxcFreeOption</definition>
        <argsstring>(ArgxcOptions *option)</argsstring>
        <name>argxcFreeOption</name>
        <param>
          <type><ref refid="d2/dcb/structArgxcOptions" kindref="compound">ArgxcOptions</ref> *</type>
          <declname>option</declname>
        </param>
        <briefdescription>
<para>Free resources associated with an <ref refid="d2/dcb/structArgxcOptions" kindref="compound">ArgxcOptions</ref> struct. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>option</parametername>
</parameternamelist>
<parameterdescription>
<para>Pointer to the option to free. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/Argx.c" line="624" column="6" bodyfile="src/Argx.c" bodystart="624" bodyend="651"/>
        <references refid="d0/df9/Argx_8c_1ad1a1c82ca55187361d24a03c5fb977e6" compoundref="d0/df9/Argx_8c" startline="624" endline="651">argxcFreeOption</references>
        <references refid="d2/dcb/structArgxcOptions_1a595bdcea1b5696ffa5023c3319bf604c" compoundref="d9/d49/types_8h" startline="26">ArgxcOptions::id</references>
        <references refid="d2/dcb/structArgxcOptions_1aa912383cc480f5009cac8058454e279b" compoundref="d9/d49/types_8h" startline="29">ArgxcOptions::info</references>
        <references refid="d2/dcb/structArgxcOptions_1a1b2766df178647d8d72f9c4450e488b3" compoundref="d9/d49/types_8h" startline="27">ArgxcOptions::param</references>
        <references refid="d2/dcb/structArgxcOptions_1a4a0102388f796032fc500271d1f66dd6" compoundref="d9/d49/types_8h" startline="28">ArgxcOptions::sparam</references>
        <references refid="d2/dcb/structArgxcOptions_1a988e8b4509c28e594fb570bc6b2430c5" compoundref="d9/d49/types_8h" startline="32">ArgxcOptions::subParams</references>
        <references refid="d2/dcb/structArgxcOptions_1abe87d3c8fcdf1a843ea90652c78b5ed1" compoundref="d9/d49/types_8h" startline="34">ArgxcOptions::subParamsCapacity</references>
        <references refid="d2/dcb/structArgxcOptions_1a1383f66c1ca2c8fe428e7005c624fc76" compoundref="d9/d49/types_8h" startline="33">ArgxcOptions::subParamsCount</references>
        <referencedby refid="d6/d8e/Argx_8h_1ad1a1c82ca55187361d24a03c5fb977e6" compoundref="d0/df9/Argx_8c" startline="624" endline="651">argxcFreeOption</referencedby>
        <referencedby refid="d0/df9/Argx_8c_1acac8053f967174a1b860aad28c2b12d0" compoundref="d0/df9/Argx_8c" startline="50" endline="61">freeOptionsArray</referencedby>
      </memberdef>
      <memberdef kind="function" id="d0/df9/Argx_8c_1a6798ce84afc7922cc08260fd52534b99" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void argxcFreeParam</definition>
        <argsstring>(ArgxcParam *param)</argsstring>
        <name>argxcFreeParam</name>
        <param>
          <type><ref refid="da/ddb/structArgxcParam" kindref="compound">ArgxcParam</ref> *</type>
          <declname>param</declname>
        </param>
        <briefdescription>
<para>Free resources associated with an <ref refid="da/ddb/structArgxcParam" kindref="compound">ArgxcParam</ref> struct. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>param</parametername>
</parameternamelist>
<parameterdescription>
<para>Pointer to the parameter to free. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/Argx.c" line="653" column="6" bodyfile="src/Argx.c" bodystart="653" bodyend="659"/>
        <references refid="da/ddb/structArgxcParam_1af685e909c26495d1ee2b52acf80960d0" compoundref="d9/d49/types_8h" startline="39">ArgxcParam::subExists</references>
      </memberdef>
      <memberdef kind="function" id="d0/df9/Argx_8c_1a433f2018d5638506f50be3219c04ec71" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void argxcFreeStringArray</definition>
        <argsstring>(char **array, size_t count)</argsstring>
        <name>argxcFreeStringArray</name>
        <param>
          <type>char **</type>
          <declname>array</declname>
        </param>
        <param>
          <type>size_t</type>
          <declname>count</declname>
        </param>
        <briefdescription>
<para>Free a string array returned from <ref refid="d8/d40/structArgxc" kindref="compound">Argxc</ref> (e.g., argv array). </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>array</parametername>
</parameternamelist>
<parameterdescription>
<para>The array to free. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>count</parametername>
</parameternamelist>
<parameterdescription>
<para>Number of elements in the array. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/Argx.c" line="661" column="6" bodyfile="src/Argx.c" bodystart="661" bodyend="664"/>
        <references refid="d0/df9/Argx_8c_1a420b857128cfa7527dc66424a1ece935" compoundref="d0/df9/Argx_8c" startline="38" endline="48">freeStringArray</references>
      </memberdef>
      <memberdef kind="function" id="d0/df9/Argx_8c_1a11fea89d38b49b571ce4f4499d0289d0" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int argxcGetArgc</definition>
        <argsstring>(Argxc *argxc)</argsstring>
        <name>argxcGetArgc</name>
        <param>
          <type><ref refid="d8/d40/structArgxc" kindref="compound">Argxc</ref> *</type>
          <declname>argxc</declname>
        </param>
        <briefdescription>
<para>Get the number of command-line arguments passed. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>argxc</parametername>
</parameternamelist>
<parameterdescription>
<para>Pointer to the <ref refid="d8/d40/structArgxc" kindref="compound">Argxc</ref> instance. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>int Number of arguments. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/Argx.c" line="588" column="5" bodyfile="src/Argx.c" bodystart="588" bodyend="591"/>
        <references refid="d8/d40/structArgxc_1ae48ba4369d927bced0bc2b3eb76cc4e5" compoundref="d0/df9/Argx_8c" startline="19">Argxc::mainArgc</references>
      </memberdef>
      <memberdef kind="function" id="d0/df9/Argx_8c_1a219a52257f1e47549f9fc15979b6c563" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>const char *</type>
        <definition>const char * argxcGetId</definition>
        <argsstring>(Argxc *argxc)</argsstring>
        <name>argxcGetId</name>
        <param>
          <type><ref refid="d8/d40/structArgxc" kindref="compound">Argxc</ref> *</type>
          <declname>argxc</declname>
        </param>
        <briefdescription>
<para>Get the identifier of the <ref refid="d8/d40/structArgxc" kindref="compound">Argxc</ref> instance. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>argxc</parametername>
</parameternamelist>
<parameterdescription>
<para>Pointer to the <ref refid="d8/d40/structArgxc" kindref="compound">Argxc</ref> instance. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>const char* The ID string. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/Argx.c" line="601" column="12" bodyfile="src/Argx.c" bodystart="601" bodyend="604"/>
        <references refid="d8/d40/structArgxc_1aaa5a7528c35f7c26ff0c7283db33fe8b" compoundref="d0/df9/Argx_8c" startline="16">Argxc::id</references>
      </memberdef>
      <memberdef kind="function" id="d0/df9/Argx_8c_1a62e90d5a3e26834257bba4c68becfeb1" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>char **</type>
        <definition>char ** argxcGetMainArgs</definition>
        <argsstring>(Argxc *argxc, size_t *count)</argsstring>
        <name>argxcGetMainArgs</name>
        <param>
          <type><ref refid="d8/d40/structArgxc" kindref="compound">Argxc</ref> *</type>
          <declname>argxc</declname>
        </param>
        <param>
          <type>size_t *</type>
          <declname>count</declname>
        </param>
        <briefdescription>
<para>Get the raw command-line arguments passed to <ref refid="d8/d40/structArgxc" kindref="compound">Argxc</ref>. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>argxc</parametername>
</parameternamelist>
<parameterdescription>
<para>Pointer to the <ref refid="d8/d40/structArgxc" kindref="compound">Argxc</ref> instance. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>count</parametername>
</parameternamelist>
<parameterdescription>
<para>Output: number of arguments returned. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>char** Array of argument strings. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/Argx.c" line="570" column="6" bodyfile="src/Argx.c" bodystart="570" bodyend="586"/>
        <references refid="d8/d40/structArgxc_1a666f9d971aaf4b9adfb18908a1205fda" compoundref="d0/df9/Argx_8c" startline="17">Argxc::mainArgs</references>
        <references refid="d8/d40/structArgxc_1a06a20f9bbf66ce13fb9ac6745a84de9e" compoundref="d0/df9/Argx_8c" startline="18">Argxc::mainArgsCount</references>
        <references refid="d0/df9/Argx_8c_1a814b3298d81b070e52a987654d18d8a2" compoundref="d0/df9/Argx_8c" startline="26" endline="36">stringDuplicate</references>
      </memberdef>
      <memberdef kind="function" id="d0/df9/Argx_8c_1afb1cebd21f607dfbe19ed784ea0fc319" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="d2/dcb/structArgxcOptions" kindref="compound">ArgxcOptions</ref> *</type>
        <definition>ArgxcOptions * argxcGetOptions</definition>
        <argsstring>(Argxc *argxc, size_t *count)</argsstring>
        <name>argxcGetOptions</name>
        <param>
          <type><ref refid="d8/d40/structArgxc" kindref="compound">Argxc</ref> *</type>
          <declname>argxc</declname>
        </param>
        <param>
          <type>size_t *</type>
          <declname>count</declname>
        </param>
        <briefdescription>
<para>Get all top-level options defined for the <ref refid="d8/d40/structArgxc" kindref="compound">Argxc</ref> instance. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>argxc</parametername>
</parameternamelist>
<parameterdescription>
<para>Pointer to the <ref refid="d8/d40/structArgxc" kindref="compound">Argxc</ref> instance. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>count</parametername>
</parameternamelist>
<parameterdescription>
<para>Output: number of options returned. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>ArgxcOptions* Array of options. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/Argx.c" line="593" column="14" bodyfile="src/Argx.c" bodystart="593" bodyend="599"/>
        <references refid="d8/d40/structArgxc_1af24c08ed9dab8ad9800393568097a848" compoundref="d0/df9/Argx_8c" startline="20">Argxc::options</references>
        <references refid="d8/d40/structArgxc_1ad25d74e066fa21cb7db95f901f0eabe6" compoundref="d0/df9/Argx_8c" startline="21">Argxc::optionsCount</references>
      </memberdef>
      <memberdef kind="function" id="d0/df9/Argx_8c_1a6ef72f8e604109911e4315f6840febf9" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="da/ddb/structArgxcParam" kindref="compound">ArgxcParam</ref></type>
        <definition>ArgxcParam argxcGetParam</definition>
        <argsstring>(Argxc *argxc, const char *id)</argsstring>
        <name>argxcGetParam</name>
        <param>
          <type><ref refid="d8/d40/structArgxc" kindref="compound">Argxc</ref> *</type>
          <declname>argxc</declname>
        </param>
        <param>
          <type>const char *</type>
          <declname>id</declname>
        </param>
        <briefdescription>
<para>Retrieve a parameter by ID. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>argxc</parametername>
</parameternamelist>
<parameterdescription>
<para>Pointer to the <ref refid="d8/d40/structArgxc" kindref="compound">Argxc</ref> instance. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>id</parametername>
</parameternamelist>
<parameterdescription>
<para>The identifier of the parameter to retrieve. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para><ref refid="da/ddb/structArgxcParam" kindref="compound">ArgxcParam</ref> The parameter object. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/Argx.c" line="214" column="12" bodyfile="src/Argx.c" bodystart="214" bodyend="364"/>
        <references refid="da/ddb/structArgxcParam_1abc303d4cb26b086e53978a46071b9735" compoundref="d9/d49/types_8h" startline="38">ArgxcParam::exists</references>
        <references refid="d2/dcb/structArgxcOptions_1ad36df6627ddcae7c469d92794d5a5ddc" compoundref="d9/d49/types_8h" startline="31">ArgxcOptions::hasAnySubParams</references>
        <references refid="d2/dcb/structArgxcOptions_1add27505ea653aa67161a226f9daff3ca" compoundref="d9/d49/types_8h" startline="30">ArgxcOptions::hasSubParams</references>
        <references refid="d2/dcb/structArgxcOptions_1a595bdcea1b5696ffa5023c3319bf604c" compoundref="d9/d49/types_8h" startline="26">ArgxcOptions::id</references>
        <references refid="d8/d40/structArgxc_1ae48ba4369d927bced0bc2b3eb76cc4e5" compoundref="d0/df9/Argx_8c" startline="19">Argxc::mainArgc</references>
        <references refid="d8/d40/structArgxc_1a666f9d971aaf4b9adfb18908a1205fda" compoundref="d0/df9/Argx_8c" startline="17">Argxc::mainArgs</references>
        <references refid="d8/d40/structArgxc_1a06a20f9bbf66ce13fb9ac6745a84de9e" compoundref="d0/df9/Argx_8c" startline="18">Argxc::mainArgsCount</references>
        <references refid="d8/d40/structArgxc_1af24c08ed9dab8ad9800393568097a848" compoundref="d0/df9/Argx_8c" startline="20">Argxc::options</references>
        <references refid="d8/d40/structArgxc_1ad25d74e066fa21cb7db95f901f0eabe6" compoundref="d0/df9/Argx_8c" startline="21">Argxc::optionsCount</references>
        <references refid="d2/dcb/structArgxcOptions_1a1b2766df178647d8d72f9c4450e488b3" compoundref="d9/d49/types_8h" startline="27">ArgxcOptions::param</references>
        <references refid="d2/dcb/structArgxcOptions_1a4a0102388f796032fc500271d1f66dd6" compoundref="d9/d49/types_8h" startline="28">ArgxcOptions::sparam</references>
        <references refid="da/ddb/structArgxcParam_1af685e909c26495d1ee2b52acf80960d0" compoundref="d9/d49/types_8h" startline="39">ArgxcParam::subExists</references>
        <references refid="da/ddb/structArgxcParam_1a6340456c0025fef27395bc30f3251986" compoundref="d9/d49/types_8h" startline="40">ArgxcParam::subExistsCount</references>
        <references refid="d2/dcb/structArgxcOptions_1a988e8b4509c28e594fb570bc6b2430c5" compoundref="d9/d49/types_8h" startline="32">ArgxcOptions::subParams</references>
        <references refid="d2/dcb/structArgxcOptions_1a1383f66c1ca2c8fe428e7005c624fc76" compoundref="d9/d49/types_8h" startline="33">ArgxcOptions::subParamsCount</references>
      </memberdef>
      <memberdef kind="function" id="d0/df9/Argx_8c_1a0767a3dc8167a77aada7a52c4d0e9d22" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool argxcGetSubParam</definition>
        <argsstring>(Argxc *argxc, const ArgxcParam *param, const char *id)</argsstring>
        <name>argxcGetSubParam</name>
        <param>
          <type><ref refid="d8/d40/structArgxc" kindref="compound">Argxc</ref> *</type>
          <declname>argxc</declname>
        </param>
        <param>
          <type>const <ref refid="da/ddb/structArgxcParam" kindref="compound">ArgxcParam</ref> *</type>
          <declname>param</declname>
        </param>
        <param>
          <type>const char *</type>
          <declname>id</declname>
        </param>
        <briefdescription>
<para>Retrieve a sub-parameter from a given parameter by ID. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>argxc</parametername>
</parameternamelist>
<parameterdescription>
<para>Pointer to the <ref refid="d8/d40/structArgxc" kindref="compound">Argxc</ref> instance. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>param</parametername>
</parameternamelist>
<parameterdescription>
<para>Pointer to the parent parameter. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>id</parametername>
</parameternamelist>
<parameterdescription>
<para>The identifier of the sub-parameter. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>true if the sub-parameter exists, false otherwise. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/Argx.c" line="366" column="6" bodyfile="src/Argx.c" bodystart="366" bodyend="373"/>
        <references refid="d0/df9/Argx_8c_1a4a12dce73edcc011355f47d4543e32a6" compoundref="d0/df9/Argx_8c" startline="155" endline="207">argxcFindParam</references>
        <references refid="d0/df9/Argx_8c_1a016fceae24303178985a8e047262bd5e" compoundref="d0/df9/Argx_8c" startline="209" endline="212">argxcParamExists</references>
        <references refid="da/ddb/structArgxcParam_1af685e909c26495d1ee2b52acf80960d0" compoundref="d9/d49/types_8h" startline="39">ArgxcParam::subExists</references>
      </memberdef>
      <memberdef kind="function" id="d0/df9/Argx_8c_1a016fceae24303178985a8e047262bd5e" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool argxcParamExists</definition>
        <argsstring>(Argxc *argxc, const char *id)</argsstring>
        <name>argxcParamExists</name>
        <param>
          <type><ref refid="d8/d40/structArgxc" kindref="compound">Argxc</ref> *</type>
          <declname>argxc</declname>
        </param>
        <param>
          <type>const char *</type>
          <declname>id</declname>
        </param>
        <briefdescription>
<para>Check if a parameter with the given ID exists. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>argxc</parametername>
</parameternamelist>
<parameterdescription>
<para>Pointer to the <ref refid="d8/d40/structArgxc" kindref="compound">Argxc</ref> instance. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>id</parametername>
</parameternamelist>
<parameterdescription>
<para>The identifier of the parameter. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>true if the parameter exists, false otherwise. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/Argx.c" line="209" column="6" bodyfile="src/Argx.c" bodystart="209" bodyend="212"/>
        <references refid="d0/df9/Argx_8c_1a4a12dce73edcc011355f47d4543e32a6" compoundref="d0/df9/Argx_8c" startline="155" endline="207">argxcFindParam</references>
        <referencedby refid="d6/d8e/Argx_8h_1a0767a3dc8167a77aada7a52c4d0e9d22" compoundref="d0/df9/Argx_8c" startline="366" endline="373">argxcGetSubParam</referencedby>
      </memberdef>
      <memberdef kind="function" id="d0/df9/Argx_8c_1acac8053f967174a1b860aad28c2b12d0" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>static void freeOptionsArray</definition>
        <argsstring>(ArgxcOptions *options, size_t count)</argsstring>
        <name>freeOptionsArray</name>
        <param>
          <type><ref refid="d2/dcb/structArgxcOptions" kindref="compound">ArgxcOptions</ref> *</type>
          <declname>options</declname>
        </param>
        <param>
          <type>size_t</type>
          <declname>count</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/Argx.c" line="50" column="13" bodyfile="src/Argx.c" bodystart="50" bodyend="61"/>
        <references refid="d0/df9/Argx_8c_1ad1a1c82ca55187361d24a03c5fb977e6" compoundref="d0/df9/Argx_8c" startline="624" endline="651">argxcFreeOption</references>
        <referencedby refid="d6/d8e/Argx_8h_1a944b6c8a9498789cd0a51fdfe9a8c486" compoundref="d0/df9/Argx_8c" startline="113" endline="121">argxcDestroy</referencedby>
      </memberdef>
      <memberdef kind="function" id="d0/df9/Argx_8c_1a420b857128cfa7527dc66424a1ece935" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>static void freeStringArray</definition>
        <argsstring>(char **array, size_t count)</argsstring>
        <name>freeStringArray</name>
        <param>
          <type>char **</type>
          <declname>array</declname>
        </param>
        <param>
          <type>size_t</type>
          <declname>count</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/Argx.c" line="38" column="13" bodyfile="src/Argx.c" bodystart="38" bodyend="48"/>
        <referencedby refid="d6/d8e/Argx_8h_1a944b6c8a9498789cd0a51fdfe9a8c486" compoundref="d0/df9/Argx_8c" startline="113" endline="121">argxcDestroy</referencedby>
        <referencedby refid="d6/d8e/Argx_8h_1a433f2018d5638506f50be3219c04ec71" compoundref="d0/df9/Argx_8c" startline="661" endline="664">argxcFreeStringArray</referencedby>
      </memberdef>
      <memberdef kind="function" id="d0/df9/Argx_8c_1a814b3298d81b070e52a987654d18d8a2" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>char *</type>
        <definition>static char * stringDuplicate</definition>
        <argsstring>(const char *str)</argsstring>
        <name>stringDuplicate</name>
        <param>
          <type>const char *</type>
          <declname>str</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/Argx.c" line="26" column="13" bodyfile="src/Argx.c" bodystart="26" bodyend="36"/>
        <referencedby refid="d6/d8e/Argx_8h_1a05e89b0c2c00b96db95fa612a3a19809" compoundref="d0/df9/Argx_8c" startline="64" endline="89">argxcCreate</referencedby>
        <referencedby refid="d6/d8e/Argx_8h_1aff55e2b9a01cc2b4d3bdd44264eef8bd" compoundref="d0/df9/Argx_8c" startline="667" endline="677">argxcCreateError</referencedby>
        <referencedby refid="d6/d8e/Argx_8h_1a5efc30ffddcc4d6ba7c2db7b8ab680ec" compoundref="d0/df9/Argx_8c" startline="607" endline="622">argxcCreateOption</referencedby>
        <referencedby refid="d6/d8e/Argx_8h_1a62e90d5a3e26834257bba4c68becfeb1" compoundref="d0/df9/Argx_8c" startline="570" endline="586">argxcGetMainArgs</referencedby>
      </memberdef>
    </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <programlisting>
<codeline lineno="1"><highlight class="comment">/*<sp/>src/argxc.c</highlight></codeline>
<codeline lineno="2"><highlight class="comment"><sp/>*<sp/>Owned<sp/>and<sp/>created<sp/>by:<sp/>pcannon09</highlight></codeline>
<codeline lineno="3"><highlight class="comment"><sp/>*<sp/>Converted<sp/>to<sp/>C<sp/>API</highlight></codeline>
<codeline lineno="4"><highlight class="comment"><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="5"><highlight class="normal"></highlight></codeline>
<codeline lineno="6"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;stdlib.h&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="7"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;string.h&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="8"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;stdio.h&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="9"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;stdbool.h&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="10"><highlight class="normal"></highlight></codeline>
<codeline lineno="11"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="d6/d8e/Argx_8h" kindref="compound">../inc/Argx.h</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="12"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="d9/d49/types_8h" kindref="compound">../inc/types.h</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="13"><highlight class="normal"></highlight></codeline>
<codeline lineno="14"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Internal<sp/>structure<sp/>definition</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="15" refid="d8/d40/structArgxc" refkind="compound"><highlight class="normal"></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="d8/d40/structArgxc" kindref="compound">Argxc</ref><sp/>{</highlight></codeline>
<codeline lineno="16" refid="d8/d40/structArgxc_1aaa5a7528c35f7c26ff0c7283db33fe8b" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*<ref refid="d8/d40/structArgxc_1aaa5a7528c35f7c26ff0c7283db33fe8b" kindref="member">id</ref>;</highlight></codeline>
<codeline lineno="17" refid="d8/d40/structArgxc_1a666f9d971aaf4b9adfb18908a1205fda" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>**<ref refid="d8/d40/structArgxc_1a666f9d971aaf4b9adfb18908a1205fda" kindref="member">mainArgs</ref>;</highlight></codeline>
<codeline lineno="18" refid="d8/d40/structArgxc_1a06a20f9bbf66ce13fb9ac6745a84de9e" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/><ref refid="d8/d40/structArgxc_1a06a20f9bbf66ce13fb9ac6745a84de9e" kindref="member">mainArgsCount</ref>;</highlight></codeline>
<codeline lineno="19" refid="d8/d40/structArgxc_1ae48ba4369d927bced0bc2b3eb76cc4e5" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="d8/d40/structArgxc_1ae48ba4369d927bced0bc2b3eb76cc4e5" kindref="member">mainArgc</ref>;</highlight></codeline>
<codeline lineno="20" refid="d8/d40/structArgxc_1af24c08ed9dab8ad9800393568097a848" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="d2/dcb/structArgxcOptions" kindref="compound">ArgxcOptions</ref><sp/>*<ref refid="d8/d40/structArgxc_1af24c08ed9dab8ad9800393568097a848" kindref="member">options</ref>;</highlight></codeline>
<codeline lineno="21" refid="d8/d40/structArgxc_1ad25d74e066fa21cb7db95f901f0eabe6" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/><ref refid="d8/d40/structArgxc_1ad25d74e066fa21cb7db95f901f0eabe6" kindref="member">optionsCount</ref>;</highlight></codeline>
<codeline lineno="22" refid="d8/d40/structArgxc_1a73fbef3389172b12448589e62c5aff34" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/><ref refid="d8/d40/structArgxc_1a73fbef3389172b12448589e62c5aff34" kindref="member">optionsCapacity</ref>;</highlight></codeline>
<codeline lineno="23"><highlight class="normal">};</highlight></codeline>
<codeline lineno="24"><highlight class="normal"></highlight></codeline>
<codeline lineno="25"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Static<sp/>helper<sp/>functions</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="26" refid="d0/df9/Argx_8c_1a814b3298d81b070e52a987654d18d8a2" refkind="member"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*<ref refid="d0/df9/Argx_8c_1a814b3298d81b070e52a987654d18d8a2" kindref="member">stringDuplicate</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*str)</highlight></codeline>
<codeline lineno="27"><highlight class="normal">{</highlight></codeline>
<codeline lineno="28"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!str)<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>NULL;</highlight></codeline>
<codeline lineno="29"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>len<sp/>=<sp/>strlen(str)<sp/>+<sp/>1;</highlight></codeline>
<codeline lineno="30"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*dup<sp/>=<sp/>malloc(len);</highlight></codeline>
<codeline lineno="31"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(dup)</highlight></codeline>
<codeline lineno="32"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="33"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>memcpy(dup,<sp/>str,<sp/>len);</highlight></codeline>
<codeline lineno="34"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="35"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>dup;</highlight></codeline>
<codeline lineno="36"><highlight class="normal">}</highlight></codeline>
<codeline lineno="37"><highlight class="normal"></highlight></codeline>
<codeline lineno="38" refid="d0/df9/Argx_8c_1a420b857128cfa7527dc66424a1ece935" refkind="member"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="d0/df9/Argx_8c_1a420b857128cfa7527dc66424a1ece935" kindref="member">freeStringArray</ref>(</highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>**array,<sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>count)</highlight></codeline>
<codeline lineno="39"><highlight class="normal">{</highlight></codeline>
<codeline lineno="40"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!array)<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="41"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>i<sp/>=<sp/>0;<sp/>i<sp/>&lt;<sp/>count;<sp/>i++)</highlight></codeline>
<codeline lineno="42"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="43"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(array[i])<sp/>free(array[i]);</highlight></codeline>
<codeline lineno="44"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="45"><highlight class="normal"></highlight></codeline>
<codeline lineno="46"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(array)</highlight></codeline>
<codeline lineno="47"><highlight class="normal"><sp/><sp/><sp/><sp/>{<sp/>free(array);<sp/>array<sp/>=<sp/>NULL;<sp/>}</highlight></codeline>
<codeline lineno="48"><highlight class="normal">}</highlight></codeline>
<codeline lineno="49"><highlight class="normal"></highlight></codeline>
<codeline lineno="50" refid="d0/df9/Argx_8c_1acac8053f967174a1b860aad28c2b12d0" refkind="member"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="d0/df9/Argx_8c_1acac8053f967174a1b860aad28c2b12d0" kindref="member">freeOptionsArray</ref>(<ref refid="d2/dcb/structArgxcOptions" kindref="compound">ArgxcOptions</ref><sp/>*options,<sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>count)</highlight></codeline>
<codeline lineno="51"><highlight class="normal">{</highlight></codeline>
<codeline lineno="52"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!options)<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="53"><highlight class="normal"></highlight></codeline>
<codeline lineno="54"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>i<sp/>=<sp/>0;<sp/>i<sp/>&lt;<sp/>count;<sp/>i++)</highlight></codeline>
<codeline lineno="55"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="56"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(&amp;options[i])<sp/><ref refid="d0/df9/Argx_8c_1ad1a1c82ca55187361d24a03c5fb977e6" kindref="member">argxcFreeOption</ref>(&amp;options[i]);</highlight></codeline>
<codeline lineno="57"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="58"><highlight class="normal"></highlight></codeline>
<codeline lineno="59"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(options)</highlight></codeline>
<codeline lineno="60"><highlight class="normal"><sp/><sp/><sp/><sp/>{<sp/>free(options);<sp/>options<sp/>=<sp/>NULL;<sp/>}</highlight></codeline>
<codeline lineno="61"><highlight class="normal">}</highlight></codeline>
<codeline lineno="62"><highlight class="normal"></highlight></codeline>
<codeline lineno="63"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Constructor/Destructor<sp/>implementations</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="64" refid="d6/d8e/Argx_8h_1a05e89b0c2c00b96db95fa612a3a19809" refkind="member"><highlight class="normal"><ref refid="d8/d40/structArgxc" kindref="compound">Argxc</ref><sp/>*<ref refid="d0/df9/Argx_8c_1a05e89b0c2c00b96db95fa612a3a19809" kindref="member">argxcCreate</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*</highlight><highlight class="keywordtype">id</highlight><highlight class="normal">,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>argc,<sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*argv[])</highlight></codeline>
<codeline lineno="65"><highlight class="normal">{</highlight></codeline>
<codeline lineno="66"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="d8/d40/structArgxc" kindref="compound">Argxc</ref><sp/>*argxc<sp/>=<sp/>malloc(</highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(<ref refid="d8/d40/structArgxc" kindref="compound">Argxc</ref>));</highlight></codeline>
<codeline lineno="67"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!argxc)<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>NULL;</highlight></codeline>
<codeline lineno="68"><highlight class="normal"></highlight></codeline>
<codeline lineno="69"><highlight class="normal"><sp/><sp/><sp/><sp/>argxc-&gt;<ref refid="d8/d40/structArgxc_1aaa5a7528c35f7c26ff0c7283db33fe8b" kindref="member">id</ref><sp/>=<sp/><ref refid="d0/df9/Argx_8c_1a814b3298d81b070e52a987654d18d8a2" kindref="member">stringDuplicate</ref>(</highlight><highlight class="keywordtype">id</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="70"><highlight class="normal"><sp/><sp/><sp/><sp/>argxc-&gt;<ref refid="d8/d40/structArgxc_1ae48ba4369d927bced0bc2b3eb76cc4e5" kindref="member">mainArgc</ref><sp/>=<sp/>argc;</highlight></codeline>
<codeline lineno="71"><highlight class="normal"><sp/><sp/><sp/><sp/>argxc-&gt;<ref refid="d8/d40/structArgxc_1a06a20f9bbf66ce13fb9ac6745a84de9e" kindref="member">mainArgsCount</ref><sp/>=<sp/>argc;</highlight></codeline>
<codeline lineno="72"><highlight class="normal"><sp/><sp/><sp/><sp/>argxc-&gt;<ref refid="d8/d40/structArgxc_1a666f9d971aaf4b9adfb18908a1205fda" kindref="member">mainArgs</ref><sp/>=<sp/>malloc(argc<sp/>*<sp/></highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(</highlight><highlight class="keywordtype">char</highlight><highlight class="normal">*));</highlight></codeline>
<codeline lineno="73"><highlight class="normal"><sp/><sp/><sp/><sp/>argxc-&gt;<ref refid="d8/d40/structArgxc_1ad25d74e066fa21cb7db95f901f0eabe6" kindref="member">optionsCount</ref><sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="74"><highlight class="normal"><sp/><sp/><sp/><sp/>argxc-&gt;<ref refid="d8/d40/structArgxc_1a73fbef3389172b12448589e62c5aff34" kindref="member">optionsCapacity</ref><sp/>=<sp/>10;</highlight></codeline>
<codeline lineno="75"><highlight class="normal"><sp/><sp/><sp/><sp/>argxc-&gt;<ref refid="d8/d40/structArgxc_1af24c08ed9dab8ad9800393568097a848" kindref="member">options</ref><sp/>=<sp/>malloc(argxc-&gt;<ref refid="d8/d40/structArgxc_1a73fbef3389172b12448589e62c5aff34" kindref="member">optionsCapacity</ref><sp/>*<sp/></highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(<ref refid="d2/dcb/structArgxcOptions" kindref="compound">ArgxcOptions</ref>));</highlight></codeline>
<codeline lineno="76"><highlight class="normal"></highlight></codeline>
<codeline lineno="77"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!argxc-&gt;<ref refid="d8/d40/structArgxc_1a666f9d971aaf4b9adfb18908a1205fda" kindref="member">mainArgs</ref><sp/>||<sp/>!argxc-&gt;<ref refid="d8/d40/structArgxc_1af24c08ed9dab8ad9800393568097a848" kindref="member">options</ref>)</highlight></codeline>
<codeline lineno="78"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="79"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="d0/df9/Argx_8c_1a944b6c8a9498789cd0a51fdfe9a8c486" kindref="member">argxcDestroy</ref>(argxc);</highlight></codeline>
<codeline lineno="80"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>NULL;</highlight></codeline>
<codeline lineno="81"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="82"><highlight class="normal"></highlight></codeline>
<codeline lineno="83"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>i<sp/>=<sp/>0;<sp/>i<sp/>&lt;<sp/>argc;<sp/>i++)</highlight></codeline>
<codeline lineno="84"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="85"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>argxc-&gt;<ref refid="d8/d40/structArgxc_1a666f9d971aaf4b9adfb18908a1205fda" kindref="member">mainArgs</ref>[i]<sp/>=<sp/><ref refid="d0/df9/Argx_8c_1a814b3298d81b070e52a987654d18d8a2" kindref="member">stringDuplicate</ref>(argv[i]);</highlight></codeline>
<codeline lineno="86"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="87"><highlight class="normal"></highlight></codeline>
<codeline lineno="88"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>argxc;</highlight></codeline>
<codeline lineno="89"><highlight class="normal">}</highlight></codeline>
<codeline lineno="90"><highlight class="normal"></highlight></codeline>
<codeline lineno="91" refid="d6/d8e/Argx_8h_1a7490f1245ca836e793645d70dcabe7f6" refkind="member"><highlight class="normal"><ref refid="d8/d40/structArgxc" kindref="compound">Argxc</ref><sp/>*<ref refid="d0/df9/Argx_8c_1a7490f1245ca836e793645d70dcabe7f6" kindref="member">argxcCreateDefault</ref>(</highlight><highlight class="keywordtype">void</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="92"><highlight class="normal">{</highlight></codeline>
<codeline lineno="93"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="d8/d40/structArgxc" kindref="compound">Argxc</ref><sp/>*argxc<sp/>=<sp/>malloc(</highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(<ref refid="d8/d40/structArgxc" kindref="compound">Argxc</ref>));</highlight></codeline>
<codeline lineno="94"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!argxc)<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>NULL;</highlight></codeline>
<codeline lineno="95"><highlight class="normal"></highlight></codeline>
<codeline lineno="96"><highlight class="normal"><sp/><sp/><sp/><sp/>argxc-&gt;<ref refid="d8/d40/structArgxc_1aaa5a7528c35f7c26ff0c7283db33fe8b" kindref="member">id</ref><sp/>=<sp/>NULL;</highlight></codeline>
<codeline lineno="97"><highlight class="normal"><sp/><sp/><sp/><sp/>argxc-&gt;<ref refid="d8/d40/structArgxc_1a666f9d971aaf4b9adfb18908a1205fda" kindref="member">mainArgs</ref><sp/>=<sp/>NULL;</highlight></codeline>
<codeline lineno="98"><highlight class="normal"><sp/><sp/><sp/><sp/>argxc-&gt;<ref refid="d8/d40/structArgxc_1a06a20f9bbf66ce13fb9ac6745a84de9e" kindref="member">mainArgsCount</ref><sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="99"><highlight class="normal"><sp/><sp/><sp/><sp/>argxc-&gt;<ref refid="d8/d40/structArgxc_1ae48ba4369d927bced0bc2b3eb76cc4e5" kindref="member">mainArgc</ref><sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="100"><highlight class="normal"><sp/><sp/><sp/><sp/>argxc-&gt;<ref refid="d8/d40/structArgxc_1ad25d74e066fa21cb7db95f901f0eabe6" kindref="member">optionsCount</ref><sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="101"><highlight class="normal"><sp/><sp/><sp/><sp/>argxc-&gt;<ref refid="d8/d40/structArgxc_1a73fbef3389172b12448589e62c5aff34" kindref="member">optionsCapacity</ref><sp/>=<sp/>10;</highlight></codeline>
<codeline lineno="102"><highlight class="normal"><sp/><sp/><sp/><sp/>argxc-&gt;<ref refid="d8/d40/structArgxc_1af24c08ed9dab8ad9800393568097a848" kindref="member">options</ref><sp/>=<sp/>malloc(argxc-&gt;<ref refid="d8/d40/structArgxc_1a73fbef3389172b12448589e62c5aff34" kindref="member">optionsCapacity</ref><sp/>*<sp/></highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(<ref refid="d2/dcb/structArgxcOptions" kindref="compound">ArgxcOptions</ref>));</highlight></codeline>
<codeline lineno="103"><highlight class="normal"></highlight></codeline>
<codeline lineno="104"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!argxc-&gt;<ref refid="d8/d40/structArgxc_1af24c08ed9dab8ad9800393568097a848" kindref="member">options</ref>)</highlight></codeline>
<codeline lineno="105"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="106"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>free(argxc);<sp/>argxc<sp/>=<sp/>NULL;</highlight></codeline>
<codeline lineno="107"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>NULL;</highlight></codeline>
<codeline lineno="108"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="109"><highlight class="normal"></highlight></codeline>
<codeline lineno="110"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>argxc;</highlight></codeline>
<codeline lineno="111"><highlight class="normal">}</highlight></codeline>
<codeline lineno="112"><highlight class="normal"></highlight></codeline>
<codeline lineno="113" refid="d6/d8e/Argx_8h_1a944b6c8a9498789cd0a51fdfe9a8c486" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="d0/df9/Argx_8c_1a944b6c8a9498789cd0a51fdfe9a8c486" kindref="member">argxcDestroy</ref>(<ref refid="d8/d40/structArgxc" kindref="compound">Argxc</ref><sp/>*argxc)</highlight></codeline>
<codeline lineno="114"><highlight class="normal">{</highlight></codeline>
<codeline lineno="115"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!argxc)<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="116"><highlight class="normal"></highlight></codeline>
<codeline lineno="117"><highlight class="normal"><sp/><sp/><sp/><sp/>free(argxc-&gt;<ref refid="d8/d40/structArgxc_1aaa5a7528c35f7c26ff0c7283db33fe8b" kindref="member">id</ref>);<sp/>argxc-&gt;<ref refid="d8/d40/structArgxc_1aaa5a7528c35f7c26ff0c7283db33fe8b" kindref="member">id</ref><sp/>=<sp/>NULL;</highlight></codeline>
<codeline lineno="118"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(argxc-&gt;<ref refid="d8/d40/structArgxc_1a666f9d971aaf4b9adfb18908a1205fda" kindref="member">mainArgs</ref>)<sp/><ref refid="d0/df9/Argx_8c_1a420b857128cfa7527dc66424a1ece935" kindref="member">freeStringArray</ref>(argxc-&gt;<ref refid="d8/d40/structArgxc_1a666f9d971aaf4b9adfb18908a1205fda" kindref="member">mainArgs</ref>,<sp/>argxc-&gt;<ref refid="d8/d40/structArgxc_1a06a20f9bbf66ce13fb9ac6745a84de9e" kindref="member">mainArgsCount</ref>);</highlight></codeline>
<codeline lineno="119"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(argxc-&gt;<ref refid="d8/d40/structArgxc_1af24c08ed9dab8ad9800393568097a848" kindref="member">options</ref>)<sp/><ref refid="d0/df9/Argx_8c_1acac8053f967174a1b860aad28c2b12d0" kindref="member">freeOptionsArray</ref>(argxc-&gt;<ref refid="d8/d40/structArgxc_1af24c08ed9dab8ad9800393568097a848" kindref="member">options</ref>,<sp/>argxc-&gt;<ref refid="d8/d40/structArgxc_1ad25d74e066fa21cb7db95f901f0eabe6" kindref="member">optionsCount</ref>);</highlight></codeline>
<codeline lineno="120"><highlight class="normal"><sp/><sp/><sp/><sp/>free(argxc);<sp/>argxc<sp/>=<sp/>NULL;</highlight></codeline>
<codeline lineno="121"><highlight class="normal">}</highlight></codeline>
<codeline lineno="122"><highlight class="normal"></highlight></codeline>
<codeline lineno="123"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Core<sp/>functionality<sp/>implementations</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="124" refid="d6/d8e/Argx_8h_1a4b2d2f49ede5c7008816f5c2039d4c2c" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="d0/df9/Argx_8c_1a4b2d2f49ede5c7008816f5c2039d4c2c" kindref="member">argxcAddOption</ref>(<ref refid="d8/d40/structArgxc" kindref="compound">Argxc</ref><sp/>*argxc,<sp/><ref refid="d2/dcb/structArgxcOptions" kindref="compound">ArgxcOptions</ref><sp/>option)</highlight></codeline>
<codeline lineno="125"><highlight class="normal">{</highlight></codeline>
<codeline lineno="126"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!argxc)<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="127"><highlight class="normal"></highlight></codeline>
<codeline lineno="128"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(argxc-&gt;<ref refid="d8/d40/structArgxc_1ad25d74e066fa21cb7db95f901f0eabe6" kindref="member">optionsCount</ref><sp/>&gt;=<sp/>argxc-&gt;<ref refid="d8/d40/structArgxc_1a73fbef3389172b12448589e62c5aff34" kindref="member">optionsCapacity</ref>)</highlight></codeline>
<codeline lineno="129"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="130"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>argxc-&gt;<ref refid="d8/d40/structArgxc_1a73fbef3389172b12448589e62c5aff34" kindref="member">optionsCapacity</ref><sp/>*=<sp/>2;</highlight></codeline>
<codeline lineno="131"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>argxc-&gt;<ref refid="d8/d40/structArgxc_1af24c08ed9dab8ad9800393568097a848" kindref="member">options</ref><sp/>=<sp/>realloc(argxc-&gt;<ref refid="d8/d40/structArgxc_1af24c08ed9dab8ad9800393568097a848" kindref="member">options</ref>,<sp/>argxc-&gt;<ref refid="d8/d40/structArgxc_1a73fbef3389172b12448589e62c5aff34" kindref="member">optionsCapacity</ref><sp/>*<sp/></highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(<ref refid="d2/dcb/structArgxcOptions" kindref="compound">ArgxcOptions</ref>));</highlight></codeline>
<codeline lineno="132"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!argxc-&gt;<ref refid="d8/d40/structArgxc_1af24c08ed9dab8ad9800393568097a848" kindref="member">options</ref>)<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="133"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="134"><highlight class="normal"></highlight></codeline>
<codeline lineno="135"><highlight class="normal"><sp/><sp/><sp/><sp/>argxc-&gt;<ref refid="d8/d40/structArgxc_1af24c08ed9dab8ad9800393568097a848" kindref="member">options</ref>[argxc-&gt;<ref refid="d8/d40/structArgxc_1ad25d74e066fa21cb7db95f901f0eabe6" kindref="member">optionsCount</ref>++]<sp/>=<sp/>option;</highlight></codeline>
<codeline lineno="136"><highlight class="normal">}</highlight></codeline>
<codeline lineno="137"><highlight class="normal"></highlight></codeline>
<codeline lineno="138" refid="d6/d8e/Argx_8h_1a68874cb095408ec91cf02d7ab0df0fa8" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="d0/df9/Argx_8c_1a68874cb095408ec91cf02d7ab0df0fa8" kindref="member">argxcAddSubOption</ref>(<ref refid="d2/dcb/structArgxcOptions" kindref="compound">ArgxcOptions</ref><sp/>*parent,<sp/><ref refid="d2/dcb/structArgxcOptions" kindref="compound">ArgxcOptions</ref><sp/>subOption)</highlight></codeline>
<codeline lineno="139"><highlight class="normal">{</highlight></codeline>
<codeline lineno="140"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!parent)<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="141"><highlight class="normal"></highlight></codeline>
<codeline lineno="142"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(parent-&gt;<ref refid="d2/dcb/structArgxcOptions_1a1383f66c1ca2c8fe428e7005c624fc76" kindref="member">subParamsCount</ref><sp/>&gt;=<sp/>parent-&gt;<ref refid="d2/dcb/structArgxcOptions_1abe87d3c8fcdf1a843ea90652c78b5ed1" kindref="member">subParamsCapacity</ref>)</highlight></codeline>
<codeline lineno="143"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="144"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>newCapacity<sp/>=<sp/>parent-&gt;<ref refid="d2/dcb/structArgxcOptions_1abe87d3c8fcdf1a843ea90652c78b5ed1" kindref="member">subParamsCapacity</ref><sp/>==<sp/>0<sp/>?<sp/>2<sp/>:<sp/>parent-&gt;<ref refid="d2/dcb/structArgxcOptions_1abe87d3c8fcdf1a843ea90652c78b5ed1" kindref="member">subParamsCapacity</ref><sp/>*<sp/>2;</highlight></codeline>
<codeline lineno="145"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="d2/dcb/structArgxcOptions" kindref="compound">ArgxcOptions</ref><sp/>*newSubParams<sp/>=<sp/>realloc(parent-&gt;<ref refid="d2/dcb/structArgxcOptions_1a988e8b4509c28e594fb570bc6b2430c5" kindref="member">subParams</ref>,<sp/>newCapacity<sp/>*<sp/></highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(<ref refid="d2/dcb/structArgxcOptions" kindref="compound">ArgxcOptions</ref>));</highlight></codeline>
<codeline lineno="146"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!newSubParams)<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="147"><highlight class="normal"></highlight></codeline>
<codeline lineno="148"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>parent-&gt;<ref refid="d2/dcb/structArgxcOptions_1a988e8b4509c28e594fb570bc6b2430c5" kindref="member">subParams</ref><sp/>=<sp/>newSubParams;</highlight></codeline>
<codeline lineno="149"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>parent-&gt;<ref refid="d2/dcb/structArgxcOptions_1abe87d3c8fcdf1a843ea90652c78b5ed1" kindref="member">subParamsCapacity</ref><sp/>=<sp/>newCapacity;</highlight></codeline>
<codeline lineno="150"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="151"><highlight class="normal"></highlight></codeline>
<codeline lineno="152"><highlight class="normal"><sp/><sp/><sp/><sp/>parent-&gt;<ref refid="d2/dcb/structArgxcOptions_1a988e8b4509c28e594fb570bc6b2430c5" kindref="member">subParams</ref>[parent-&gt;<ref refid="d2/dcb/structArgxcOptions_1a1383f66c1ca2c8fe428e7005c624fc76" kindref="member">subParamsCount</ref>++]<sp/>=<sp/>subOption;</highlight></codeline>
<codeline lineno="153"><highlight class="normal">}</highlight></codeline>
<codeline lineno="154"><highlight class="normal"></highlight></codeline>
<codeline lineno="155" refid="d6/d8e/Argx_8h_1a4a12dce73edcc011355f47d4543e32a6" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="d0/df9/Argx_8c_1a4a12dce73edcc011355f47d4543e32a6" kindref="member">argxcFindParam</ref>(<ref refid="d8/d40/structArgxc" kindref="compound">Argxc</ref><sp/>*argxc,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*</highlight><highlight class="keywordtype">id</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="156"><highlight class="normal">{</highlight></codeline>
<codeline lineno="157"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!argxc<sp/>||<sp/>!</highlight><highlight class="keywordtype">id</highlight><highlight class="normal">)<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>-1;</highlight></codeline>
<codeline lineno="158"><highlight class="normal"></highlight></codeline>
<codeline lineno="159"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>First<sp/>check<sp/>if<sp/>it&apos;s<sp/>a<sp/>main<sp/>parameter</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="160"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>i<sp/>=<sp/>0;<sp/>i<sp/>&lt;<sp/>argxc-&gt;<ref refid="d8/d40/structArgxc_1ad25d74e066fa21cb7db95f901f0eabe6" kindref="member">optionsCount</ref>;<sp/>i++)</highlight></codeline>
<codeline lineno="161"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="162"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(argxc-&gt;<ref refid="d8/d40/structArgxc_1af24c08ed9dab8ad9800393568097a848" kindref="member">options</ref>[i].<ref refid="d2/dcb/structArgxcOptions_1a595bdcea1b5696ffa5023c3319bf604c" kindref="member">id</ref><sp/>&amp;&amp;<sp/>strcmp(argxc-&gt;<ref refid="d8/d40/structArgxc_1af24c08ed9dab8ad9800393568097a848" kindref="member">options</ref>[i].<ref refid="d2/dcb/structArgxcOptions_1a595bdcea1b5696ffa5023c3319bf604c" kindref="member">id</ref>,<sp/></highlight><highlight class="keywordtype">id</highlight><highlight class="normal">)<sp/>==<sp/>0)</highlight></codeline>
<codeline lineno="163"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="164"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Check<sp/>if<sp/>this<sp/>main<sp/>parameter<sp/>exists<sp/>in<sp/>arguments</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="165"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>j<sp/>=<sp/>0;<sp/>j<sp/>&lt;<sp/>argxc-&gt;<ref refid="d8/d40/structArgxc_1a06a20f9bbf66ce13fb9ac6745a84de9e" kindref="member">mainArgsCount</ref>;<sp/>j++)</highlight></codeline>
<codeline lineno="166"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="167"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>((argxc-&gt;<ref refid="d8/d40/structArgxc_1af24c08ed9dab8ad9800393568097a848" kindref="member">options</ref>[i].<ref refid="d2/dcb/structArgxcOptions_1a1b2766df178647d8d72f9c4450e488b3" kindref="member">param</ref><sp/>&amp;&amp;<sp/>strcmp(argxc-&gt;<ref refid="d8/d40/structArgxc_1a666f9d971aaf4b9adfb18908a1205fda" kindref="member">mainArgs</ref>[j],<sp/>argxc-&gt;<ref refid="d8/d40/structArgxc_1af24c08ed9dab8ad9800393568097a848" kindref="member">options</ref>[i].<ref refid="d2/dcb/structArgxcOptions_1a1b2766df178647d8d72f9c4450e488b3" kindref="member">param</ref>)<sp/>==<sp/>0)<sp/>||</highlight></codeline>
<codeline lineno="168"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>(argxc-&gt;<ref refid="d8/d40/structArgxc_1af24c08ed9dab8ad9800393568097a848" kindref="member">options</ref>[i].<ref refid="d2/dcb/structArgxcOptions_1a4a0102388f796032fc500271d1f66dd6" kindref="member">sparam</ref><sp/>&amp;&amp;<sp/>strcmp(argxc-&gt;<ref refid="d8/d40/structArgxc_1a666f9d971aaf4b9adfb18908a1205fda" kindref="member">mainArgs</ref>[j],<sp/>argxc-&gt;<ref refid="d8/d40/structArgxc_1af24c08ed9dab8ad9800393568097a848" kindref="member">options</ref>[i].<ref refid="d2/dcb/structArgxcOptions_1a4a0102388f796032fc500271d1f66dd6" kindref="member">sparam</ref>)<sp/>==<sp/>0))</highlight></codeline>
<codeline lineno="169"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="170"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal">)i;</highlight></codeline>
<codeline lineno="171"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="172"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="173"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="174"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="175"><highlight class="normal"></highlight></codeline>
<codeline lineno="176"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Then<sp/>look<sp/>for<sp/>sub-parameters</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="177"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>i<sp/>=<sp/>0;<sp/>i<sp/>&lt;<sp/>argxc-&gt;<ref refid="d8/d40/structArgxc_1ad25d74e066fa21cb7db95f901f0eabe6" kindref="member">optionsCount</ref>;<sp/>i++)</highlight></codeline>
<codeline lineno="178"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="179"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="d2/dcb/structArgxcOptions" kindref="compound">ArgxcOptions</ref><sp/>*opt<sp/>=<sp/>&amp;argxc-&gt;<ref refid="d8/d40/structArgxc_1af24c08ed9dab8ad9800393568097a848" kindref="member">options</ref>[i];</highlight></codeline>
<codeline lineno="180"><highlight class="normal"></highlight></codeline>
<codeline lineno="181"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Check<sp/>if<sp/>the<sp/>parent<sp/>option<sp/>exists<sp/>in<sp/>the<sp/>arguments</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="182"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>parentExists<sp/>=<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="183"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>j<sp/>=<sp/>0;<sp/>j<sp/>&lt;<sp/>argxc-&gt;<ref refid="d8/d40/structArgxc_1a06a20f9bbf66ce13fb9ac6745a84de9e" kindref="member">mainArgsCount</ref>;<sp/>j++)</highlight></codeline>
<codeline lineno="184"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="185"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>((opt-&gt;<ref refid="d2/dcb/structArgxcOptions_1a1b2766df178647d8d72f9c4450e488b3" kindref="member">param</ref><sp/>&amp;&amp;<sp/>strcmp(argxc-&gt;<ref refid="d8/d40/structArgxc_1a666f9d971aaf4b9adfb18908a1205fda" kindref="member">mainArgs</ref>[j],<sp/>opt-&gt;<ref refid="d2/dcb/structArgxcOptions_1a1b2766df178647d8d72f9c4450e488b3" kindref="member">param</ref>)<sp/>==<sp/>0)<sp/>||</highlight></codeline>
<codeline lineno="186"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>(opt-&gt;<ref refid="d2/dcb/structArgxcOptions_1a4a0102388f796032fc500271d1f66dd6" kindref="member">sparam</ref><sp/>&amp;&amp;<sp/>strcmp(argxc-&gt;<ref refid="d8/d40/structArgxc_1a666f9d971aaf4b9adfb18908a1205fda" kindref="member">mainArgs</ref>[j],<sp/>opt-&gt;<ref refid="d2/dcb/structArgxcOptions_1a4a0102388f796032fc500271d1f66dd6" kindref="member">sparam</ref>)<sp/>==<sp/>0))</highlight></codeline>
<codeline lineno="187"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="188"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>parentExists<sp/>=<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="189"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="190"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="191"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="192"><highlight class="normal"></highlight></codeline>
<codeline lineno="193"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(parentExists)</highlight></codeline>
<codeline lineno="194"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="195"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Find<sp/>the<sp/>index<sp/>of<sp/>the<sp/>requested<sp/>sub-parameter</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="196"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>j<sp/>=<sp/>0;<sp/>j<sp/>&lt;<sp/>opt-&gt;<ref refid="d2/dcb/structArgxcOptions_1a1383f66c1ca2c8fe428e7005c624fc76" kindref="member">subParamsCount</ref>;<sp/>j++)</highlight></codeline>
<codeline lineno="197"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="198"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(opt-&gt;<ref refid="d2/dcb/structArgxcOptions_1a988e8b4509c28e594fb570bc6b2430c5" kindref="member">subParams</ref>[j].<ref refid="d2/dcb/structArgxcOptions_1a595bdcea1b5696ffa5023c3319bf604c" kindref="member">id</ref><sp/>&amp;&amp;<sp/>strcmp(opt-&gt;<ref refid="d2/dcb/structArgxcOptions_1a988e8b4509c28e594fb570bc6b2430c5" kindref="member">subParams</ref>[j].<ref refid="d2/dcb/structArgxcOptions_1a595bdcea1b5696ffa5023c3319bf604c" kindref="member">id</ref>,<sp/></highlight><highlight class="keywordtype">id</highlight><highlight class="normal">)<sp/>==<sp/>0)</highlight></codeline>
<codeline lineno="199"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="200"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal">)j;</highlight></codeline>
<codeline lineno="201"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="202"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="203"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="204"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="205"><highlight class="normal"></highlight></codeline>
<codeline lineno="206"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>-1;<sp/></highlight><highlight class="comment">//<sp/>Not<sp/>found</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="207"><highlight class="normal">}</highlight></codeline>
<codeline lineno="208"><highlight class="normal"></highlight></codeline>
<codeline lineno="209" refid="d6/d8e/Argx_8h_1a016fceae24303178985a8e047262bd5e" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="d0/df9/Argx_8c_1a016fceae24303178985a8e047262bd5e" kindref="member">argxcParamExists</ref>(<ref refid="d8/d40/structArgxc" kindref="compound">Argxc</ref><sp/>*argxc,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*</highlight><highlight class="keywordtype">id</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="210"><highlight class="normal">{</highlight></codeline>
<codeline lineno="211"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="d0/df9/Argx_8c_1a4a12dce73edcc011355f47d4543e32a6" kindref="member">argxcFindParam</ref>(argxc,<sp/></highlight><highlight class="keywordtype">id</highlight><highlight class="normal">)<sp/>&gt;=<sp/>0;</highlight></codeline>
<codeline lineno="212"><highlight class="normal">}</highlight></codeline>
<codeline lineno="213"><highlight class="normal"></highlight></codeline>
<codeline lineno="214" refid="d6/d8e/Argx_8h_1a6ef72f8e604109911e4315f6840febf9" refkind="member"><highlight class="normal"><ref refid="da/ddb/structArgxcParam" kindref="compound">ArgxcParam</ref><sp/><ref refid="d0/df9/Argx_8c_1a6ef72f8e604109911e4315f6840febf9" kindref="member">argxcGetParam</ref>(<ref refid="d8/d40/structArgxc" kindref="compound">Argxc</ref><sp/>*argxc,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*</highlight><highlight class="keywordtype">id</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="215"><highlight class="normal">{</highlight></codeline>
<codeline lineno="216"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="da/ddb/structArgxcParam" kindref="compound">ArgxcParam</ref><sp/>result<sp/>=<sp/>{</highlight><highlight class="keyword">false</highlight><highlight class="normal">,<sp/>NULL,<sp/>0};</highlight></codeline>
<codeline lineno="217"><highlight class="normal"></highlight></codeline>
<codeline lineno="218"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!argxc<sp/>||<sp/>!</highlight><highlight class="keywordtype">id</highlight><highlight class="normal"><sp/>||<sp/>argxc-&gt;<ref refid="d8/d40/structArgxc_1ae48ba4369d927bced0bc2b3eb76cc4e5" kindref="member">mainArgc</ref><sp/>&lt;=<sp/>1)</highlight></codeline>
<codeline lineno="219"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="220"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>result;</highlight></codeline>
<codeline lineno="221"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="222"><highlight class="normal"></highlight></codeline>
<codeline lineno="223"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>First,<sp/>check<sp/>if<sp/>this<sp/>is<sp/>a<sp/>top-level<sp/>option</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="224"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>i<sp/>=<sp/>0;<sp/>i<sp/>&lt;<sp/>argxc-&gt;<ref refid="d8/d40/structArgxc_1ad25d74e066fa21cb7db95f901f0eabe6" kindref="member">optionsCount</ref>;<sp/>i++)</highlight></codeline>
<codeline lineno="225"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="226"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="d2/dcb/structArgxcOptions" kindref="compound">ArgxcOptions</ref><sp/>*opt<sp/>=<sp/>&amp;argxc-&gt;<ref refid="d8/d40/structArgxc_1af24c08ed9dab8ad9800393568097a848" kindref="member">options</ref>[i];</highlight></codeline>
<codeline lineno="227"><highlight class="normal"></highlight></codeline>
<codeline lineno="228"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(opt-&gt;<ref refid="d2/dcb/structArgxcOptions_1a595bdcea1b5696ffa5023c3319bf604c" kindref="member">id</ref><sp/>&amp;&amp;<sp/>strcmp(opt-&gt;<ref refid="d2/dcb/structArgxcOptions_1a595bdcea1b5696ffa5023c3319bf604c" kindref="member">id</ref>,<sp/></highlight><highlight class="keywordtype">id</highlight><highlight class="normal">)<sp/>==<sp/>0)</highlight></codeline>
<codeline lineno="229"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="230"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Find<sp/>the<sp/>position<sp/>of<sp/>the<sp/>main<sp/>option<sp/>in<sp/>arguments</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="231"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>mainOptionPos<sp/>=<sp/>-1;</highlight></codeline>
<codeline lineno="232"><highlight class="normal"></highlight></codeline>
<codeline lineno="233"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>j<sp/>=<sp/>0;<sp/>j<sp/>&lt;<sp/>argxc-&gt;<ref refid="d8/d40/structArgxc_1a06a20f9bbf66ce13fb9ac6745a84de9e" kindref="member">mainArgsCount</ref>;<sp/>j++)</highlight></codeline>
<codeline lineno="234"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="235"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>((opt-&gt;<ref refid="d2/dcb/structArgxcOptions_1a1b2766df178647d8d72f9c4450e488b3" kindref="member">param</ref><sp/>&amp;&amp;<sp/>strcmp(argxc-&gt;<ref refid="d8/d40/structArgxc_1a666f9d971aaf4b9adfb18908a1205fda" kindref="member">mainArgs</ref>[j],<sp/>opt-&gt;<ref refid="d2/dcb/structArgxcOptions_1a1b2766df178647d8d72f9c4450e488b3" kindref="member">param</ref>)<sp/>==<sp/>0)<sp/>||</highlight></codeline>
<codeline lineno="236"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>(opt-&gt;<ref refid="d2/dcb/structArgxcOptions_1a4a0102388f796032fc500271d1f66dd6" kindref="member">sparam</ref><sp/>&amp;&amp;<sp/>strcmp(argxc-&gt;<ref refid="d8/d40/structArgxc_1a666f9d971aaf4b9adfb18908a1205fda" kindref="member">mainArgs</ref>[j],<sp/>opt-&gt;<ref refid="d2/dcb/structArgxcOptions_1a4a0102388f796032fc500271d1f66dd6" kindref="member">sparam</ref>)<sp/>==<sp/>0))</highlight></codeline>
<codeline lineno="237"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="238"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>result.<ref refid="da/ddb/structArgxcParam_1abc303d4cb26b086e53978a46071b9735" kindref="member">exists</ref><sp/>=<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="239"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>mainOptionPos<sp/>=<sp/>j;</highlight></codeline>
<codeline lineno="240"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="241"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="242"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="243"><highlight class="normal"></highlight></codeline>
<codeline lineno="244"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(result.<ref refid="da/ddb/structArgxcParam_1abc303d4cb26b086e53978a46071b9735" kindref="member">exists</ref>)</highlight></codeline>
<codeline lineno="245"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="246"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(opt-&gt;<ref refid="d2/dcb/structArgxcOptions_1add27505ea653aa67161a226f9daff3ca" kindref="member">hasSubParams</ref><sp/>||<sp/>opt-&gt;<ref refid="d2/dcb/structArgxcOptions_1ad36df6627ddcae7c469d92794d5a5ddc" kindref="member">hasAnySubParams</ref>)</highlight></codeline>
<codeline lineno="247"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="248"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Allocate<sp/>memory<sp/>for<sp/>sub-parameter<sp/>existence<sp/>array</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="249"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>result.<ref refid="da/ddb/structArgxcParam_1a6340456c0025fef27395bc30f3251986" kindref="member">subExistsCount</ref><sp/>=<sp/>opt-&gt;<ref refid="d2/dcb/structArgxcOptions_1a1383f66c1ca2c8fe428e7005c624fc76" kindref="member">subParamsCount</ref>;</highlight></codeline>
<codeline lineno="250"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>result.<ref refid="da/ddb/structArgxcParam_1af685e909c26495d1ee2b52acf80960d0" kindref="member">subExists</ref><sp/>=<sp/>malloc(result.<ref refid="da/ddb/structArgxcParam_1a6340456c0025fef27395bc30f3251986" kindref="member">subExistsCount</ref><sp/>*<sp/></highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(</highlight><highlight class="keywordtype">bool</highlight><highlight class="normal">));</highlight></codeline>
<codeline lineno="251"><highlight class="normal"></highlight></codeline>
<codeline lineno="252"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(result.<ref refid="da/ddb/structArgxcParam_1af685e909c26495d1ee2b52acf80960d0" kindref="member">subExists</ref>)</highlight></codeline>
<codeline lineno="253"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="254"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Check<sp/>each<sp/>sub-parameter</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="255"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>j<sp/>=<sp/>0;<sp/>j<sp/>&lt;<sp/>opt-&gt;<ref refid="d2/dcb/structArgxcOptions_1a1383f66c1ca2c8fe428e7005c624fc76" kindref="member">subParamsCount</ref>;<sp/>j++)</highlight></codeline>
<codeline lineno="256"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="257"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>subMatched<sp/>=<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="258"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="d2/dcb/structArgxcOptions" kindref="compound">ArgxcOptions</ref><sp/>*sub<sp/>=<sp/>&amp;opt-&gt;<ref refid="d2/dcb/structArgxcOptions_1a988e8b4509c28e594fb570bc6b2430c5" kindref="member">subParams</ref>[j];</highlight></codeline>
<codeline lineno="259"><highlight class="normal"></highlight></codeline>
<codeline lineno="260"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Look<sp/>for<sp/>sub-parameters<sp/>after<sp/>the<sp/>main<sp/>option</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="261"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>k<sp/>=<sp/>mainOptionPos<sp/>+<sp/>1;<sp/>k<sp/>&lt;<sp/>argxc-&gt;<ref refid="d8/d40/structArgxc_1a06a20f9bbf66ce13fb9ac6745a84de9e" kindref="member">mainArgsCount</ref>;<sp/>k++)</highlight></codeline>
<codeline lineno="262"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="263"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>((sub-&gt;<ref refid="d2/dcb/structArgxcOptions_1a1b2766df178647d8d72f9c4450e488b3" kindref="member">param</ref><sp/>&amp;&amp;<sp/>strcmp(argxc-&gt;<ref refid="d8/d40/structArgxc_1a666f9d971aaf4b9adfb18908a1205fda" kindref="member">mainArgs</ref>[k],<sp/>sub-&gt;<ref refid="d2/dcb/structArgxcOptions_1a1b2766df178647d8d72f9c4450e488b3" kindref="member">param</ref>)<sp/>==<sp/>0)<sp/>||</highlight></codeline>
<codeline lineno="264"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>(sub-&gt;<ref refid="d2/dcb/structArgxcOptions_1a4a0102388f796032fc500271d1f66dd6" kindref="member">sparam</ref><sp/>&amp;&amp;<sp/>strcmp(argxc-&gt;<ref refid="d8/d40/structArgxc_1a666f9d971aaf4b9adfb18908a1205fda" kindref="member">mainArgs</ref>[k],<sp/>sub-&gt;<ref refid="d2/dcb/structArgxcOptions_1a4a0102388f796032fc500271d1f66dd6" kindref="member">sparam</ref>)<sp/>==<sp/>0))</highlight></codeline>
<codeline lineno="265"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="266"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>subMatched<sp/>=<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="267"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="268"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="269"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="270"><highlight class="normal"></highlight></codeline>
<codeline lineno="271"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>result.<ref refid="da/ddb/structArgxcParam_1af685e909c26495d1ee2b52acf80960d0" kindref="member">subExists</ref>[j]<sp/>=<sp/>subMatched;</highlight></codeline>
<codeline lineno="272"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="273"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="274"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="275"><highlight class="normal"></highlight></codeline>
<codeline lineno="276"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>result;</highlight></codeline>
<codeline lineno="277"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="278"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="279"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="280"><highlight class="normal"></highlight></codeline>
<codeline lineno="281"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>If<sp/>not<sp/>found<sp/>as<sp/>top-level,<sp/>check<sp/>if<sp/>it&apos;s<sp/>a<sp/>sub-parameter</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="282"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>i<sp/>=<sp/>0;<sp/>i<sp/>&lt;<sp/>argxc-&gt;<ref refid="d8/d40/structArgxc_1ad25d74e066fa21cb7db95f901f0eabe6" kindref="member">optionsCount</ref>;<sp/>i++)</highlight></codeline>
<codeline lineno="283"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="284"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="d2/dcb/structArgxcOptions" kindref="compound">ArgxcOptions</ref><sp/>*opt<sp/>=<sp/>&amp;argxc-&gt;<ref refid="d8/d40/structArgxc_1af24c08ed9dab8ad9800393568097a848" kindref="member">options</ref>[i];</highlight></codeline>
<codeline lineno="285"><highlight class="normal"></highlight></codeline>
<codeline lineno="286"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Find<sp/>if<sp/>the<sp/>parent<sp/>option<sp/>exists<sp/>and<sp/>get<sp/>its<sp/>position</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="287"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>parentPos<sp/>=<sp/>-1;</highlight></codeline>
<codeline lineno="288"><highlight class="normal"></highlight></codeline>
<codeline lineno="289"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>j<sp/>=<sp/>0;<sp/>j<sp/>&lt;<sp/>argxc-&gt;<ref refid="d8/d40/structArgxc_1a06a20f9bbf66ce13fb9ac6745a84de9e" kindref="member">mainArgsCount</ref>;<sp/>j++)</highlight></codeline>
<codeline lineno="290"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="291"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>((opt-&gt;<ref refid="d2/dcb/structArgxcOptions_1a1b2766df178647d8d72f9c4450e488b3" kindref="member">param</ref><sp/>&amp;&amp;<sp/>strcmp(argxc-&gt;<ref refid="d8/d40/structArgxc_1a666f9d971aaf4b9adfb18908a1205fda" kindref="member">mainArgs</ref>[j],<sp/>opt-&gt;<ref refid="d2/dcb/structArgxcOptions_1a1b2766df178647d8d72f9c4450e488b3" kindref="member">param</ref>)<sp/>==<sp/>0)<sp/>||</highlight></codeline>
<codeline lineno="292"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>(opt-&gt;<ref refid="d2/dcb/structArgxcOptions_1a4a0102388f796032fc500271d1f66dd6" kindref="member">sparam</ref><sp/>&amp;&amp;<sp/>strcmp(argxc-&gt;<ref refid="d8/d40/structArgxc_1a666f9d971aaf4b9adfb18908a1205fda" kindref="member">mainArgs</ref>[j],<sp/>opt-&gt;<ref refid="d2/dcb/structArgxcOptions_1a4a0102388f796032fc500271d1f66dd6" kindref="member">sparam</ref>)<sp/>==<sp/>0))</highlight></codeline>
<codeline lineno="293"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="294"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>parentPos<sp/>=<sp/>j;</highlight></codeline>
<codeline lineno="295"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="296"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="297"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="298"><highlight class="normal"></highlight></codeline>
<codeline lineno="299"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(parentPos<sp/>&gt;=<sp/>0<sp/>&amp;&amp;<sp/>(opt-&gt;<ref refid="d2/dcb/structArgxcOptions_1add27505ea653aa67161a226f9daff3ca" kindref="member">hasSubParams</ref><sp/>||<sp/>opt-&gt;<ref refid="d2/dcb/structArgxcOptions_1ad36df6627ddcae7c469d92794d5a5ddc" kindref="member">hasAnySubParams</ref>))</highlight></codeline>
<codeline lineno="300"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="301"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Check<sp/>if<sp/>the<sp/>requested<sp/>sub-parameter<sp/>exists<sp/>after<sp/>the<sp/>parent</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="302"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>j<sp/>=<sp/>0;<sp/>j<sp/>&lt;<sp/>opt-&gt;<ref refid="d2/dcb/structArgxcOptions_1a1383f66c1ca2c8fe428e7005c624fc76" kindref="member">subParamsCount</ref>;<sp/>j++)</highlight></codeline>
<codeline lineno="303"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="304"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="d2/dcb/structArgxcOptions" kindref="compound">ArgxcOptions</ref><sp/>*sub<sp/>=<sp/>&amp;opt-&gt;<ref refid="d2/dcb/structArgxcOptions_1a988e8b4509c28e594fb570bc6b2430c5" kindref="member">subParams</ref>[j];</highlight></codeline>
<codeline lineno="305"><highlight class="normal"></highlight></codeline>
<codeline lineno="306"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(sub-&gt;<ref refid="d2/dcb/structArgxcOptions_1a595bdcea1b5696ffa5023c3319bf604c" kindref="member">id</ref><sp/>&amp;&amp;<sp/>strcmp(sub-&gt;<ref refid="d2/dcb/structArgxcOptions_1a595bdcea1b5696ffa5023c3319bf604c" kindref="member">id</ref>,<sp/></highlight><highlight class="keywordtype">id</highlight><highlight class="normal">)<sp/>==<sp/>0)</highlight></codeline>
<codeline lineno="307"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="308"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>k<sp/>=<sp/>parentPos<sp/>+<sp/>1;<sp/>k<sp/>&lt;<sp/>argxc-&gt;<ref refid="d8/d40/structArgxc_1a06a20f9bbf66ce13fb9ac6745a84de9e" kindref="member">mainArgsCount</ref>;<sp/>k++)</highlight></codeline>
<codeline lineno="309"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="310"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>((sub-&gt;<ref refid="d2/dcb/structArgxcOptions_1a1b2766df178647d8d72f9c4450e488b3" kindref="member">param</ref><sp/>&amp;&amp;<sp/>strcmp(argxc-&gt;<ref refid="d8/d40/structArgxc_1a666f9d971aaf4b9adfb18908a1205fda" kindref="member">mainArgs</ref>[k],<sp/>sub-&gt;<ref refid="d2/dcb/structArgxcOptions_1a1b2766df178647d8d72f9c4450e488b3" kindref="member">param</ref>)<sp/>==<sp/>0)<sp/>||</highlight></codeline>
<codeline lineno="311"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>(sub-&gt;<ref refid="d2/dcb/structArgxcOptions_1a4a0102388f796032fc500271d1f66dd6" kindref="member">sparam</ref><sp/>&amp;&amp;<sp/>strcmp(argxc-&gt;<ref refid="d8/d40/structArgxc_1a666f9d971aaf4b9adfb18908a1205fda" kindref="member">mainArgs</ref>[k],<sp/>sub-&gt;<ref refid="d2/dcb/structArgxcOptions_1a4a0102388f796032fc500271d1f66dd6" kindref="member">sparam</ref>)<sp/>==<sp/>0))</highlight></codeline>
<codeline lineno="312"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="313"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>result.<ref refid="da/ddb/structArgxcParam_1abc303d4cb26b086e53978a46071b9735" kindref="member">exists</ref><sp/>=<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="314"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="315"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="316"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="317"><highlight class="normal"></highlight></codeline>
<codeline lineno="318"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!result.<ref refid="da/ddb/structArgxcParam_1abc303d4cb26b086e53978a46071b9735" kindref="member">exists</ref><sp/>&amp;&amp;<sp/>(</highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal">)(parentPos<sp/>+<sp/>1)<sp/>&lt;<sp/>argxc-&gt;<ref refid="d8/d40/structArgxc_1a06a20f9bbf66ce13fb9ac6745a84de9e" kindref="member">mainArgsCount</ref>)</highlight></codeline>
<codeline lineno="319"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="320"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*nextArg<sp/>=<sp/>argxc-&gt;<ref refid="d8/d40/structArgxc_1a666f9d971aaf4b9adfb18908a1205fda" kindref="member">mainArgs</ref>[parentPos<sp/>+<sp/>1];</highlight></codeline>
<codeline lineno="321"><highlight class="normal"></highlight></codeline>
<codeline lineno="322"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>((sub-&gt;<ref refid="d2/dcb/structArgxcOptions_1a1b2766df178647d8d72f9c4450e488b3" kindref="member">param</ref><sp/>&amp;&amp;<sp/>strcmp(nextArg,<sp/>sub-&gt;<ref refid="d2/dcb/structArgxcOptions_1a1b2766df178647d8d72f9c4450e488b3" kindref="member">param</ref>)<sp/>==<sp/>0)<sp/>||</highlight></codeline>
<codeline lineno="323"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>(sub-&gt;<ref refid="d2/dcb/structArgxcOptions_1a4a0102388f796032fc500271d1f66dd6" kindref="member">sparam</ref><sp/>&amp;&amp;<sp/>strcmp(nextArg,<sp/>sub-&gt;<ref refid="d2/dcb/structArgxcOptions_1a4a0102388f796032fc500271d1f66dd6" kindref="member">sparam</ref>)<sp/>==<sp/>0))</highlight></codeline>
<codeline lineno="324"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="325"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>result.<ref refid="da/ddb/structArgxcParam_1abc303d4cb26b086e53978a46071b9735" kindref="member">exists</ref><sp/>=<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="326"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="327"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="328"><highlight class="normal"></highlight></codeline>
<codeline lineno="329"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Handle<sp/>any<sp/>sub-sub-parameters<sp/>if<sp/>they<sp/>exist</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="330"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(result.<ref refid="da/ddb/structArgxcParam_1abc303d4cb26b086e53978a46071b9735" kindref="member">exists</ref><sp/>&amp;&amp;<sp/>(sub-&gt;<ref refid="d2/dcb/structArgxcOptions_1add27505ea653aa67161a226f9daff3ca" kindref="member">hasSubParams</ref><sp/>||<sp/>sub-&gt;<ref refid="d2/dcb/structArgxcOptions_1ad36df6627ddcae7c469d92794d5a5ddc" kindref="member">hasAnySubParams</ref>))</highlight></codeline>
<codeline lineno="331"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="332"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>result.<ref refid="da/ddb/structArgxcParam_1a6340456c0025fef27395bc30f3251986" kindref="member">subExistsCount</ref><sp/>=<sp/>sub-&gt;<ref refid="d2/dcb/structArgxcOptions_1a1383f66c1ca2c8fe428e7005c624fc76" kindref="member">subParamsCount</ref>;</highlight></codeline>
<codeline lineno="333"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>result.<ref refid="da/ddb/structArgxcParam_1af685e909c26495d1ee2b52acf80960d0" kindref="member">subExists</ref><sp/>=<sp/>malloc(result.<ref refid="da/ddb/structArgxcParam_1a6340456c0025fef27395bc30f3251986" kindref="member">subExistsCount</ref><sp/>*<sp/></highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(</highlight><highlight class="keywordtype">bool</highlight><highlight class="normal">));</highlight></codeline>
<codeline lineno="334"><highlight class="normal"></highlight></codeline>
<codeline lineno="335"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(result.<ref refid="da/ddb/structArgxcParam_1af685e909c26495d1ee2b52acf80960d0" kindref="member">subExists</ref>)</highlight></codeline>
<codeline lineno="336"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="337"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>k<sp/>=<sp/>0;<sp/>k<sp/>&lt;<sp/>sub-&gt;<ref refid="d2/dcb/structArgxcOptions_1a1383f66c1ca2c8fe428e7005c624fc76" kindref="member">subParamsCount</ref>;<sp/>k++)</highlight></codeline>
<codeline lineno="338"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="339"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>subsubMatched<sp/>=<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="340"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="d2/dcb/structArgxcOptions" kindref="compound">ArgxcOptions</ref><sp/>*subsub<sp/>=<sp/>&amp;sub-&gt;<ref refid="d2/dcb/structArgxcOptions_1a988e8b4509c28e594fb570bc6b2430c5" kindref="member">subParams</ref>[k];</highlight></codeline>
<codeline lineno="341"><highlight class="normal"></highlight></codeline>
<codeline lineno="342"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>l<sp/>=<sp/>0;<sp/>l<sp/>&lt;<sp/>argxc-&gt;<ref refid="d8/d40/structArgxc_1a06a20f9bbf66ce13fb9ac6745a84de9e" kindref="member">mainArgsCount</ref>;<sp/>l++)</highlight></codeline>
<codeline lineno="343"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="344"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>((subsub-&gt;<ref refid="d2/dcb/structArgxcOptions_1a1b2766df178647d8d72f9c4450e488b3" kindref="member">param</ref><sp/>&amp;&amp;<sp/>strcmp(argxc-&gt;<ref refid="d8/d40/structArgxc_1a666f9d971aaf4b9adfb18908a1205fda" kindref="member">mainArgs</ref>[l],<sp/>subsub-&gt;<ref refid="d2/dcb/structArgxcOptions_1a1b2766df178647d8d72f9c4450e488b3" kindref="member">param</ref>)<sp/>==<sp/>0)<sp/>||</highlight></codeline>
<codeline lineno="345"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>(subsub-&gt;<ref refid="d2/dcb/structArgxcOptions_1a4a0102388f796032fc500271d1f66dd6" kindref="member">sparam</ref><sp/>&amp;&amp;<sp/>strcmp(argxc-&gt;<ref refid="d8/d40/structArgxc_1a666f9d971aaf4b9adfb18908a1205fda" kindref="member">mainArgs</ref>[l],<sp/>subsub-&gt;<ref refid="d2/dcb/structArgxcOptions_1a4a0102388f796032fc500271d1f66dd6" kindref="member">sparam</ref>)<sp/>==<sp/>0))</highlight></codeline>
<codeline lineno="346"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="347"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>subsubMatched<sp/>=<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="348"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="349"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="350"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="351"><highlight class="normal"></highlight></codeline>
<codeline lineno="352"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>result.<ref refid="da/ddb/structArgxcParam_1af685e909c26495d1ee2b52acf80960d0" kindref="member">subExists</ref>[k]<sp/>=<sp/>subsubMatched;</highlight></codeline>
<codeline lineno="353"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="354"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="355"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="356"><highlight class="normal"></highlight></codeline>
<codeline lineno="357"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>result;</highlight></codeline>
<codeline lineno="358"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="359"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="360"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="361"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="362"><highlight class="normal"></highlight></codeline>
<codeline lineno="363"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>result;</highlight></codeline>
<codeline lineno="364"><highlight class="normal">}</highlight></codeline>
<codeline lineno="365"><highlight class="normal"></highlight></codeline>
<codeline lineno="366" refid="d6/d8e/Argx_8h_1a0767a3dc8167a77aada7a52c4d0e9d22" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="d0/df9/Argx_8c_1a0767a3dc8167a77aada7a52c4d0e9d22" kindref="member">argxcGetSubParam</ref>(<ref refid="d8/d40/structArgxc" kindref="compound">Argxc</ref><sp/>*argxc,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="da/ddb/structArgxcParam" kindref="compound">ArgxcParam</ref><sp/>*param,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*</highlight><highlight class="keywordtype">id</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="367"><highlight class="normal">{</highlight></codeline>
<codeline lineno="368"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!argxc<sp/>||<sp/>!param<sp/>||<sp/>!</highlight><highlight class="keywordtype">id</highlight><highlight class="normal">)<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="369"><highlight class="normal"></highlight></codeline>
<codeline lineno="370"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>index<sp/>=<sp/><ref refid="d0/df9/Argx_8c_1a4a12dce73edcc011355f47d4543e32a6" kindref="member">argxcFindParam</ref>(argxc,<sp/></highlight><highlight class="keywordtype">id</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="371"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="d0/df9/Argx_8c_1a016fceae24303178985a8e047262bd5e" kindref="member">argxcParamExists</ref>(argxc,<sp/></highlight><highlight class="keywordtype">id</highlight><highlight class="normal">)<sp/>&amp;&amp;<sp/>param-&gt;<ref refid="da/ddb/structArgxcParam_1af685e909c26495d1ee2b52acf80960d0" kindref="member">subExists</ref><sp/>&amp;&amp;<sp/>index<sp/>&gt;=<sp/>0<sp/>&amp;&amp;<sp/></highlight></codeline>
<codeline lineno="372"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>(size_t)index<sp/>&lt;<sp/>param-&gt;subExistsCount<sp/>&amp;&amp;<sp/>param-&gt;<ref refid="da/ddb/structArgxcParam_1af685e909c26495d1ee2b52acf80960d0" kindref="member">subExists</ref>[index];</highlight></codeline>
<codeline lineno="373"><highlight class="normal">}</highlight></codeline>
<codeline lineno="374"><highlight class="normal"></highlight></codeline>
<codeline lineno="375" refid="d6/d8e/Argx_8h_1ad18963570800f99309c7ae551d09442b" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*<ref refid="d0/df9/Argx_8c_1ad18963570800f99309c7ae551d09442b" kindref="member">argxcCreateDocs</ref>(<ref refid="d8/d40/structArgxc" kindref="compound">Argxc</ref><sp/>*argxc,<sp/><ref refid="d9/d49/types_8h_1a0eb907e7e710ee24d66bd7b881999ebb" kindref="member">ArgxcStyle</ref><sp/>style,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*title,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*mainInfo)</highlight></codeline>
<codeline lineno="376"><highlight class="normal">{</highlight></codeline>
<codeline lineno="377"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!argxc)<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>NULL;</highlight></codeline>
<codeline lineno="378"><highlight class="normal"></highlight></codeline>
<codeline lineno="379"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>bufferSize<sp/>=<sp/>4096;</highlight></codeline>
<codeline lineno="380"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*contentStr<sp/>=<sp/>malloc(bufferSize);</highlight></codeline>
<codeline lineno="381"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!contentStr)<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>NULL;</highlight></codeline>
<codeline lineno="382"><highlight class="normal"></highlight></codeline>
<codeline lineno="383"><highlight class="normal"><sp/><sp/><sp/><sp/>contentStr[0]<sp/>=<sp/></highlight><highlight class="charliteral">&apos;\0&apos;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="384"><highlight class="normal"></highlight></codeline>
<codeline lineno="385"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(style<sp/>==<sp/><ref refid="d9/d49/types_8h_1a0eb907e7e710ee24d66bd7b881999ebba5926a1c4b95fe8294eee1ab316063d47" kindref="member">ARGX_STYLE_PROFESSIONAL</ref>)</highlight></codeline>
<codeline lineno="386"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="387"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>i<sp/>=<sp/>0;<sp/>i<sp/>&lt;<sp/>argxc-&gt;<ref refid="d8/d40/structArgxc_1ad25d74e066fa21cb7db95f901f0eabe6" kindref="member">optionsCount</ref>;<sp/>i++)</highlight></codeline>
<codeline lineno="388"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="389"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="d2/dcb/structArgxcOptions" kindref="compound">ArgxcOptions</ref><sp/>*opt<sp/>=<sp/>&amp;argxc-&gt;<ref refid="d8/d40/structArgxc_1af24c08ed9dab8ad9800393568097a848" kindref="member">options</ref>[i];</highlight></codeline>
<codeline lineno="390"><highlight class="normal"></highlight></codeline>
<codeline lineno="391"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Main<sp/>option<sp/>header<sp/>line</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="392"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>temp[512];</highlight></codeline>
<codeline lineno="393"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>snprintf(temp,<sp/></highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(temp),<sp/></highlight><highlight class="stringliteral">&quot;ID:<sp/>%s\n&quot;</highlight><highlight class="normal">,<sp/>opt-&gt;<ref refid="d2/dcb/structArgxcOptions_1a595bdcea1b5696ffa5023c3319bf604c" kindref="member">id</ref><sp/>?<sp/>opt-&gt;<ref refid="d2/dcb/structArgxcOptions_1a595bdcea1b5696ffa5023c3319bf604c" kindref="member">id</ref><sp/>:<sp/></highlight><highlight class="stringliteral">&quot;&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="394"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>strcat(contentStr,<sp/>temp);</highlight></codeline>
<codeline lineno="395"><highlight class="normal"></highlight></codeline>
<codeline lineno="396"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>snprintf(temp,<sp/></highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(temp),<sp/></highlight><highlight class="stringliteral">&quot;[<sp/>%s<sp/>|<sp/>%s&quot;</highlight><highlight class="normal">,<sp/></highlight></codeline>
<codeline lineno="397"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>opt-&gt;<ref refid="d2/dcb/structArgxcOptions_1a4a0102388f796032fc500271d1f66dd6" kindref="member">sparam</ref><sp/>?<sp/>opt-&gt;<ref refid="d2/dcb/structArgxcOptions_1a4a0102388f796032fc500271d1f66dd6" kindref="member">sparam</ref><sp/>:<sp/></highlight><highlight class="stringliteral">&quot;&quot;</highlight><highlight class="normal">,<sp/></highlight></codeline>
<codeline lineno="398"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>opt-&gt;<ref refid="d2/dcb/structArgxcOptions_1a1b2766df178647d8d72f9c4450e488b3" kindref="member">param</ref><sp/>?<sp/>opt-&gt;<ref refid="d2/dcb/structArgxcOptions_1a1b2766df178647d8d72f9c4450e488b3" kindref="member">param</ref><sp/>:<sp/></highlight><highlight class="stringliteral">&quot;&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="399"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>strcat(contentStr,<sp/>temp);</highlight></codeline>
<codeline lineno="400"><highlight class="normal"></highlight></codeline>
<codeline lineno="401"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(opt-&gt;<ref refid="d2/dcb/structArgxcOptions_1add27505ea653aa67161a226f9daff3ca" kindref="member">hasSubParams</ref><sp/>&amp;&amp;<sp/>opt-&gt;<ref refid="d2/dcb/structArgxcOptions_1a1383f66c1ca2c8fe428e7005c624fc76" kindref="member">subParamsCount</ref><sp/>&gt;<sp/>0)</highlight></codeline>
<codeline lineno="402"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="403"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>strcat(contentStr,<sp/></highlight><highlight class="stringliteral">&quot;<sp/>[<sp/>&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="404"><highlight class="normal"></highlight></codeline>
<codeline lineno="405"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>j<sp/>=<sp/>0;<sp/>j<sp/>&lt;<sp/>opt-&gt;<ref refid="d2/dcb/structArgxcOptions_1a1383f66c1ca2c8fe428e7005c624fc76" kindref="member">subParamsCount</ref>;<sp/>j++)</highlight></codeline>
<codeline lineno="406"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="407"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>strcat(contentStr,<sp/>opt-&gt;<ref refid="d2/dcb/structArgxcOptions_1a988e8b4509c28e594fb570bc6b2430c5" kindref="member">subParams</ref>[j].<ref refid="d2/dcb/structArgxcOptions_1a1b2766df178647d8d72f9c4450e488b3" kindref="member">param</ref><sp/>?<sp/>opt-&gt;<ref refid="d2/dcb/structArgxcOptions_1a988e8b4509c28e594fb570bc6b2430c5" kindref="member">subParams</ref>[j].<ref refid="d2/dcb/structArgxcOptions_1a1b2766df178647d8d72f9c4450e488b3" kindref="member">param</ref><sp/>:<sp/></highlight><highlight class="stringliteral">&quot;&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="408"><highlight class="normal"></highlight></codeline>
<codeline lineno="409"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(j<sp/>&lt;<sp/>opt-&gt;subParamsCount<sp/>-<sp/>1)</highlight></codeline>
<codeline lineno="410"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="411"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>strcat(contentStr,<sp/></highlight><highlight class="stringliteral">&quot;<sp/>|<sp/>&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="412"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(j<sp/>&lt;=<sp/>opt-&gt;subParamsCount)</highlight></codeline>
<codeline lineno="413"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="414"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>strcat(contentStr,<sp/></highlight><highlight class="stringliteral">&quot;<sp/>&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="415"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="416"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="417"><highlight class="normal"></highlight></codeline>
<codeline lineno="418"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>strcat(contentStr,<sp/></highlight><highlight class="stringliteral">&quot;]<sp/>]<sp/>&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="419"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="420"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>strcat(contentStr,<sp/></highlight><highlight class="stringliteral">&quot;<sp/>]<sp/>&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="421"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="422"><highlight class="normal"></highlight></codeline>
<codeline lineno="423"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>strcat(contentStr,<sp/>opt-&gt;<ref refid="d2/dcb/structArgxcOptions_1aa912383cc480f5009cac8058454e279b" kindref="member">info</ref><sp/>?<sp/>opt-&gt;<ref refid="d2/dcb/structArgxcOptions_1aa912383cc480f5009cac8058454e279b" kindref="member">info</ref><sp/>:<sp/></highlight><highlight class="stringliteral">&quot;&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="424"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>strcat(contentStr,<sp/></highlight><highlight class="stringliteral">&quot;\n&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="425"><highlight class="normal"></highlight></codeline>
<codeline lineno="426"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Print<sp/>all<sp/>sub-options</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="427"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(opt-&gt;<ref refid="d2/dcb/structArgxcOptions_1add27505ea653aa67161a226f9daff3ca" kindref="member">hasSubParams</ref><sp/>&amp;&amp;<sp/>opt-&gt;<ref refid="d2/dcb/structArgxcOptions_1a1383f66c1ca2c8fe428e7005c624fc76" kindref="member">subParamsCount</ref><sp/>&gt;<sp/>0)</highlight></codeline>
<codeline lineno="428"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="429"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>j<sp/>=<sp/>0;<sp/>j<sp/>&lt;<sp/>opt-&gt;<ref refid="d2/dcb/structArgxcOptions_1a1383f66c1ca2c8fe428e7005c624fc76" kindref="member">subParamsCount</ref>;<sp/>j++)</highlight></codeline>
<codeline lineno="430"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="431"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="d2/dcb/structArgxcOptions" kindref="compound">ArgxcOptions</ref><sp/>*sub<sp/>=<sp/>&amp;opt-&gt;<ref refid="d2/dcb/structArgxcOptions_1a988e8b4509c28e594fb570bc6b2430c5" kindref="member">subParams</ref>[j];</highlight></codeline>
<codeline lineno="432"><highlight class="normal"></highlight></codeline>
<codeline lineno="433"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Create<sp/>spacing<sp/>for<sp/>alignment</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="434"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>paramLen<sp/>=<sp/>opt-&gt;<ref refid="d2/dcb/structArgxcOptions_1a1b2766df178647d8d72f9c4450e488b3" kindref="member">param</ref><sp/>?<sp/>strlen(opt-&gt;<ref refid="d2/dcb/structArgxcOptions_1a1b2766df178647d8d72f9c4450e488b3" kindref="member">param</ref>)<sp/>:<sp/>0;</highlight></codeline>
<codeline lineno="435"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>k<sp/>=<sp/>0;<sp/>k<sp/>&lt;<sp/>paramLen;<sp/>k++)</highlight></codeline>
<codeline lineno="436"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="437"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>strcat(contentStr,<sp/></highlight><highlight class="stringliteral">&quot;<sp/>&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="438"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="439"><highlight class="normal"></highlight></codeline>
<codeline lineno="440"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>snprintf(temp,<sp/></highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(temp),<sp/></highlight><highlight class="stringliteral">&quot;<sp/><sp/>[<sp/>%s<sp/>|<sp/>%s<sp/>]<sp/>%s\n&quot;</highlight><highlight class="normal">,</highlight></codeline>
<codeline lineno="441"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>sub-&gt;<ref refid="d2/dcb/structArgxcOptions_1a4a0102388f796032fc500271d1f66dd6" kindref="member">sparam</ref><sp/>?<sp/>sub-&gt;<ref refid="d2/dcb/structArgxcOptions_1a4a0102388f796032fc500271d1f66dd6" kindref="member">sparam</ref><sp/>:<sp/></highlight><highlight class="stringliteral">&quot;&quot;</highlight><highlight class="normal">,</highlight></codeline>
<codeline lineno="442"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>sub-&gt;<ref refid="d2/dcb/structArgxcOptions_1a1b2766df178647d8d72f9c4450e488b3" kindref="member">param</ref><sp/>?<sp/>sub-&gt;<ref refid="d2/dcb/structArgxcOptions_1a1b2766df178647d8d72f9c4450e488b3" kindref="member">param</ref><sp/>:<sp/></highlight><highlight class="stringliteral">&quot;&quot;</highlight><highlight class="normal">,</highlight></codeline>
<codeline lineno="443"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>sub-&gt;<ref refid="d2/dcb/structArgxcOptions_1aa912383cc480f5009cac8058454e279b" kindref="member">info</ref><sp/>?<sp/>sub-&gt;<ref refid="d2/dcb/structArgxcOptions_1aa912383cc480f5009cac8058454e279b" kindref="member">info</ref><sp/>:<sp/></highlight><highlight class="stringliteral">&quot;&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="444"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>strcat(contentStr,<sp/>temp);</highlight></codeline>
<codeline lineno="445"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="446"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="447"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="448"><highlight class="normal"><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(style<sp/>==<sp/><ref refid="d9/d49/types_8h_1a0eb907e7e710ee24d66bd7b881999ebbad8465ee3943616d15c25e8b2ff2d06e2" kindref="member">ARGX_STYLE_SIMPLE</ref>)</highlight></codeline>
<codeline lineno="449"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="450"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>i<sp/>=<sp/>0;<sp/>i<sp/>&lt;<sp/>argxc-&gt;<ref refid="d8/d40/structArgxc_1ad25d74e066fa21cb7db95f901f0eabe6" kindref="member">optionsCount</ref>;<sp/>i++)</highlight></codeline>
<codeline lineno="451"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="452"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="d2/dcb/structArgxcOptions" kindref="compound">ArgxcOptions</ref><sp/>*opt<sp/>=<sp/>&amp;argxc-&gt;<ref refid="d8/d40/structArgxc_1af24c08ed9dab8ad9800393568097a848" kindref="member">options</ref>[i];</highlight></codeline>
<codeline lineno="453"><highlight class="normal"></highlight></codeline>
<codeline lineno="454"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>temp[256];</highlight></codeline>
<codeline lineno="455"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>snprintf(temp,<sp/></highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(temp),<sp/></highlight><highlight class="stringliteral">&quot;%s,<sp/>%s<sp/>-<sp/>%s\n&quot;</highlight><highlight class="normal">,</highlight></codeline>
<codeline lineno="456"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>opt-&gt;<ref refid="d2/dcb/structArgxcOptions_1a4a0102388f796032fc500271d1f66dd6" kindref="member">sparam</ref><sp/>?<sp/>opt-&gt;<ref refid="d2/dcb/structArgxcOptions_1a4a0102388f796032fc500271d1f66dd6" kindref="member">sparam</ref><sp/>:<sp/></highlight><highlight class="stringliteral">&quot;&quot;</highlight><highlight class="normal">,</highlight></codeline>
<codeline lineno="457"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>opt-&gt;<ref refid="d2/dcb/structArgxcOptions_1a1b2766df178647d8d72f9c4450e488b3" kindref="member">param</ref><sp/>?<sp/>opt-&gt;<ref refid="d2/dcb/structArgxcOptions_1a1b2766df178647d8d72f9c4450e488b3" kindref="member">param</ref><sp/>:<sp/></highlight><highlight class="stringliteral">&quot;&quot;</highlight><highlight class="normal">,</highlight></codeline>
<codeline lineno="458"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>opt-&gt;<ref refid="d2/dcb/structArgxcOptions_1aa912383cc480f5009cac8058454e279b" kindref="member">info</ref><sp/>?<sp/>opt-&gt;<ref refid="d2/dcb/structArgxcOptions_1aa912383cc480f5009cac8058454e279b" kindref="member">info</ref><sp/>:<sp/></highlight><highlight class="stringliteral">&quot;&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="459"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>strcat(contentStr,<sp/>temp);</highlight></codeline>
<codeline lineno="460"><highlight class="normal"></highlight></codeline>
<codeline lineno="461"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(opt-&gt;<ref refid="d2/dcb/structArgxcOptions_1add27505ea653aa67161a226f9daff3ca" kindref="member">hasSubParams</ref><sp/>&amp;&amp;<sp/>opt-&gt;<ref refid="d2/dcb/structArgxcOptions_1a1383f66c1ca2c8fe428e7005c624fc76" kindref="member">subParamsCount</ref><sp/>&gt;<sp/>0)</highlight></codeline>
<codeline lineno="462"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="463"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>j<sp/>=<sp/>0;<sp/>j<sp/>&lt;<sp/>opt-&gt;<ref refid="d2/dcb/structArgxcOptions_1a1383f66c1ca2c8fe428e7005c624fc76" kindref="member">subParamsCount</ref>;<sp/>j++)</highlight></codeline>
<codeline lineno="464"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="465"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="d2/dcb/structArgxcOptions" kindref="compound">ArgxcOptions</ref><sp/>*sub<sp/>=<sp/>&amp;opt-&gt;<ref refid="d2/dcb/structArgxcOptions_1a988e8b4509c28e594fb570bc6b2430c5" kindref="member">subParams</ref>[j];</highlight></codeline>
<codeline lineno="466"><highlight class="normal"></highlight></codeline>
<codeline lineno="467"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>snprintf(temp,<sp/></highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(temp),<sp/></highlight><highlight class="stringliteral">&quot;<sp/><sp/>%s,<sp/>%s<sp/>-<sp/>%s\n&quot;</highlight><highlight class="normal">,</highlight></codeline>
<codeline lineno="468"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>sub-&gt;<ref refid="d2/dcb/structArgxcOptions_1a4a0102388f796032fc500271d1f66dd6" kindref="member">sparam</ref><sp/>?<sp/>sub-&gt;<ref refid="d2/dcb/structArgxcOptions_1a4a0102388f796032fc500271d1f66dd6" kindref="member">sparam</ref><sp/>:<sp/></highlight><highlight class="stringliteral">&quot;&quot;</highlight><highlight class="normal">,</highlight></codeline>
<codeline lineno="469"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>sub-&gt;<ref refid="d2/dcb/structArgxcOptions_1a1b2766df178647d8d72f9c4450e488b3" kindref="member">param</ref><sp/>?<sp/>sub-&gt;<ref refid="d2/dcb/structArgxcOptions_1a1b2766df178647d8d72f9c4450e488b3" kindref="member">param</ref><sp/>:<sp/></highlight><highlight class="stringliteral">&quot;&quot;</highlight><highlight class="normal">,</highlight></codeline>
<codeline lineno="470"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>sub-&gt;<ref refid="d2/dcb/structArgxcOptions_1aa912383cc480f5009cac8058454e279b" kindref="member">info</ref><sp/>?<sp/>sub-&gt;<ref refid="d2/dcb/structArgxcOptions_1aa912383cc480f5009cac8058454e279b" kindref="member">info</ref><sp/>:<sp/></highlight><highlight class="stringliteral">&quot;&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="471"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>strcat(contentStr,<sp/>temp);</highlight></codeline>
<codeline lineno="472"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="473"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="474"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="475"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="476"><highlight class="normal"></highlight></codeline>
<codeline lineno="477"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Combine<sp/>title,<sp/>mainInfo,<sp/>and<sp/>content</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="478"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>titleLen<sp/>=<sp/>title<sp/>?<sp/>strlen(title)<sp/>:<sp/>0;</highlight></codeline>
<codeline lineno="479"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>mainInfoLen<sp/>=<sp/>mainInfo<sp/>?<sp/>strlen(mainInfo)<sp/>:<sp/>0;</highlight></codeline>
<codeline lineno="480"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>contentLen<sp/>=<sp/>strlen(contentStr);</highlight></codeline>
<codeline lineno="481"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>totalLen<sp/>=<sp/>titleLen<sp/>+<sp/>mainInfoLen<sp/>+<sp/>contentLen<sp/>+<sp/>10;<sp/></highlight><highlight class="comment">//<sp/>Extra<sp/>space<sp/>for<sp/>newlines</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="482"><highlight class="normal"></highlight></codeline>
<codeline lineno="483"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*result<sp/>=<sp/>malloc(totalLen);</highlight></codeline>
<codeline lineno="484"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!result)</highlight></codeline>
<codeline lineno="485"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="486"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>free(contentStr);<sp/>contentStr<sp/>=<sp/>NULL;</highlight></codeline>
<codeline lineno="487"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>NULL;</highlight></codeline>
<codeline lineno="488"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="489"><highlight class="normal"></highlight></codeline>
<codeline lineno="490"><highlight class="normal"><sp/><sp/><sp/><sp/>snprintf(result,<sp/>totalLen,<sp/></highlight><highlight class="stringliteral">&quot;%s\n%s\n%s&quot;</highlight><highlight class="normal">,</highlight></codeline>
<codeline lineno="491"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>title<sp/>?<sp/>title<sp/>:<sp/></highlight><highlight class="stringliteral">&quot;&quot;</highlight><highlight class="normal">,</highlight></codeline>
<codeline lineno="492"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>mainInfo<sp/>?<sp/>mainInfo<sp/>:<sp/></highlight><highlight class="stringliteral">&quot;&quot;</highlight><highlight class="normal">,</highlight></codeline>
<codeline lineno="493"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>contentStr);</highlight></codeline>
<codeline lineno="494"><highlight class="normal"></highlight></codeline>
<codeline lineno="495"><highlight class="normal"><sp/><sp/><sp/><sp/>free(contentStr);<sp/>contentStr<sp/>=<sp/>NULL;</highlight></codeline>
<codeline lineno="496"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>result;</highlight></codeline>
<codeline lineno="497"><highlight class="normal">}</highlight></codeline>
<codeline lineno="498"><highlight class="normal"></highlight></codeline>
<codeline lineno="499" refid="d6/d8e/Argx_8h_1a3f5733b4921f06fcfc46444313114b13" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="d0/df9/Argx_8c_1a3f5733b4921f06fcfc46444313114b13" kindref="member">argxcCompareArgs</ref>(<ref refid="d2/dcb/structArgxcOptions" kindref="compound">ArgxcOptions</ref><sp/>*options,<sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>optionsCount,<sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>**argv,<sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>argvCount)</highlight></codeline>
<codeline lineno="500"><highlight class="normal">{</highlight></codeline>
<codeline lineno="501"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!options<sp/>||<sp/>!argv)<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="502"><highlight class="normal"></highlight></codeline>
<codeline lineno="503"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>i<sp/>=<sp/>1;<sp/>i<sp/>&lt;<sp/>argvCount;<sp/>i++)</highlight></codeline>
<codeline lineno="504"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="505"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*arg<sp/>=<sp/>argv[i];</highlight></codeline>
<codeline lineno="506"><highlight class="normal"></highlight></codeline>
<codeline lineno="507"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>found<sp/>=<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="508"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>hasSubParams<sp/>=<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="509"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>hasAnySubParams<sp/>=<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="510"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="d2/dcb/structArgxcOptions" kindref="compound">ArgxcOptions</ref><sp/>*matchedOption<sp/>=<sp/>NULL;</highlight></codeline>
<codeline lineno="511"><highlight class="normal"></highlight></codeline>
<codeline lineno="512"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Find<sp/>the<sp/>matching<sp/>option</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="513"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>j<sp/>=<sp/>0;<sp/>j<sp/>&lt;<sp/>optionsCount;<sp/>j++)</highlight></codeline>
<codeline lineno="514"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="515"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>((options[j].sparam<sp/>&amp;&amp;<sp/>strcmp(options[j].sparam,<sp/>arg)<sp/>==<sp/>0)<sp/>||</highlight></codeline>
<codeline lineno="516"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>(options[j].param<sp/>&amp;&amp;<sp/>strcmp(options[j].param,<sp/>arg)<sp/>==<sp/>0))</highlight></codeline>
<codeline lineno="517"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="518"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>found<sp/>=<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="519"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>hasSubParams<sp/>=<sp/>options[j].<ref refid="d2/dcb/structArgxcOptions_1add27505ea653aa67161a226f9daff3ca" kindref="member">hasSubParams</ref>;</highlight></codeline>
<codeline lineno="520"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>hasAnySubParams<sp/>=<sp/>options[j].<ref refid="d2/dcb/structArgxcOptions_1ad36df6627ddcae7c469d92794d5a5ddc" kindref="member">hasAnySubParams</ref>;</highlight></codeline>
<codeline lineno="521"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>matchedOption<sp/>=<sp/>&amp;options[j];</highlight></codeline>
<codeline lineno="522"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="523"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="524"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="525"><highlight class="normal"></highlight></codeline>
<codeline lineno="526"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!found)<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="527"><highlight class="normal"></highlight></codeline>
<codeline lineno="528"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(hasSubParams<sp/>||<sp/>hasAnySubParams)</highlight></codeline>
<codeline lineno="529"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="530"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Check<sp/>if<sp/>there&apos;s<sp/>a<sp/>next<sp/>argument</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="531"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(i<sp/>+<sp/>1<sp/>&lt;<sp/>argvCount)</highlight></codeline>
<codeline lineno="532"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="533"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*nextArg<sp/>=<sp/>argv[i<sp/>+<sp/>1];</highlight></codeline>
<codeline lineno="534"><highlight class="normal"></highlight></codeline>
<codeline lineno="535"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Check<sp/>if<sp/>next<sp/>argument<sp/>is<sp/>a<sp/>sub-parameter</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="536"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>isSubParam<sp/>=<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="537"><highlight class="normal"></highlight></codeline>
<codeline lineno="538"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(nextArg<sp/>&amp;&amp;<sp/>strlen(nextArg)<sp/>&gt;<sp/>0<sp/>&amp;&amp;<sp/>nextArg[0]<sp/>!=<sp/></highlight><highlight class="charliteral">&apos;-&apos;</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="539"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="540"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Validate<sp/>if<sp/>it&apos;s<sp/>a<sp/>valid<sp/>sub-parameter</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="541"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>k<sp/>=<sp/>0;<sp/>k<sp/>&lt;<sp/>matchedOption-&gt;<ref refid="d2/dcb/structArgxcOptions_1a1383f66c1ca2c8fe428e7005c624fc76" kindref="member">subParamsCount</ref>;<sp/>k++)</highlight></codeline>
<codeline lineno="542"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="543"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>((matchedOption-&gt;<ref refid="d2/dcb/structArgxcOptions_1a988e8b4509c28e594fb570bc6b2430c5" kindref="member">subParams</ref>[k].<ref refid="d2/dcb/structArgxcOptions_1a1b2766df178647d8d72f9c4450e488b3" kindref="member">param</ref><sp/>&amp;&amp;<sp/>strcmp(matchedOption-&gt;<ref refid="d2/dcb/structArgxcOptions_1a988e8b4509c28e594fb570bc6b2430c5" kindref="member">subParams</ref>[k].<ref refid="d2/dcb/structArgxcOptions_1a1b2766df178647d8d72f9c4450e488b3" kindref="member">param</ref>,<sp/>nextArg)<sp/>==<sp/>0)<sp/>||</highlight></codeline>
<codeline lineno="544"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>(matchedOption-&gt;<ref refid="d2/dcb/structArgxcOptions_1a988e8b4509c28e594fb570bc6b2430c5" kindref="member">subParams</ref>[k].<ref refid="d2/dcb/structArgxcOptions_1a4a0102388f796032fc500271d1f66dd6" kindref="member">sparam</ref><sp/>&amp;&amp;<sp/>strcmp(matchedOption-&gt;<ref refid="d2/dcb/structArgxcOptions_1a988e8b4509c28e594fb570bc6b2430c5" kindref="member">subParams</ref>[k].<ref refid="d2/dcb/structArgxcOptions_1a4a0102388f796032fc500271d1f66dd6" kindref="member">sparam</ref>,<sp/>nextArg)<sp/>==<sp/>0))</highlight></codeline>
<codeline lineno="545"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="546"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>isSubParam<sp/>=<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="547"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="548"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="549"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="550"><highlight class="normal"></highlight></codeline>
<codeline lineno="551"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(isSubParam)</highlight></codeline>
<codeline lineno="552"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="553"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>i++;<sp/></highlight><highlight class="comment">//<sp/>Skip<sp/>the<sp/>sub-parameter</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="554"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(hasSubParams<sp/>||<sp/>hasAnySubParams)</highlight></codeline>
<codeline lineno="555"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="556"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="557"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="558"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(hasSubParams<sp/>||<sp/>hasAnySubParams)</highlight></codeline>
<codeline lineno="559"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="560"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="561"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="562"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="563"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="564"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="565"><highlight class="normal"></highlight></codeline>
<codeline lineno="566"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="567"><highlight class="normal">}</highlight></codeline>
<codeline lineno="568"><highlight class="normal"></highlight></codeline>
<codeline lineno="569"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Getters</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="570" refid="d6/d8e/Argx_8h_1a62e90d5a3e26834257bba4c68becfeb1" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>**<ref refid="d0/df9/Argx_8c_1a62e90d5a3e26834257bba4c68becfeb1" kindref="member">argxcGetMainArgs</ref>(<ref refid="d8/d40/structArgxc" kindref="compound">Argxc</ref><sp/>*argxc,<sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>*count)</highlight></codeline>
<codeline lineno="571"><highlight class="normal">{</highlight></codeline>
<codeline lineno="572"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!argxc<sp/>||<sp/>!count)<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>NULL;</highlight></codeline>
<codeline lineno="573"><highlight class="normal"></highlight></codeline>
<codeline lineno="574"><highlight class="normal"><sp/><sp/><sp/><sp/>*count<sp/>=<sp/>argxc-&gt;<ref refid="d8/d40/structArgxc_1a06a20f9bbf66ce13fb9ac6745a84de9e" kindref="member">mainArgsCount</ref>;</highlight></codeline>
<codeline lineno="575"><highlight class="normal"></highlight></codeline>
<codeline lineno="576"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Create<sp/>a<sp/>copy<sp/>of<sp/>the<sp/>array</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="577"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>**copy<sp/>=<sp/>malloc(argxc-&gt;<ref refid="d8/d40/structArgxc_1a06a20f9bbf66ce13fb9ac6745a84de9e" kindref="member">mainArgsCount</ref><sp/>*<sp/></highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(</highlight><highlight class="keywordtype">char</highlight><highlight class="normal">*));</highlight></codeline>
<codeline lineno="578"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!copy)<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>NULL;</highlight></codeline>
<codeline lineno="579"><highlight class="normal"></highlight></codeline>
<codeline lineno="580"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>i<sp/>=<sp/>0;<sp/>i<sp/>&lt;<sp/>argxc-&gt;<ref refid="d8/d40/structArgxc_1a06a20f9bbf66ce13fb9ac6745a84de9e" kindref="member">mainArgsCount</ref>;<sp/>i++)</highlight></codeline>
<codeline lineno="581"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="582"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>copy[i]<sp/>=<sp/><ref refid="d0/df9/Argx_8c_1a814b3298d81b070e52a987654d18d8a2" kindref="member">stringDuplicate</ref>(argxc-&gt;<ref refid="d8/d40/structArgxc_1a666f9d971aaf4b9adfb18908a1205fda" kindref="member">mainArgs</ref>[i]);</highlight></codeline>
<codeline lineno="583"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="584"><highlight class="normal"></highlight></codeline>
<codeline lineno="585"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>copy;</highlight></codeline>
<codeline lineno="586"><highlight class="normal">}</highlight></codeline>
<codeline lineno="587"><highlight class="normal"></highlight></codeline>
<codeline lineno="588" refid="d6/d8e/Argx_8h_1a11fea89d38b49b571ce4f4499d0289d0" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="d0/df9/Argx_8c_1a11fea89d38b49b571ce4f4499d0289d0" kindref="member">argxcGetArgc</ref>(<ref refid="d8/d40/structArgxc" kindref="compound">Argxc</ref><sp/>*argxc)</highlight></codeline>
<codeline lineno="589"><highlight class="normal">{</highlight></codeline>
<codeline lineno="590"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>argxc<sp/>?<sp/>argxc-&gt;<ref refid="d8/d40/structArgxc_1ae48ba4369d927bced0bc2b3eb76cc4e5" kindref="member">mainArgc</ref><sp/>:<sp/>0;</highlight></codeline>
<codeline lineno="591"><highlight class="normal">}</highlight></codeline>
<codeline lineno="592"><highlight class="normal"></highlight></codeline>
<codeline lineno="593" refid="d6/d8e/Argx_8h_1afb1cebd21f607dfbe19ed784ea0fc319" refkind="member"><highlight class="normal"><ref refid="d2/dcb/structArgxcOptions" kindref="compound">ArgxcOptions</ref><sp/>*<ref refid="d0/df9/Argx_8c_1afb1cebd21f607dfbe19ed784ea0fc319" kindref="member">argxcGetOptions</ref>(<ref refid="d8/d40/structArgxc" kindref="compound">Argxc</ref><sp/>*argxc,<sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>*count)</highlight></codeline>
<codeline lineno="594"><highlight class="normal">{</highlight></codeline>
<codeline lineno="595"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!argxc<sp/>||<sp/>!count)<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>NULL;</highlight></codeline>
<codeline lineno="596"><highlight class="normal"></highlight></codeline>
<codeline lineno="597"><highlight class="normal"><sp/><sp/><sp/><sp/>*count<sp/>=<sp/>argxc-&gt;<ref refid="d8/d40/structArgxc_1ad25d74e066fa21cb7db95f901f0eabe6" kindref="member">optionsCount</ref>;</highlight></codeline>
<codeline lineno="598"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>argxc-&gt;<ref refid="d8/d40/structArgxc_1af24c08ed9dab8ad9800393568097a848" kindref="member">options</ref>;<sp/></highlight><highlight class="comment">//<sp/>Return<sp/>direct<sp/>reference<sp/>(be<sp/>careful<sp/>with<sp/>modification)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="599"><highlight class="normal">}</highlight></codeline>
<codeline lineno="600"><highlight class="normal"></highlight></codeline>
<codeline lineno="601" refid="d6/d8e/Argx_8h_1a219a52257f1e47549f9fc15979b6c563" refkind="member"><highlight class="normal"></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*<ref refid="d0/df9/Argx_8c_1a219a52257f1e47549f9fc15979b6c563" kindref="member">argxcGetId</ref>(<ref refid="d8/d40/structArgxc" kindref="compound">Argxc</ref><sp/>*argxc)</highlight></codeline>
<codeline lineno="602"><highlight class="normal">{</highlight></codeline>
<codeline lineno="603"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>argxc<sp/>?<sp/>argxc-&gt;<ref refid="d8/d40/structArgxc_1aaa5a7528c35f7c26ff0c7283db33fe8b" kindref="member">id</ref><sp/>:<sp/>NULL;</highlight></codeline>
<codeline lineno="604"><highlight class="normal">}</highlight></codeline>
<codeline lineno="605"><highlight class="normal"></highlight></codeline>
<codeline lineno="606"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Utility<sp/>functions<sp/>for<sp/>memory<sp/>management</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="607" refid="d6/d8e/Argx_8h_1a5efc30ffddcc4d6ba7c2db7b8ab680ec" refkind="member"><highlight class="normal"><ref refid="d2/dcb/structArgxcOptions" kindref="compound">ArgxcOptions</ref><sp/><ref refid="d0/df9/Argx_8c_1a5efc30ffddcc4d6ba7c2db7b8ab680ec" kindref="member">argxcCreateOption</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*</highlight><highlight class="keywordtype">id</highlight><highlight class="normal">,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*param,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*sparam,<sp/></highlight></codeline>
<codeline lineno="608"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*info,<sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>hasSubParams,<sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>hasAnySubParams)</highlight></codeline>
<codeline lineno="609"><highlight class="normal">{</highlight></codeline>
<codeline lineno="610"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="d2/dcb/structArgxcOptions" kindref="compound">ArgxcOptions</ref><sp/>option<sp/>=<sp/>{0};</highlight></codeline>
<codeline lineno="611"><highlight class="normal"></highlight></codeline>
<codeline lineno="612"><highlight class="normal"><sp/><sp/><sp/><sp/>option.<ref refid="d2/dcb/structArgxcOptions_1a595bdcea1b5696ffa5023c3319bf604c" kindref="member">id</ref><sp/>=<sp/><ref refid="d0/df9/Argx_8c_1a814b3298d81b070e52a987654d18d8a2" kindref="member">stringDuplicate</ref>(</highlight><highlight class="keywordtype">id</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="613"><highlight class="normal"><sp/><sp/><sp/><sp/>option.<ref refid="d2/dcb/structArgxcOptions_1a1b2766df178647d8d72f9c4450e488b3" kindref="member">param</ref><sp/>=<sp/><ref refid="d0/df9/Argx_8c_1a814b3298d81b070e52a987654d18d8a2" kindref="member">stringDuplicate</ref>(param);</highlight></codeline>
<codeline lineno="614"><highlight class="normal"><sp/><sp/><sp/><sp/>option.<ref refid="d2/dcb/structArgxcOptions_1a4a0102388f796032fc500271d1f66dd6" kindref="member">sparam</ref><sp/>=<sp/><ref refid="d0/df9/Argx_8c_1a814b3298d81b070e52a987654d18d8a2" kindref="member">stringDuplicate</ref>(sparam);</highlight></codeline>
<codeline lineno="615"><highlight class="normal"><sp/><sp/><sp/><sp/>option.<ref refid="d2/dcb/structArgxcOptions_1aa912383cc480f5009cac8058454e279b" kindref="member">info</ref><sp/>=<sp/><ref refid="d0/df9/Argx_8c_1a814b3298d81b070e52a987654d18d8a2" kindref="member">stringDuplicate</ref>(info);</highlight></codeline>
<codeline lineno="616"><highlight class="normal"><sp/><sp/><sp/><sp/>option.<ref refid="d2/dcb/structArgxcOptions_1add27505ea653aa67161a226f9daff3ca" kindref="member">hasSubParams</ref><sp/>=<sp/>hasSubParams;</highlight></codeline>
<codeline lineno="617"><highlight class="normal"><sp/><sp/><sp/><sp/>option.<ref refid="d2/dcb/structArgxcOptions_1ad36df6627ddcae7c469d92794d5a5ddc" kindref="member">hasAnySubParams</ref><sp/>=<sp/>hasAnySubParams;</highlight></codeline>
<codeline lineno="618"><highlight class="normal"><sp/><sp/><sp/><sp/>option.<ref refid="d2/dcb/structArgxcOptions_1a988e8b4509c28e594fb570bc6b2430c5" kindref="member">subParams</ref><sp/>=<sp/>NULL;</highlight></codeline>
<codeline lineno="619"><highlight class="normal"><sp/><sp/><sp/><sp/>option.<ref refid="d2/dcb/structArgxcOptions_1a1383f66c1ca2c8fe428e7005c624fc76" kindref="member">subParamsCount</ref><sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="620"><highlight class="normal"></highlight></codeline>
<codeline lineno="621"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>option;</highlight></codeline>
<codeline lineno="622"><highlight class="normal">}</highlight></codeline>
<codeline lineno="623"><highlight class="normal"></highlight></codeline>
<codeline lineno="624" refid="d6/d8e/Argx_8h_1ad1a1c82ca55187361d24a03c5fb977e6" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="d0/df9/Argx_8c_1ad1a1c82ca55187361d24a03c5fb977e6" kindref="member">argxcFreeOption</ref>(<ref refid="d2/dcb/structArgxcOptions" kindref="compound">ArgxcOptions</ref><sp/>*option)</highlight></codeline>
<codeline lineno="625"><highlight class="normal">{</highlight></codeline>
<codeline lineno="626"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!option)<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="627"><highlight class="normal"></highlight></codeline>
<codeline lineno="628"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(option-&gt;<ref refid="d2/dcb/structArgxcOptions_1a595bdcea1b5696ffa5023c3319bf604c" kindref="member">id</ref>)</highlight></codeline>
<codeline lineno="629"><highlight class="normal"><sp/><sp/><sp/><sp/>{<sp/>free(option-&gt;<ref refid="d2/dcb/structArgxcOptions_1a595bdcea1b5696ffa5023c3319bf604c" kindref="member">id</ref>);<sp/>option-&gt;<ref refid="d2/dcb/structArgxcOptions_1a595bdcea1b5696ffa5023c3319bf604c" kindref="member">id</ref><sp/>=<sp/>NULL;<sp/>}</highlight></codeline>
<codeline lineno="630"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(option-&gt;<ref refid="d2/dcb/structArgxcOptions_1a1b2766df178647d8d72f9c4450e488b3" kindref="member">param</ref>)</highlight></codeline>
<codeline lineno="631"><highlight class="normal"><sp/><sp/><sp/><sp/>{<sp/>free(option-&gt;<ref refid="d2/dcb/structArgxcOptions_1a1b2766df178647d8d72f9c4450e488b3" kindref="member">param</ref>);<sp/>option-&gt;<ref refid="d2/dcb/structArgxcOptions_1a1b2766df178647d8d72f9c4450e488b3" kindref="member">param</ref><sp/>=<sp/>NULL;<sp/>}</highlight></codeline>
<codeline lineno="632"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(option-&gt;<ref refid="d2/dcb/structArgxcOptions_1a4a0102388f796032fc500271d1f66dd6" kindref="member">sparam</ref>)</highlight></codeline>
<codeline lineno="633"><highlight class="normal"><sp/><sp/><sp/><sp/>{<sp/>free(option-&gt;<ref refid="d2/dcb/structArgxcOptions_1a4a0102388f796032fc500271d1f66dd6" kindref="member">sparam</ref>);<sp/>option-&gt;<ref refid="d2/dcb/structArgxcOptions_1a4a0102388f796032fc500271d1f66dd6" kindref="member">sparam</ref><sp/>=<sp/>NULL;<sp/>}</highlight></codeline>
<codeline lineno="634"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(option-&gt;<ref refid="d2/dcb/structArgxcOptions_1aa912383cc480f5009cac8058454e279b" kindref="member">info</ref>)</highlight></codeline>
<codeline lineno="635"><highlight class="normal"><sp/><sp/><sp/><sp/>{<sp/>free(option-&gt;<ref refid="d2/dcb/structArgxcOptions_1aa912383cc480f5009cac8058454e279b" kindref="member">info</ref>);<sp/>option-&gt;<ref refid="d2/dcb/structArgxcOptions_1aa912383cc480f5009cac8058454e279b" kindref="member">info</ref><sp/>=<sp/>NULL;<sp/>}</highlight></codeline>
<codeline lineno="636"><highlight class="normal"></highlight></codeline>
<codeline lineno="637"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(option-&gt;<ref refid="d2/dcb/structArgxcOptions_1a988e8b4509c28e594fb570bc6b2430c5" kindref="member">subParams</ref>)</highlight></codeline>
<codeline lineno="638"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="639"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>i<sp/>=<sp/>0;<sp/>i<sp/>&lt;<sp/>option-&gt;<ref refid="d2/dcb/structArgxcOptions_1a1383f66c1ca2c8fe428e7005c624fc76" kindref="member">subParamsCount</ref>;<sp/>i++)</highlight></codeline>
<codeline lineno="640"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="641"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="d0/df9/Argx_8c_1ad1a1c82ca55187361d24a03c5fb977e6" kindref="member">argxcFreeOption</ref>(&amp;option-&gt;<ref refid="d2/dcb/structArgxcOptions_1a988e8b4509c28e594fb570bc6b2430c5" kindref="member">subParams</ref>[i]);</highlight></codeline>
<codeline lineno="642"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="643"><highlight class="normal"></highlight></codeline>
<codeline lineno="644"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>free(option-&gt;<ref refid="d2/dcb/structArgxcOptions_1a988e8b4509c28e594fb570bc6b2430c5" kindref="member">subParams</ref>);<sp/></highlight></codeline>
<codeline lineno="645"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>option-&gt;<ref refid="d2/dcb/structArgxcOptions_1a988e8b4509c28e594fb570bc6b2430c5" kindref="member">subParams</ref><sp/>=<sp/>NULL;</highlight></codeline>
<codeline lineno="646"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>option-&gt;<ref refid="d2/dcb/structArgxcOptions_1abe87d3c8fcdf1a843ea90652c78b5ed1" kindref="member">subParamsCapacity</ref><sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="647"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>option-&gt;<ref refid="d2/dcb/structArgxcOptions_1a1383f66c1ca2c8fe428e7005c624fc76" kindref="member">subParamsCount</ref><sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="648"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="649"><highlight class="normal"></highlight></codeline>
<codeline lineno="650"><highlight class="normal"><sp/><sp/><sp/><sp/>memset(option,<sp/>0,<sp/></highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(<ref refid="d2/dcb/structArgxcOptions" kindref="compound">ArgxcOptions</ref>));</highlight></codeline>
<codeline lineno="651"><highlight class="normal">}</highlight></codeline>
<codeline lineno="652"><highlight class="normal"></highlight></codeline>
<codeline lineno="653" refid="d6/d8e/Argx_8h_1a6798ce84afc7922cc08260fd52534b99" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="d0/df9/Argx_8c_1a6798ce84afc7922cc08260fd52534b99" kindref="member">argxcFreeParam</ref>(<ref refid="da/ddb/structArgxcParam" kindref="compound">ArgxcParam</ref><sp/>*param)</highlight></codeline>
<codeline lineno="654"><highlight class="normal">{</highlight></codeline>
<codeline lineno="655"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!param)<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="656"><highlight class="normal"></highlight></codeline>
<codeline lineno="657"><highlight class="normal"><sp/><sp/><sp/><sp/>free(param-&gt;<ref refid="da/ddb/structArgxcParam_1af685e909c26495d1ee2b52acf80960d0" kindref="member">subExists</ref>);<sp/>param-&gt;<ref refid="da/ddb/structArgxcParam_1af685e909c26495d1ee2b52acf80960d0" kindref="member">subExists</ref><sp/>=<sp/>NULL;</highlight></codeline>
<codeline lineno="658"><highlight class="normal"><sp/><sp/><sp/><sp/>memset(param,<sp/>0,<sp/></highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(<ref refid="da/ddb/structArgxcParam" kindref="compound">ArgxcParam</ref>));</highlight></codeline>
<codeline lineno="659"><highlight class="normal">}</highlight></codeline>
<codeline lineno="660"><highlight class="normal"></highlight></codeline>
<codeline lineno="661" refid="d6/d8e/Argx_8h_1a433f2018d5638506f50be3219c04ec71" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="d0/df9/Argx_8c_1a433f2018d5638506f50be3219c04ec71" kindref="member">argxcFreeStringArray</ref>(</highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>**array,<sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>count)</highlight></codeline>
<codeline lineno="662"><highlight class="normal">{</highlight></codeline>
<codeline lineno="663"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="d0/df9/Argx_8c_1a420b857128cfa7527dc66424a1ece935" kindref="member">freeStringArray</ref>(array,<sp/>count);</highlight></codeline>
<codeline lineno="664"><highlight class="normal">}</highlight></codeline>
<codeline lineno="665"><highlight class="normal"></highlight></codeline>
<codeline lineno="666"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Error<sp/>handling</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="667" refid="d6/d8e/Argx_8h_1aff55e2b9a01cc2b4d3bdd44264eef8bd" refkind="member"><highlight class="normal"><ref refid="d8/d54/structArgxcError" kindref="compound">ArgxcError</ref><sp/><ref refid="d0/df9/Argx_8c_1aff55e2b9a01cc2b4d3bdd44264eef8bd" kindref="member">argxcCreateError</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*type,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*error,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*help,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>code)</highlight></codeline>
<codeline lineno="668"><highlight class="normal">{</highlight></codeline>
<codeline lineno="669"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="d8/d54/structArgxcError" kindref="compound">ArgxcError</ref><sp/>err<sp/>=<sp/>{0};</highlight></codeline>
<codeline lineno="670"><highlight class="normal"></highlight></codeline>
<codeline lineno="671"><highlight class="normal"><sp/><sp/><sp/><sp/>err.<ref refid="d8/d54/structArgxcError_1ab4531054aa9750f66f0cae13f67365ad" kindref="member">type</ref><sp/>=<sp/><ref refid="d0/df9/Argx_8c_1a814b3298d81b070e52a987654d18d8a2" kindref="member">stringDuplicate</ref>(type);</highlight></codeline>
<codeline lineno="672"><highlight class="normal"><sp/><sp/><sp/><sp/>err.<ref refid="d8/d54/structArgxcError_1a88d100236636b2eb326025d527ad26f3" kindref="member">error</ref><sp/>=<sp/><ref refid="d0/df9/Argx_8c_1a814b3298d81b070e52a987654d18d8a2" kindref="member">stringDuplicate</ref>(error);</highlight></codeline>
<codeline lineno="673"><highlight class="normal"><sp/><sp/><sp/><sp/>err.<ref refid="d8/d54/structArgxcError_1a9e83392469b228017a3b6492392f68ad" kindref="member">help</ref><sp/>=<sp/><ref refid="d0/df9/Argx_8c_1a814b3298d81b070e52a987654d18d8a2" kindref="member">stringDuplicate</ref>(help);</highlight></codeline>
<codeline lineno="674"><highlight class="normal"><sp/><sp/><sp/><sp/>err.<ref refid="d8/d54/structArgxcError_1a617299f808dff4b2656bf04384e64bf9" kindref="member">code</ref><sp/>=<sp/>code;</highlight></codeline>
<codeline lineno="675"><highlight class="normal"></highlight></codeline>
<codeline lineno="676"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>err;</highlight></codeline>
<codeline lineno="677"><highlight class="normal">}</highlight></codeline>
<codeline lineno="678"><highlight class="normal"></highlight></codeline>
<codeline lineno="679" refid="d6/d8e/Argx_8h_1af46bf41910b18e11800500efd7e929fa" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="d0/df9/Argx_8c_1af46bf41910b18e11800500efd7e929fa" kindref="member">argxcFreeError</ref>(<ref refid="d8/d54/structArgxcError" kindref="compound">ArgxcError</ref><sp/>*error)</highlight></codeline>
<codeline lineno="680"><highlight class="normal">{</highlight></codeline>
<codeline lineno="681"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!error)<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="682"><highlight class="normal"></highlight></codeline>
<codeline lineno="683"><highlight class="normal"><sp/><sp/><sp/><sp/>free(error-&gt;<ref refid="d8/d54/structArgxcError_1ab4531054aa9750f66f0cae13f67365ad" kindref="member">type</ref>);<sp/>error-&gt;<ref refid="d8/d54/structArgxcError_1ab4531054aa9750f66f0cae13f67365ad" kindref="member">type</ref><sp/>=<sp/>NULL;</highlight></codeline>
<codeline lineno="684"><highlight class="normal"><sp/><sp/><sp/><sp/>free(error-&gt;<ref refid="d8/d54/structArgxcError_1a88d100236636b2eb326025d527ad26f3" kindref="member">error</ref>);<sp/>error-&gt;<ref refid="d8/d54/structArgxcError_1a88d100236636b2eb326025d527ad26f3" kindref="member">error</ref><sp/>=<sp/>NULL;</highlight></codeline>
<codeline lineno="685"><highlight class="normal"><sp/><sp/><sp/><sp/>free(error-&gt;<ref refid="d8/d54/structArgxcError_1a9e83392469b228017a3b6492392f68ad" kindref="member">help</ref>);<sp/>error-&gt;<ref refid="d8/d54/structArgxcError_1a9e83392469b228017a3b6492392f68ad" kindref="member">help</ref><sp/>=<sp/>NULL;</highlight></codeline>
<codeline lineno="686"><highlight class="normal"><sp/><sp/><sp/><sp/>memset(error,<sp/>0,<sp/></highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(<ref refid="d8/d54/structArgxcError" kindref="compound">ArgxcError</ref>));</highlight></codeline>
<codeline lineno="687"><highlight class="normal">}</highlight></codeline>
    </programlisting>
    <location file="src/Argx.c"/>
  </compounddef>
</doxygen>
